{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-proposal-purecall-no-state-accesses/470",
            "title": "EIP Proposal: PURECALL (no state accesses) ",
            "index": 470,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "1",
                    "likes": "0",
                    "time": "28/05/2018-20:42:16",
                    "content": "Was chatting with @pipermerriam about this idea, curious if there are existing EIPs or proposals for it. Basically, this proposal would be for a new calling opcode like STATICCALL that would ensure no state reads are occurring (along with state writes), and additionally that no environment variable reads are occurring (e.g. coinbase, msg.sender, etc.) The use of this would be for an additional degree of confidence in library calls not accessing state, inspired most prominently by Casper\u2019s \u201cpurity checker\u201d which ensures that the validator\u2019s signature code does not access these values and is a \u201cpure call\u201d. Let me know what you think, if there\u2019s no other EIPs and this is a good idea I will create one. ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.437963821892394
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "2",
                    "likes": "0",
                    "time": "28/05/2018-20:47:45",
                    "content": "This is similar:   github.com/ethereum/EIPs      Issue: New opcodes: SANDBOXED_CALL  \t \topened by MicahZoltu \ton 2016-06-19 \t \t \t  When a contract wants to call another contract, at the moment there is quite a bit of risk for the developer...         @pipermerriam was tossing around the idea of a more abstract opcode that allows you to describe the allowed accesses of the call via a list of flags. ",
                    "links": [
                        "https://github.com/MicahZoltu",
                        "https://github.com/ethereum/EIPs/issues/117",
                        "https://github.com/MicahZoltu",
                        "https://github.com/ethereum/EIPs/issues/117"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.045454545454545
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "3",
                    "likes": "0",
                    "time": "29/05/2018-04:42:52",
                    "content": "@axic mentioned this exact proposal on EIP195:   github.com/ethereum/EIPs       Create pure_call.md     by vbuterin   on 05:36AM - 26 Jan 17 UTC   2 commits   changed 1 files   with 23 additions   and 0 deletions.        We should revisit @vbuterin\u2019s proposal ",
                    "links": [
                        "https://github.com/vbuterin",
                        "https://github.com/ethereum/EIPs/pull/195",
                        "https://github.com/vbuterin",
                        "https://github.com/ethereum/EIPs/pull/195"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.25
                }
            ]
        }
    ],
    "group_index": "1159"
}