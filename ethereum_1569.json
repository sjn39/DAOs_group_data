{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-4675-multi-fractional-non-fungible-token-standard/8008",
            "title": "EIP-4675: Multi-Fractional Non-Fungible Token Standard ",
            "index": 8008,
            "category": [
                "Tokens"
            ],
            "tags": [
                "nft",
                "erc"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/DavidKim",
                    "index": "1",
                    "likes": "1",
                    "time": "16/01/2022-04:00:55",
                    "content": "Hi everyone, this is the discussions issue to discuss the newly propose EIP regarding Multi-Fractional Non-Fungible Token Standard. EIP-4675 This EIP was proposed to minimize redundant bytecode on the Ethereum blockchain by not having to deploy ERC-20 contract every time when fractionalizing an NFT. EIP-4675 is similar to the ERC-1155 token regarding _id distinguishing each token type, but different since each _id represents a distinct NFT. By calling setParentNFT() the contract verifies the ownership of NFT and adds a new token type. This is the reference implementation with a full-coverage test. Implementation Please, share your thoughts freely. Thank you. ",
                    "links": [
                        "https://github.com/PowerStream3604/multi-fnft"
                    ],
                    "GPT-summary": "The author of the post is introducing a newly proposed EIP regarding Multi-Fractional Non-Fungible Token Standard and is asking for feedback. The proposal aims to minimize redundant bytecode on the Ethereum blockchain by not having to deploy ERC-20 contract every time when fractionalizing an NFT. The author explains the proposal and provides a reference implementation with a full-coverage test. The post invites readers to share their thoughts freely.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.429292929292929
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "2",
                    "likes": "0",
                    "time": "24/01/2022-18:52:12",
                    "content": "Is there a front-running concern with setParentNFT? For example, I send CoolNft #442 to the MFNFT contract, then I call setParentNFT(CoolNft, 442, 100). Before my transaction is included, some third party calls setParentNFT(CoolNft, 442, 1).  Would it make more sense to write this EIP as a direct extension of EIP-1155? interface MFNFT is IERC1155 {     /**         @notice Sets the NFT as a new type token         @dev The contract itself should verify if the ownership of NFT is belongs to this contract itself with the `_parentNFTContractAddress` & `_parentNFTTokenId` before adding the token.         MUST revert if the same NFT is already registered.         MUST revert if `_parentNFTContractAddress` is address zero.         MUST revert if `_parentNFTContractAddress` is not ERC-721 compatible.         MUST revert if this contract itself is not the owner of the NFT.         MUST revert on any other error.         MUST emit `TokenAddition` event to reflect the token type addition.         @param _parentNFTContractAddress    NFT contract address         @param _parentNFTTokenId            NFT tokenID         @param _totalSupply                 Total token supply     */     function setParentNFT(address _parentNFTContractAddress, uint256 _parentNFTTokenId, uint256 _totalSupply) external;      /**         @notice Get the bool value which represents whether the NFT is already registered and fractionalized by this contract.         @param _parentNFTContractAddress    NFT contract address         @param _parentNFTTokenId            NFT tokenID         @return                             The bool value representing the whether the NFT is already registered.     */     function isRegistered(address _parentNFTContractAddress, uint256 _parentNFTTokenId) external view returns (bool); }  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party extending to proposal",
                        "None"
                    ],
                    "Sentiment": 5.3396464646464645
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/DavidKim",
                    "index": "3",
                    "likes": "0",
                    "time": "25/01/2022-01:35:03",
                    "content": "That\u2019s a good point. To prevent front-running issue the reference implementation includes onlyAdmin() modifier to only let the admin call the setParentNFT(). I also agree that notifying developers to consider front-running issues is a must! The only point of sameness with ERC-1155 is that this token standard uses _id to distinguish different token types. This token standard includes NFT ownership verification and many other features to receive and fractionalize the NFT. So, I considered it better to be a separate token standard. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.7875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "4",
                    "likes": "0",
                    "time": "25/01/2022-02:00:25",
                    "content": "    DavidKim:  That\u2019s a good point. To prevent front-running issue the reference implementation includes onlyAdmin() modifier to only let the admin call the setParentNFT(). I also agree that notifying developers to consider front-running issues is a must!   Interesting. I assumed the owner who deposited the NFT would initially receive all of the fractionalized tokens and get to set the totalSupply, not an admin.     DavidKim:  The only point of sameness with ERC-1155 is that this token standard uses _id to distinguish different token types. This token standard includes NFT ownership verification and many other features to receive and fractionalize the NFT.   I\u2019m not sure what you mean exactly. Doesn\u2019t the MFNFT also inherit all the functions for transferring, querying balance, etc? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.485576923076923
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/julesl23",
                    "index": "5",
                    "likes": "0",
                    "time": "26/01/2022-23:43:30",
                    "content": "In my opinion just have an extension to ERC-1155 as suggested by @SamWilsn The simpler, the more chance for adoption. There\u2019s a whole bunch of duplication to ERC-1155 anyway, like the transfer functions and balances of multi tokens etc. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/DavidKim",
                    "index": "6",
                    "likes": "0",
                    "time": "13/02/2022-08:00:44",
                    "content": "  In the case of the reference implementation, only admin has the right to fractionalize the token. However, it would definitely depend on the implementation. We could also open the possibilities for projects to implement it by handling transfer & fractionalization in an atomic transaction. (all possibilities are open).   Yeah(also for ERC-20), but I think that it would be worth mentioning the other capabilities of NFT fractionalization on top of ERC-1155.   ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.600446428571429
                }
            ]
        }
    ],
    "group_index": "1569"
}