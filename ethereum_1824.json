{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/erc-5247-executable-proposal-standard/9938",
            "title": "ERC-5247: Executable Proposal Standard ",
            "index": 9938,
            "category": [
                "EIPs"
            ],
            "tags": [
                "governance",
                "dao",
                "erc"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "1",
                    "likes": "0",
                    "time": "14/07/2022-00:45:16",
                    "content": "Propose a standard for executable proposal.  github.com/ethereum/EIPs         ERC-5247: Executable Proposal Standard   ethereum:master \u2190 xinbenlv:patch-14            opened 06:13PM - 13 Jul 22 UTC               xinbenlv             +72 -0       When opening a pull request to submit a new EIP, please use the suggested templa\u2026te: https://github.com/ethereum/EIPs/blob/master/eip-template.md  We have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:   - The PR edits only existing draft PRs.  - The build passes.  - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside <triangular brackets>.  - If matching on email address, the email address is the one publicly listed on your GitHub profile.       ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/5247",
                        "https://github.com/xinbenlv",
                        "https://github.com/ethereum/EIPs/pull/5247/files",
                        "https://github.com/ethereum/EIPs/pull/5247",
                        "https://ethereum-magicians.org/t/eip-1202-voting-interface-discussion-thread/11484"
                    ],
                    "GPT-summary": "The post proposes a standard for executable proposals and provides a template for submitting a new EIP. The author also mentions a GitHub bot that automatically merges some PRs if certain criteria are met. The post may be of interest to those who want to understand the proposed standard or provide feedback on it.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Change to proposal pipeline",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.250463821892394
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/numtel",
                    "index": "2",
                    "likes": "1",
                    "time": "25/08/2022-00:13:38",
                    "content": "Interesting proposal. I implemented a multi-transaction proposal election system a few months ago for my democratic.capital website in the following contract:   github.com   numtel/democratic-capital/blob/master/contracts/ElectionBase.sol // SPDX-License-Identifier: MIT pragma solidity 0.8.13;  import \"./AddressSet.sol\"; using AddressSet for AddressSet.Set; import \"./VoteSet.sol\"; using VoteSet for VoteSet.Data; import \"./BytesLib.sol\"; using BytesLib for bytes;  import \"./ChildBase.sol\";  abstract contract ElectionBase is ChildBase {   mapping(address => VoteSet.Data) elections;   mapping(address => bytes[]) invokeData;   AddressSet.Set proposals;   bytes[] public allowedInvokePrefixes;    struct ProposalDetails {     address key;       This file has been truncated. show original      One of the key features that I added was to allow proposals to interact with contracts deployed from factories within the same proposal by implementing an address rewriter. I\u2019m not saying it\u2019s a perfect implementation but it seems very useful when allowing multiple transactions in a proposal.   github.com   numtel/democratic-capital/blob/master/contracts/InvokeRewriter.sol // SPDX-License-Identifier: MIT pragma solidity 0.8.13; import \"./IVerifiedGroupFactory.sol\";  import \"./BytesLib.sol\"; using BytesLib for bytes;  contract InvokeRewriter {   function rewrite(bytes memory data, IVerifiedGroupFactory origin, address group, uint startChildCount) external view returns(address, bytes memory) {     for(uint i = 0; i < data.length - 20; i++) {       uint point = addrIndex(uint8(data[i]));       if(point != 255 &&          data[i] == data[i+1] &&          data[i] == data[i+2] &&          data[i] == data[i+3] &&          data[i] == data[i+4] &&          data[i] == data[i+5] &&          data[i] == data[i+6] &&          data[i] == data[i+7] &&          data[i] == data[i+8] &&       This file has been truncated. show original      See my documentation for an example use case of these contracts: democratic.capital/docs/create-proposal.html ",
                    "links": [
                        "https://github.com/numtel/democratic-capital/blob/master/contracts/ElectionBase.sol",
                        "https://github.com/numtel/democratic-capital/blob/master/contracts/ElectionBase.sol",
                        "https://github.com/numtel/democratic-capital/blob/master/contracts/InvokeRewriter.sol",
                        "https://github.com/numtel/democratic-capital/blob/master/contracts/InvokeRewriter.sol",
                        "https://github.com/numtel/democratic-capital/blob/master/contracts/InvokeRewriter.sol"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.938461538461538
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "3",
                    "likes": "0",
                    "time": "06/09/2022-20:18:50",
                    "content": "Thank you for the suggestion. Let me take a look ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "1824"
}