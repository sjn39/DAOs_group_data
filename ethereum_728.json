{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/dapplets-rethinking-dapp-architecture-for-better-adoption-and-security/2799",
            "title": "Dapplets: Rethinking Dapp Architecture for better adoption and security ",
            "index": 2799,
            "category": [
                "Wallets"
            ],
            "tags": [
                "ux",
                "wallet",
                "dapp",
                "dapplets"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "1",
                    "likes": "13",
                    "time": "02/03/2019-18:09:47",
                    "content": "Last Update from 25.03.2019: full medium article is here: Dapplets (part 1): introduce new  Dapp architecture for better UX and security Any comments and critic are welcome! TG: \u201cDapplets and Secure Signing\u201d ============ Hello all!  1. Look at current dapp ux critically:  image1253\u00d71108 225 KB  We will see multiple drawbacks:   Wallet is unable to present all the information required for signer to make a solid accept/reject decision. The WYSIWYS principle (WhatYouSee-is-WhatYouSign) is broken now.   We are unable to reach web2 (legacy) sites because they do not implement any web3 logic. This is one of reasons why we are trying to reinvent wheels like twitter and facebook from scratch.   The root cause is in the Dapp architecture we have adopted from very beginning. We inject web3 for transaction processing into the website (Dapp) which is inherently unsafe environment with very limited chances for audit. That is why we use now wallets for Tx verification, running in more secure environment than Dapps. Dapp Architecture based on web3 injection doesn\u2019t support wallets properly. Lets try re-invent it.  2. Let us imagine better UX.  image1246\u00d71087 253 KB  Our gains:  We can let Wallet present exact we would like to sign. Make WYSIWYS great again   Because we handle Tx processing in Wallet and not in the Dapp, we can reach legacy sites like twitter now. Not all, but many of them: we need create a control injector for that.  image1370\u00d71015 226 KB     3. How it could work? We need let wallets load and render small Dapps (let us call it Dapplets) depending on current context and action. A Dapplet containter will make necessary security checks and audit status. More over it will present more info about Tx and Dapplet in the Header and Footer for better security.  image1680\u00d71284 422 KB  We will probably reuse some extended version of WalletConnect  image2014\u00d71522 510 KB  Disclaimer: There are security challenges here, but I believe they can be solved.  Current state: PoC based on Metamask is mostly implemented. Architecture and Security is still a hot topic.  Summary: A lot of thanks to @ligi and @pedrouid for review and critic. Special thanks to @danfinlay and Metamask Team for great product and their openness. If you have any critic, please let me know. I love fail-fast. We will come to Paris for Council, Hackathon and EthCC. let us talk in details. ",
                    "links": [
                        "https://t.me/joinchat/DvCrSRPUuDP6Y8QvppyXcw",
                        "https://ethereum-magicians.org/uploads/default/original/2X/d/dfbf815caefb58d3a1888e62f934fa56680d9915.png",
                        "https://ethereum-magicians.org/uploads/default/original/2X/2/22783370a3a3fc0557292fb0829ba36df2303442.png",
                        "https://ethereum-magicians.org/uploads/default/original/2X/c/c61b6ae6f4de79df246c6e485d0e440c8ce1c513.png",
                        "https://ethereum-magicians.org/uploads/default/original/2X/1/1fed675a4fa03ac679c50ae808cc5298f6b15f8d.png",
                        "https://ethereum-magicians.org/uploads/default/original/2X/8/80c2e0e8663478301d5c0cf0ad20c969c01f8157.png",
                        "https://ethereum-magicians.org/t/web3-login-permissions/3583/6",
                        "https://ethereum-magicians.org/t/dapplets-part2-project-status-and-standard-architecture/3455",
                        "https://ethereum-magicians.org/t/dapplets-call-for-related-works/2903",
                        "https://ethereum-magicians.org/t/dapplets-sowa-secured-open-wallet-architecture/4049"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.037581168831169
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/hellwolf",
                    "index": "2",
                    "likes": "4",
                    "time": "03/03/2019-13:59:37",
                    "content": "The need for auditing makes a new type of hudle of adoption. I am curious what do you think of adding a restricted presentation layer (that it doesn\u2019t allow mangling the original data visually) to https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md instead? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.514204545454545
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/weijiekoh",
                    "index": "3",
                    "likes": "1",
                    "time": "03/03/2019-15:16:44",
                    "content": "Throwing my hat in the ring here: https://github.com/weijiekoh/eip-typed-data-translation/blob/master/EIPS/eip-typed-data-translation.md It\u2019s an idea for a standard way to convert EIP712 typed data into natural language. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Spaded",
                    "index": "4",
                    "likes": "1",
                    "time": "03/03/2019-15:22:59",
                    "content": "I\u2019m all in favor for this idea. Just off the top of my head\u2026 can we make it as easy as: 1.Dapp sends a call to Web3.dapplet({myDappletObj}) var myDappletObj = {     name: \"MyDapp\", //name of your dapp     url: \"urlOfYourDapp\", //url for your domain here for general registery     category: ERC20, //type of asset for display purposes     message: { //your dapp object to be displayed     asset_name: \"My CryptoKitty\", //optional     asset_image: \"image.com\", //optional     traits: [...]  //optional     message: \"Hello bob\"  //optional for any other types     ...///any other fields for the category types supported      },     trasactionObj: {...txData} //pass in normal transaction data }  Where myDappletObj contains information similar to what a transaction contains, except it has extra data feeding it the object of the dapplet. Given the use of ERCs, we can accept ERCs transfers, general info such as names, images, ERC-721 assets, or DAO type interactions. Where every interaction is generalized and you are feeding a standard 1 of X number of possible type of widgets into the wallet.  Wallet then displays what was given in a limited form, just as it does with a transaction now. User sees the proper info and accepts.  I\u2019d love to see this happen. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.753306878306878
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "5",
                    "likes": "0",
                    "time": "03/03/2019-16:48:50",
                    "content": "Guys, sorry for delayed response. I am busy preparing myself for Ethereum Magicians Council tomorrow - will answer in few hours. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.9999999999999996
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "6",
                    "likes": "4",
                    "time": "03/03/2019-16:54:54",
                    "content": "I very much like the concept, and am mostly concerned with the security of the implementation, and am interested to see the code. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.683333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tbarker",
                    "index": "7",
                    "likes": "0",
                    "time": "03/03/2019-17:50:04",
                    "content": "I\u2019d see it as a more visual version of natspec notices [https://github.com/ethereum/wiki/wiki/Ethereum-Natural-Specification-Format]. I think the important thing is that it be determinable what DApplet code was running at any given block. Perhaps the default is that DApplets are immutable and deployed at the same time as the contract itself? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/androolloyd",
                    "index": "8",
                    "likes": "1",
                    "time": "03/03/2019-19:48:15",
                    "content": "This is great, I have been working on a concept called \u201cSmart Widgets\u201d which sound a lot like dApplets, but they are react-native components. The concept is similar in that expression actions should be brought to the wallet for rendering and signing and then relayed back to the network. The end goal of giving developers access to a sandboxed environment where there is an exposed web3 object for them to interact with. Will be following intently. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.178571428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "9",
                    "likes": "0",
                    "time": "04/03/2019-00:00:20",
                    "content": "    hellwolf:  The need for auditing makes a new type of hudle of adoption.   I have slightly another angle of view: While contract audit became usual and desired, the dapp audit is still not in focus. This is because of inherent trade-off between UX and Security. Most projects currently follow User expectations and prefer UX at expenses of Security. I proposed to extract security sensitive parts of Dapps into Dapplets which are much smaller, utilize simple UI and can be executed in restricted environment. That makes Dapplet audit even possible. Dapplet audit could become part of contract audit and will not create additional obstacle for adoption. If some project doesn\u2019t not provide an audit, it could implement all UI as usual in a solid Dapp and without any Dapplets. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.03168044077135
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "10",
                    "likes": "0",
                    "time": "04/03/2019-00:09:43",
                    "content": "    hellwolf:  I am curious what do you think of adding a restricted presentation layer (that it doesn\u2019t allow mangling the original data visually) to   Yes, it could be thought as presentation layer to EIP-712 although not instead, but as an additional layer. I confirm, I need to think deeper about EIP-712, but currently I think, the EIP targets another problem: it creates unambiguously (injective) signatures, which can not be later interpreted as valid in another semantic context. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.2749999999999995
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "11",
                    "likes": "0",
                    "time": "04/03/2019-00:45:41",
                    "content": "    weijiekoh:  It\u2019s an idea for a standard way to convert EIP712 typed data into natural language.   Yeah, It is a valuable input, thank you! I have similar template based way of thinking about visual layer, but I would more strictly separate calculations from data. I would be interested in detailed discussion.     Spaded:  Web3.dapplet({myDappletObj}) \u2026 trasactionObj: {\u2026txData} //pass in normal transaction data   I would completely replace the txData with json object. It makes no sense to construct txData in less trusted environment like Dapp in browser and then try to recover corresponding meta-data from passed txData in Wallet. This architecture was introduces years ago because of convenience and simplicity but it doesn\u2019t fit security requirements and should be deprecated, IMHO. It should be the Wallet, who should be responsible to construct txData based on parameters passed or loaded from other trusted sources.     tbarker:  \u2026 and deployed at the same time as the contract itself?   I don\u2019t think it is necessary, but same-origin is a good security note. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.524509803921569
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tbarker",
                    "index": "12",
                    "likes": "0",
                    "time": "04/03/2019-08:01:01",
                    "content": "I was imagining the DApplet being represented as a hash and loaded from IPFS. Wallet is directed to a certain smart contract, queries the contract to find the hash of the canonical DApplet, and then loads it. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.071428571428571
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Spaded",
                    "index": "13",
                    "likes": "0",
                    "time": "04/03/2019-09:23:57",
                    "content": "Yes ofc the data can be pulled wallet side. Was just giving an example that we would include the bare minimum that is included now, plus the extra additional data. My concern for requiring these dapplets to be hosted or related to the smart contract, is that, once a dapp is deployed, a new dapple may be wanted to be used. Also dapplets for 721 assets and other non traditional assets most likely need information from off chain to be included within the information passed to the dapplet ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.4309163059163055
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "14",
                    "likes": "0",
                    "time": "04/03/2019-16:26:50",
                    "content": "    tbarker:  queries the contract to find the hash of the canonical DApplet, and then loads it.   Yes, but quering the smart contract is not the only one way to get a trusted dapplet. The trust for 3rd party dapplet can be established by audit, for example. I would like to see Dapplet audit as the part of the usual contract audit. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.955357142857143
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jeluard",
                    "index": "15",
                    "likes": "0",
                    "time": "06/03/2019-09:58:12",
                    "content": "Very interesting idea! Sounds like the gist of the idea is the website logic injection. Having wallet screens sounds orthogonal and might be useful in general, but also kind of complex to spec so that all wallet implementer can agree on. Maybe worth separating both parts? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.46875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jeluard",
                    "index": "16",
                    "likes": "0",
                    "time": "06/03/2019-09:58:48",
                    "content": "@androolloyd I\u2019d enjoy to know more! Anything you can share? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "17",
                    "likes": "0",
                    "time": "06/03/2019-10:29:34",
                    "content": "    jeluard:  Maybe worth separating both parts?   Yes, you are completely right. Injection and Dapplets are quite independent parts. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.976190476190476
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "18",
                    "likes": "1",
                    "time": "06/03/2019-10:34:16",
                    "content": "    androolloyd:  This is great, I have been working on a concept called \u201cSmart Widgets\u201d which sound a lot like dApplets, but they are react-native components.   Yeah, in PoC implementation we are going the same direction using JSX-like compoments. Are you in Paris now? Would like to talk about more in details. May be we could join our efforts. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.914285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jeluard",
                    "index": "19",
                    "likes": "0",
                    "time": "06/03/2019-10:44:25",
                    "content": "I am in Paris. Any availability this afternoon? I am @jeluard on telegram. Also this thread sparkled a semi-related idea here: https://discuss.status.im/t/extensions-to-enhance-old-web/1085 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/androolloyd",
                    "index": "20",
                    "likes": "1",
                    "time": "06/03/2019-12:24:50",
                    "content": "Sadly not in Paris. Let\u2019s grab a video call next week. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/hellwolf",
                    "index": "21",
                    "likes": "2",
                    "time": "06/03/2019-13:33:34",
                    "content": "Going to be in Ethparis, our team is considering different projects and one of the idea is similar to this. I would love to meet you there Ethernian. telegram @miaozc ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.833333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Spaded",
                    "index": "22",
                    "likes": "0",
                    "time": "06/03/2019-16:13:27",
                    "content": "I\u2019d like to get in on a call about this as well. Can we set something up for all of us? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/hiddentao",
                    "index": "23",
                    "likes": "1",
                    "time": "06/03/2019-19:08:47",
                    "content": "I\u2019d like to join in too. A few colleagues and myself were thinking last week about being able to generate Dapp UIs (similar to Dapplets) based on specifications. A specification would indicate what input fields are needed, and what to do with the input values - i.e. what contract functions to call and in what order. From a given specification, different wallet and dapp browser makers would be able to generate a UI according to their design ideas, but the functionality (i.e .what the UI lets the user do) will be the same in terms of interacting with the blockchain. The idea mainly revolves around making it easier to access smart contracts without having to build a full blown dapp. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.765476190476191
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/patrykadas",
                    "index": "24",
                    "likes": "2",
                    "time": "08/03/2019-01:16:48",
                    "content": "Hello! I really like that idea, I was exploring a similar approach with the product I\u2019m currently working on: http://ontop.team/dappi It\u2019s providing an easy to use web GUI for smart contracts that could be used as a standalone website or an embedded widget. Here\u2019s the design file: https://www.figma.com/file/P6G4CuHmVGKZVdR9JQ5GStx9/Dappi-product?node-id=0%3A1 I have talked about this during Web3 Design Call. I\u2019d be happy to collaborate on this one and/or share insights and ideas. ",
                    "links": [
                        "https://www.figma.com/file/P6G4CuHmVGKZVdR9JQ5GStx9/Dappi-product?node-id=0%3A1",
                        "https://youtu.be/bY89CLyD6kM"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.373015873015873
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "25",
                    "likes": "0",
                    "time": "08/03/2019-17:48:59",
                    "content": "We are in WTHParis. If you are here let us talk and buidl. CC @patrykadas ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/hiddentao",
                    "index": "26",
                    "likes": "0",
                    "time": "10/03/2019-12:22:41",
                    "content": "Sadly no there this week. Perhaps we can do a call sometime? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "27",
                    "likes": "0",
                    "time": "12/03/2019-08:34:37",
                    "content": "moved the discussion into the Wallet Ring as the most appropriate, IMHO ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "28",
                    "likes": "3",
                    "time": "12/03/2019-19:54:17",
                    "content": "I\u2019m glad someone\u2019s working on this! Micah and I started (but ultimately put on the back burner) similar efforts with trustless signing. If you structure this correctly, there\u2019s no reason that the \u2018dapplets\u2019 need to be trusted or audited. It helps to analyse the threat models for transaction signing:  An attacker attempts to get you to send a transaction to a non-malicious smart contract, while lying to you about what it does. Eg, Alice tries to get you to send her all your cryptokitties. An attacker attempts to get you to send a transaction to a malicious smart contract they control.  Attacks using the latter are very limited; the only one that I\u2019m aware of is convincing you to send your Ether to a contract the attacker controls. Meanwhile, in the former case, the contract the transaction is being sent to can be trusted to correctly identify/explain its own transactions. As a result, a model along these lines should work:  Transactions can be explained using some kind of DSL. Inputs are the \u2018dapplet\u2019 for the contract, and a dictionary of data whose contents is determined by the dapplet. Outputs are a human-readable explanation of the transaction, and an encoded transaction object. Each supporting contract has a isValidDapplet(bytes32) method, which takes the hash of the dapplet and returns true iff it\u2019s an accurate description of the functionality of the dapp. Contract identities are verified - eg, using ENS - so people are aware of what contract the transaction is asking them to interact with.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.068609022556391
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "29",
                    "likes": "0",
                    "time": "13/03/2019-12:56:25",
                    "content": "    Arachnid:  If you structure this correctly, there\u2019s no reason that the \u2018dapplets\u2019 need to be trusted or audited.   I think we should better talk about trust chains than about trusted/untrusted. Audit is essentially only the point where the trust chain starts. In particular the EIP-719 trustless signing is not completely trustless. It has the same trust origin as the contract and because of that it should be audited as the part of the contract. Dapplets can root their chain of trust in the contract like EIP-719 does, but there are other ways to establish it, like an external audit made later by independent trusted party. For more detailed answer I need few days more to understand objections and concerns to EIP-719. I\u2019ll write later. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.604166666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "30",
                    "likes": "1",
                    "time": "14/03/2019-03:19:06",
                    "content": "    Ethernian:  I think we should better talk about trust chains than about trusted/untrusted. Audit is essentially only the point where the trust chain starts.   However you want to phrase it, my point is that you don\u2019t need to audit a \u2018dapplet\u2019 for accuracy independent of the contract, as long as the contract vouches for it. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "31",
                    "likes": "0",
                    "time": "14/03/2019-03:23:33",
                    "content": "    Arachnid:  you don\u2019t need to audit a \u2018dapplet\u2019 for accuracy independent of the contract, as long as the contract vouches for it.   now fully agree. Nevertheless the contract is not only the one (and should not be!) who can vouche for dapplet. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.916666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "32",
                    "likes": "1",
                    "time": "22/03/2019-11:13:49",
                    "content": "Guys, I have wrote a medium article (currently in draft): I would really appreciate your opinion and critic before publishing. Dapplets (part 1): introduce new  Dapp architecture for better UX and security Thank you! A Tg group is here as well: \u201cDapplets and Secure Signing\" ",
                    "links": [
                        "https://t.me/joinchat/DvCrSRPUuDP6Y8QvppyXcw"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.361363636363636
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "33",
                    "likes": "1",
                    "time": "22/03/2019-18:19:48",
                    "content": "RE: the Dapplets Medium article Part 1. Love the use of CRAZY.   This is a great intro, especially the summary, it really gets it across. The one thing I feel it needs is more about implementation, e.g. what does a dapp developer need to do? What does wallet developer need to do? How do these parties come to an understanding? I suppose this is for Part 2. Still, might be good to briefly describe the basics.  Letting my mind wander a bit, this seems like a sort of UI EVM, and really only for the exact point of decision by the user. The relevant information needs to be presented to the user, which includes an image. The action needs to be presented, in a way which is clear to the user. Certain dialogs also need to be incorporated, to represent the changing state or implications, or reflecting the status code  (pinging @expede here). These are not currently concerns at the contract level, and implemented in a hundred different ways and often terribly by dapp devs. A standard can be created to enable this to happen at the contract level, a data structure which guides the UI of the action and immediate steps afterwards. Then Metamask, wallets, mobile, and so on can render the result in a standard way, using WASM even to ensure consistency. I hope I am not repeating what y\u2019all already know LOL. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.729591836734694
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "34",
                    "likes": "0",
                    "time": "23/03/2019-11:00:12",
                    "content": "    jpitts:  The one thing I feel it needs is more about implementation, e.g. what does a dapp developer need to do?   Hello, Jamie! I have improved the article accordingly.     jpitts:  Letting my mind wander a bit, this seems like a sort of UI EVM ,   I am unsure what do you mean by UI EVM? Is it the EVM or just some VM for the UI calculations? My thoughts in that directions are DSL-centric. It seems to me we should define a DSL firstly and only then think about the VM executing the DSL.     jpitts:  A standard can be created to enable this to happen at the contract level, a data structure which guides the UI of the action and immediate steps afterwards.   This is my way too, definitely. Anyway I would start with MVP for now. It will facilitate a broader discussion what the standard should look like. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.4140625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "35",
                    "likes": "1",
                    "time": "23/03/2019-15:35:05",
                    "content": "    Ethernian:  I am unsure what do you mean by UI EVM ? Is it the EVM or just some VM for the UI calculations?   RE: The \u201cUI EVM\u201d, I mean this conceptually! The dapplet constrains the UI of the final approval/signing process in order to ensure secure and predictable interaction with the user, and separates the final approval/signing UI from the rest of the potentially insecure UI of the dapp. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.283482142857143
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "36",
                    "likes": "1",
                    "time": "25/03/2019-15:55:16",
                    "content": "I have published the medium article: Dapplets (part 1): introduce new Dapp architecture for better UX and security ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.590909090909091
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "37",
                    "likes": "0",
                    "time": "30/03/2019-16:38:18",
                    "content": "   On another topic    I think you\u2019re trying to make \u2018dapplets\u2019 responsible for too much. It\u2019d be a lot easier to ensure they\u2019re secure if they\u2019re restricted to presenting and transforming transaction data for user display and submission.    Generally I am fine to implement the most restricted version first, but what is the advantage of the restriction?    On another topic    Making dapplets able to grab information from third-party services like thegraph seems likely to introduce hazards in terms of both trustlessness and security.    yes, you are completely right. If the TheGraph/Fluence service provides no cryptographic proof for response (the situation right now) or can\u2019t be trusted in some other way (like node ownership), dapplet should make a web3 call instead.    On another topic    I\u2019m not sure why you anticipate dapps not querying web3 any longer. That seems like something pretty crucial, and it\u2019s not clear to me how a dapp would display information if it can\u2019t do that.    I am not against web3 calls generally. I have just proposed a way to work with existing legacy sites built without any web3 support in mind. The second aspect: the web3  in its current state is damn inefficient for querying blockchain data. But if web3 will have efficient querying facility like TheGraph/Fluence, why not use it? Another aspect is the trust: there is no sense to use web3 to create sensitive objects like transactions in such generally mistrusted environment like dapp and the browser. May be it was a little bit exaggerated to say \u201cdon\u2019t use web3 in dapps\u201d. More nuanced message could be: it is more efficient to replace web3 reads with TheGraph-like service and move web3-writes to the signer; may be you will not need the web3 dependency in your dapp at all.    On another topic    I think there\u2019s too much focus on audit, which should be out of scope. If you make the trust domain for the contract the same as the one for the dapplet, the user can trust the transaction presentation if they trust the contract they\u2019re interacting with. How they come to trust that contract is out of scope - audit is one possibility.    agree: audit is pluggable and out of scope of the architecture. Nevertheless the infrastructure should offer the way to check the audit status and the trust path, thats why I have mentioned it in the article. \u201cThe same domain\u201d policy is not only the way to create the trust: dapplets may be created by 3rd party and should not need any allowance from contract author to operate properly.    On another topic    The trustless signing proposal doesn\u2019t try to reverse engineer data from the transaction as you suggest; it aims to accept transaction data in an app-specific format and present it for the user, as well as transforming it into transaction payload.    I have used words like \u201crecover\u201d or \u201cguess the View\u201d to describe what the Wallet/Signer generally should do in order to display the binary transaction correctly. May be the wording doesn\u2019t fit exactly to EIP-719, but  essentially it doesn\u2019t matter: it is not about how the Signer does it technically (\u201creverse engineeriring\u201d or \u201cquerying the method registry\u201d). It is about how secure, how informative and how flexible it is. IMHO, an EIP-719 is quite secure, but could be more flexible (supporting other view verification sources than the contract)  and more informative (supporting images or additional context parameters). ",
                    "links": [
                        "https://ethereum-magicians.org/t/2968/4",
                        "https://ethereum-magicians.org/t/2968/4",
                        "https://ethereum-magicians.org/t/2968/4",
                        "https://ethereum-magicians.org/t/2968/4"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.733022186147187
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "38",
                    "likes": "1",
                    "time": "30/03/2019-19:24:07",
                    "content": "    Ethernian:  Generally I am fine to implement the most restricted version first, but what is the advantage of the restriction?   It\u2019s easier for clients to implement, and it\u2019s more secure.     Ethernian:  agree: audit is pluggable and out of scope of the architecture. Nevertheless the infrastructure should offer the way to check the audit status and the trust path, thats why I have mentioned it in the article.   I really think this is orthogonal to what you are trying to achieve.     Ethernian:  I have used words like \u201crecover\u201d or \u201cguess the View\u201d to describe what the Wallet/Signer generally should do in order to display the binary transaction correctly. May be the wording doesn\u2019t fit exactly to EIP-719, but essentially it doesn\u2019t matter: it is not about how the Signer does it technically (\u201creverse engineeriring\u201d or \u201cquerying the method registry\u201d). It is about how secure, how informative and how flexible it is.   My point is that 719, iirc, doesn\u2019t do either of these things; it uses the same kind of interface you\u2019re proposing for dapplets, where the data format passed to them is application specific. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.322222222222223
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "39",
                    "likes": "0",
                    "time": "01/04/2019-14:42:11",
                    "content": "    Arachnid:   agree: audit is pluggable and out of the scope of the architecture. Nevertheless, the infrastructure should offer the way to check the audit status and the trust path, that\u2019s why I have mentioned it in the article.  I really think this is orthogonal to what you are trying to achieve.   Yes, it is. But why are you mentioning this? Is there more than \u201cIt does not belong to the standard itself, but important for standard adoption\u201d?     Arachnid:  My point is that 719, iirc, doesn\u2019t do either of these things; it uses the same kind of interface you\u2019re proposing for dapplets, where the data format passed to them is application specific.   I\u2019ve got an idea of Dapplets independently from EIP719 and become aware of it later from people\u2019s feedback. I see similarities and consider the EIP719 as one of simple ways to implement an initial version of Dapplets. Nevertheless the scope is Dapplets is broader, so I see EIP719 as a possible part of it, not as replacement. Disclaimer: I have to read and think about EIP719 deeper in details. My understanding of it is still not complete. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.633333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "40",
                    "likes": "0",
                    "time": "01/04/2019-20:25:00",
                    "content": "    Ethernian:  Yes, it is. But why are you mentioning this? Is there more than \u201cIt does not belong to the standard itself, but important for standard adoption\u201d?   Smaller standards are generally better, and more likely to get reviewed and implemented. And separation of concerns is good too. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.444444444444444
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "41",
                    "likes": "1",
                    "time": "02/04/2019-09:53:57",
                    "content": "    Arachnid:  Smaller standards are generally better, and more likely to get reviewed and implemented.   My belief is different: adoption of the standard is not a function of its size, but of the strength of incentives to implement relative to efforts needed. Enabling legacy sites, Dapplets creates sufficient incentive for adoption, I believe.     Arachnid:  And separation of concerns is good too.   It may be a valid point. What concerns do you see unreasonably mixed now? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.944444444444445
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "42",
                    "likes": "0",
                    "time": "02/04/2019-20:10:00",
                    "content": "    Ethernian:  My belief is different: adoption of the standard is not a function of its size, but of the strength of incentives to implement relative to efforts needed. Enabling legacy sites, Dapplets creates sufficient incentive for adoption, I believe.   Larger standards increase the effort required to implement, too.     Ethernian:  It may be a valid point. What concerns do you see unreasonably mixed now?   Anything explicitly concerned with audit. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/RSivakov",
                    "index": "43",
                    "likes": "0",
                    "time": "11/09/2020-20:13:12",
                    "content": "\u041e\u0447\u0435\u043d\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0430\u044f \u0442\u0435\u043c\u0430. \u041a\u043e\u0433\u0434\u0430-\u0442\u043e \u043c\u044b \u0441 \u043d\u0430\u043f\u0430\u0440\u043d\u0438\u043a\u043e\u043c \u0442\u043e\u0436\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043d\u0430 \u044d\u0442\u0443 \u0442\u0435\u043c\u0443 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0430\u043b\u044c\u0448\u0435 \u044d\u0442\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u043b\u0438\u0441\u044c \u043f\u0438\u043d-\u043a\u043e\u0434\u043e\u043c \u043d\u0430 \u0431\u0430\u043d\u043a\u043e\u043c\u0430\u0442\u0435, \u0442.\u0435. \u043d\u0435 \u043c\u0435\u0442\u0430\u043c\u0430\u0441\u043a, \u043d\u043e, \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u0445\u043e\u0436\u0430 \u043b\u043e\u0433\u0438\u043a\u0430 =))] \u042d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0441\u0442\u0430\u0440\u044b\u0435 \u043f\u0435\u0440\u0432\u044b\u0435 \u043d\u0430\u0431\u0440\u043e\u0441\u043a\u0438. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "44",
                    "likes": "0",
                    "time": "18/09/2020-01:32:16",
                    "content": "    RSivakov:  (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0430\u043b\u044c\u0448\u0435 \u044d\u0442\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u043b\u0438\u0441\u044c \u043f\u0438\u043d-\u043a\u043e\u0434\u043e\u043c \u043d\u0430 \u0431\u0430\u043d\u043a\u043e\u043c\u0430\u0442\u0435, \u0442.\u0435. \u043d\u0435 \u043c\u0435\u0442\u0430\u043c\u0430\u0441\u043a, \u043d\u043e, \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u0445\u043e\u0436\u0430 \u043b\u043e\u0433\u0438\u043a\u0430 =))]   How it is related to my staff? Unclear\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.583333333333333
                }
            ]
        }
    ],
    "group_index": "728"
}