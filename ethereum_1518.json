{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/developer-experience-session-1-30pm-on-saturday/759",
            "title": "Developer Experience Session - 1:30pm on Saturday ",
            "index": 759,
            "category": [
                "Happenings",
                "Council Sessions"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/GriffGreen",
                    "index": "1",
                    "likes": "1",
                    "time": "17/07/2018-08:13:38",
                    "content": "These notes are a little disorganized. Its a random smattering of thoughts in the developer experience space, with a list of tools and a general wishlist at the end. Notes: Chatham house rules Desired out come: Next steps, what tooling do we need, best solutions to improve. Status codes? Prioritizing developers is important, could be part of apple\u2019s success. DX = Dev experience Tooling, frameworks, languages. Ethereum is at an inflection point and EWASM is a major piece Why is smart contract writing important? Is it the core piece? Smart contract writing is difficult, Solidity is a challenging language to work with. On boarding people involves learning the language but also best practices and tooling. Where is the line? Where do we limit people in the compiler? Any language is going to be specialized to smart contract development. Debugger? We need it! We use Remix to debug but it would be nice to have one tool to bring. Would be nice to have an in remix editor. What IDE\u2019s do people use?  Step  Debugging in remix Truffle tests  Would be nice to have a matrix of different Tools? Can we have comparisons on different suites\u2026 EthFiddle is a cool tool. Are people building tools wasting their time if EWASM is coming? There are just soooo many tools, we need to make a list to compare everything React uses the power of defaults\u2026 maybe truffle or something can do that Remix has a dapp. webassembly \u2018s app gives you a default to Remix, and Play!! Play will let people play with things How do we follow the updates that happen that will break things If someone wants to create a documentation systems for n00bs it would get funding. Ethercamp had an IDE, it had a browser experience\u2026 VPS, AWS, Privatechain\u2026 the leads left and the project wasn\u2019t well documented DOCUMENTATION IS IMPORTANT Sandbox ? DAppNode and Remix Needs to be there!!! - Running things in command line so that you can see the evm trace and the result without having to deploy it. Truffle interprets things wrong sometimes. The ecosystem is decentralized, truffle is a huge thing\u2026 we need hyper modular tools Create react app combines a bunch of smaller tools. Truffle doesn\u2019t scale for large projects. Solidity gas mapper turned to code coverage tool, if there is a revert on the tests you can see. The tools are on the Sol-coverage is the tool Assembly and Yule are better then solidity in some ways - the abiv2 generates yule code so we hand code in assembly. Writing in plain assembly in some ways is just more clear. How important is it to have remix add other languages? Source maps\u2026. You can compute a bytecode Viper is a future language with simple syntax\u2026 why are they not standardizing some things\u2026 it seems to be recreating everything\u2026 What are you using now and what would you like to put on the wish list? Tools you use:  intellij, remix truffle atom, solidity, intellij, remix, truffle, solidity, i want a matrix vim, sublime, truffle, remix truffle remix atom, type script mocha, remix, atom, my own fork of some things, truffle, remix sol-c, mocha, emacs with solidity, remix, sol-c, truffle does wierd things, mocha, vscode on truffle and remix,  wish list  support in IDE for atom and more features in Remis and easier options than infura, excited about dappnoe need a matrix of options to pick the stack create react dapp for devs, with different versions smaller modules modelling tools, turning legal contracts into smart contracts remix hangs with large contract, really fast test clients, fuzz testing and print lines in the console gas profilers compile time invariants (typ checking, checking for totality) better test framework, decentralized repo where you can play the github some of PRs and do code verification and all that. speeding up remix taking out features, create react version of remix as a dapp, where the source code has no frame works make a basic embeddable tool with a preview making it extensible (plugins) outside collaborators, can it work on mobile!??!?! starter projects  ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.144132653061224
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "2",
                    "likes": "0",
                    "time": "18/07/2018-17:55:41",
                    "content": "    GriffGreen:  Viper is a future language with simple syntax\u2026 why are they not standardizing some things\u2026 it seems to be recreating everything\u2026   Needs more explanation      GriffGreen:  better test framework   I welcome all users: GitHub - fubuloubu/pytest-ethereum ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.799999999999999
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/theporpoise",
                    "index": "3",
                    "likes": "0",
                    "time": "19/07/2018-21:30:21",
                    "content": "Hey!  I also responded on a reddit post, but wanted to let you know some of these things are in active development with support from the EF. For \u201ccreate react dapp for devs\u201d and \u201cstarter projects\u201d check out Browseth!    GitHub    unstoppabledomains/browseth A library for interacting with Ethereum: https://medium.com/buyethdomains/introducing-browseth-a-new-library-for-interacting-with-ethereum-795d18e7b87d - unstoppabledomains/browseth      We recently received a grant from the Ethereum foundation to build exactly that! And we already have a first version up that you can get a react app for ethereum connected on the blockchain in 5 lines from the command line: Install @browseth/cli yarn global add @browseth/cli Create a simple site browseth-cli create-simple-site  cd  Install dependencies and run yarn yarn start We\u2019re still in 0.1 version, and aiming to have a 1.0 by DevCon (although we may not finish that up until December, as specified in our Grant). That\u2019s it! Would love to know what you think, and we\u2019re actively excepting PR\u2019s for everything from hard code to community documentation. We also already have a docs page started here: https://buyethdomains.github.io/browseth/ ",
                    "links": [
                        "https://github.com/unstoppabledomains/browseth",
                        "https://buyethdomains.github.io/browseth/"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.060763888888888
                }
            ]
        }
    ],
    "group_index": "1518"
}