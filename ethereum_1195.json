{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/high-level-overview-of-the-diamond-contract-pattern/5006",
            "title": "High-Level Overview of the Diamond Contract Pattern ",
            "index": 5006,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "upgradeable-contract"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/mudgen",
                    "index": "1",
                    "likes": "2",
                    "time": "07/12/2020-14:38:16",
                    "content": "Here is a good overview of EIP-2535 Diamond Standard and the diamond contract pattern: https://docs.aavegotchi.com/overview/diamond-standard  The diamond pattern is a code implementation and organization strategy. The diamond pattern makes it possible to implement a lot of contract functionality that is compartmented into separate areas of functionality, but still using the same Ethereum address. The code is further simplified and saves gas because state variables are shared between facets.   The diamond pattern is a contract that uses a fallback function to delegate function calls to multiple other contracts called facets. Conceptually a diamond can be thought of as a contract that gets its external functions from other contracts. A diamond has four standard functions (called the loupe) that report what functions and facets a diamond has. A diamond has a DiamondCut event that reports all functions/facets that are added/replaced/removed on a diamond, making upgrades on diamonds transparent.   Diamonds are not limited by the maximum contract size which is 24KB.   Facets can be deployed once and reused by any number of diamonds.   Diamonds can be upgradeable or immutable. They can be upgradeable and at a later date become immutable. Diamonds support fine-grained upgrades which means it is possible to add/replace/remove only the parts desired. Everything does not have to be redeployed in order to make a change. A diamond does not solve all upgrade issues and problems but makes some things easier and better.  See the standard and the standard\u2019s reference section for more information about diamonds. ",
                    "links": [
                        "https://docs.aavegotchi.com/overview/diamond-standard",
                        "https://eips.ethereum.org/EIPS/eip-2535",
                        "https://eips.ethereum.org/EIPS/eip-2535#learning--references"
                    ],
                    "GPT-summary": "The post provides an overview of the EIP-2535 Diamond Standard and the diamond contract pattern. It explains how the diamond pattern works and its benefits, such as simplified code and gas savings. The post also mentions that diamonds are not limited by the maximum contract size and can be upgradeable or immutable. The post does not ask for feedback or give negative feedback, but it does provide positive information about the proposal.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author is advertising proposal"
                    ],
                    "Sentiment": 5.412698412698412
                }
            ]
        }
    ],
    "group_index": "1195"
}