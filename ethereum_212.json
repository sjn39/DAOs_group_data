{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/fixed-point-exponentiation/11672",
            "title": "Fixed point exponentiation ",
            "index": 11672,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "opcodes",
                "precompile",
                "math"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/RenanSouza2",
                    "index": "1",
                    "likes": "0",
                    "time": "08/11/2022-13:59:43",
                    "content": "Is there any work to bring exponential operation to evm through an new opcode ar an precompiled? (not integer modulo exponentiation as it already exists) Thank you guys ",
                    "links": [],
                    "GPT-summary": "The author is asking a question about the possibility of adding an exponential operation to EVM, and is seeking feedback from the community. There is no indication of advertising, collaboration, or feedback on the proposal itself.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.590909090909091
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamReeves",
                    "index": "2",
                    "likes": "1",
                    "time": "08/12/2022-10:48:14",
                    "content": "I also would love to see this!  I have included some methods in a smart contract that get around this problem for some processes, but works unpredictably in others\u2026 To tailor these methods always and deploy them in every similar contract doesn\u2019t make sense. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.840773809523809
                }
            ]
        }
    ],
    "group_index": "212"
}