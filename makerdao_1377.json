{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/fast-withdrawals-and-risk-assumptions/16375",
            "title": "Fast Withdrawals and Risk Assumptions ",
            "index": 16375,
            "category": [
                "Updates",
                "Notices"
            ],
            "tags": [
                "layer-2",
                "pe-001",
                "starknet"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#1",
                    "likes": "11",
                    "time": "06/07/2022-16:12:54",
                    "content": " Fast Withdrawal Risks & Assumptions The objective of this post is to lay out the risks of fast withdrawals and the underlying assumptions of the current designs to help inform the @Risk-Core-Unit when making decisions on fast withdrawal risks - particularly when it comes to setting debt ceiling parameters. Fast withdrawal debt ceilings for Optimism and Arbitrum have been proposed and set at 1M DAI each as per MIP69. This post proposes that the same limit be set for the StarkWare fast withdrawal implementation when it is ready to be launched.  Reminder on the fast withdrawal and its risks The simple Maker bridge currently deployed on Optimism, Arbitrum, and Starknet allows users to deposit funds instantly, but only allows them to withdraw in a matter of hours or days depending on the L2. This is a key driver for PECU and SECU working on Fast withdrawals. Fast withdrawals are using an Oracle service which provides an attestation that the user initiated a fast withdrawal on L2. The oracle service generates this attestation after calling the getAPItransaction() which will read directly from the L2 node. Even if small, there is a risk of minting unbacked DAI because at the time the attestation is generated, the transaction is not final from the L1 perspective. The section below provides a high-level summary of the differences across rollups with respect to fast withdrawal request finality at the moment the oracle generates an attestation, as well as future improvements that could mitigate the risk related to the lack of finality.  Finality of L2 transactions Users interacting with L2 blockchains typically receive very fast transaction confirmations creating an illusion that the layer 2 is extremely fast. It is important to understand that these transactions, even though they are confirmed by L2 nodes, are not immediately rolled up to the L1 Ethereum blockchain. We call these transactions \u201csoft confirmed\u201d. In a typical scenario, assuming an honest Sequencer, these transactions will be eventually submitted to Ethereum (as calldata) and from then on they can be considered final. We call these transactions \u201chard confirmed\u201d. The worst case scenario assumes a dishonest Sequencer or Sequencer crash during which all soft-confirmed transactions are lost. If this occurs, it would be impossible for the Sequencer to recover all previously \u201csoft\u201d confirmed transactions, leading to some of them potentially being dropped as if they had never happened. This is why we can never consider soft-confirmed transactions to be final. In practice, this means that withdrawing funds based on soft-confirmed transactions carries risks that such withdrawal requests may not be included in the canonical state of L2 and that withdrawing funds from L1 based on such \u201ccanceled\u201d request will result in a protocol loss (because the funds are essentially double-spent). Soft-confirmations are typically issued by L2 nodes in seconds, whereas hard-confirmation (i.e. finality) time ranges between L2s from 10 mins (Optimism, Arbitrum) to several hours (StarkNet).  1275\u00d7650 131 KB   Optimism and Arbitrum implementation  Current implementation Oracle attestations are issued by querying L2 nodes that will respond with a list of soft-confirmed transactions. Hard confirmations can be obtained by running an independent L2 \u201cvalidation\u201d node that reads transaction data from L1 instead of the L2 mempool. This feature will be developed but is not yet available to the Oracle attestation network.  Potential future implementation With optimistic rollups, assuming Verifiers exist alongside a fraud proof mechanism, all transactions present on L1 in the canonical transaction chain (CTC) contract are included with 100% certainty in the next state update. The CTC also ensures transaction ordering is final. In the above scenario, a non-malicious and non-corrupted oracle reading from the CTC can provide attestations with 100% reliability that a teleport request will be included in the next state update. In that case, any attestation generated by an honest oracle will have finality at issuance time. For full transparency, it should be mentioned that to be 100% sure about transaction outcomes, Oracles need to do full state validation, and even then there is a very small possibility that the state will be rejected on L1 if there is a difference in EVM implementation between the node used for validation by the Oracle, and the fraud proof system. Given the availability of attesting \u201chard confirmations\u201d, it is possible to manage risk by having a relatively small debt ceiling for transactions having only soft confirmations and significantly larger debt ceiling for transactions having hard confirmations. Assuming 10-min time required to have transaction finality, we can have a \u201csliding\u201d time window in which we will automatically be moving soft-confirmed transactions from one debt-pool to a much larger hard-confirmed transaction debt pool once soft-confirmed transactions are finalized. With this approach large withdrawals (exceeding small debt pool) will be processed only after they are finalized (i.e. after 10 min) while small withdrawals will be continually added to and handled by a smaller pool, e.g:  965\u00d7622 54.8 KB   Starknet implementation  Current implementation At the current stage of StarkNet development there is no middle ground between L1 finality reached after the state is updated on L1, and no finality at all. Currently Starknet only has one sequencer and there is no economic incentive for this sequencer to include a fast withdrawal request in the next L1 batch update after getAPItransaction is called.  Potential future implementation StarkWare is currently working on guaranteeing an intermediate-level of finality that would be established a few minutes after the transaction is received. The design is still being discussed, but for example it could rely on high economic incentives to the sequencer to prove the sequence of txs it commits. Other mechanisms in addition/instead this example are continuing to be considered as well. Such types of enforcement will make the double-spend attack by the sequencer irrational for reasonable amounts of DAI transfers. This feature is expected within 6-9 months. Depending on the final design of intermediate-level finality, Starknet will assess the feasibility of using the same mechanism described above with different debt ceilings for different levels of finality (\u201chardness of confirmation\u201d) to arrive at an optimal solution. SECU will also consider adding a circuit breaker mechanism for fast withdrawals that would prevent users from minting on L1 using oracle-issued attestations. This circuit should bypass the two days governance delay to serve its purpose.  Conclusion By comparing the Optimistic Rollup implementations with the Starknet solution, PECU is confident that the measures taken by the Starknet Core Unit warrant an equivalent debt ceiling of 1M for fast withdrawals when their implementation is deployed. We look forward to observing chain usage and will continue to monitor any domain changes that warrant amendments to this limit. ",
                    "links": [
                        "https://forum.makerdao.com/t/pecu-month-in-review-july-2022/16989",
                        "https://forum.makerdao.com/t/request-to-poll-for-maker-teleport-deployment-on-starknet-and-associated-risk-parameters/16844/12",
                        "https://forum.makerdao.com/t/request-to-poll-for-maker-teleport-deployment-on-starknet-and-associated-risk-parameters/16844",
                        "https://forum.makerdao.com/t/ruta-de-layer-2-historia-y-futuro-traduccion/17387",
                        "https://forum.makerdao.com/t/layer-2-roadmap-history-and-future/17310",
                        "https://forum.makerdao.com/t/starknet-engineering-core-unit-july-2022-update/17147"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.215124716553287
                },
                {
                    "author_link": "https://forum.makerdao.com/u/system",
                    "index": "#2",
                    "likes": "0",
                    "time": "05/08/2022-16:13:13",
                    "content": "This topic was automatically closed 30 days after the last reply. New replies are no longer allowed. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0606060606060606
                }
            ]
        }
    ]
}