{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/disorderly-constantinople-fork-on-ropsten-testnet/1582",
            "title": "Disorderly Constantinople fork on Ropsten testnet ",
            "index": 1582,
            "category": [
                "Working Groups",
                "Signaling Ring"
            ],
            "tags": [
                "forks",
                "ropsten"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "1",
                    "likes": "0",
                    "time": "14/10/2018-20:37:37",
                    "content": "This case brings up interesting developer coordination issues and illustrates the importance of a well-defined testing process as client developers prepare to implement changes affecting mainnet. In this planned activation of changes on Ropsten testnet, when the forking block was reached, there was not enough mining power from Ropsten clients implementing Constantinpole changes. This led to a disorderly forking in which the intended upgraded network failed to quickly materialize / become dominant. Additionally, a consensus bug was found, leading to a secondary fork (a more dire state of affairs which must be avoided at all costs on mainnet). The result is that the Ropsten network, for lack of a better word, is shattered.   twitter.com          Jutta (jutta_steiner)     @OaktreeInv @5chdn When we launched Ethereum, we had agreed on a process that relied on \u201cno fork on test net for certain amount of time. This approach has so far proven to be useful. The fact that the fork happened now will delay the upgrade on the main net.\u201d  12:34 PM - 13 Oct 2018     25          6            The situation is currently being discussed, investigated, and resolved in the AllCoreDevs gitter channel. ",
                    "links": [
                        "https://twitter.com/jutta_steiner/status/1051371111345197057",
                        "https://twitter.com/jutta_steiner/status/1051371111345197057",
                        "https://gitter.im/ethereum/AllCoreDevs?at=5bc38d67c08b8b3067143fd0",
                        "https://ethereum-magicians.org/t/collection-of-ethereum-engineering-processes-or-standardized-workflows/1824"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.6479591836734695
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tay",
                    "index": "2",
                    "likes": "5",
                    "time": "15/10/2018-00:08:08",
                    "content": "Can someone make a note in the future to do the math on forks so they happpen during the week instead of Saturday.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "3",
                    "likes": "1",
                    "time": "15/10/2018-00:08:50",
                    "content": "@lrettig tweeted about the identification of the consensus bug by several community devs in the AllCoreDevs gitter channel.    gitter.im    ethereum/AllCoreDevs @sorpaas: I fixed the sstore refund saturating_sub bug and confirmed that it indeed computed the same state root as geth using tests provided by @holiman https://gist.github.com/holiman/c87fc7cdba83086316df7a8b1a247fa6 If someone is brave enough, you...      ",
                    "links": [
                        "https://gitter.im/ethereum/AllCoreDevs?at=5bc3d2a2271506518d121ab9",
                        "https://gitter.im/ethereum/AllCoreDevs?at=5bc3d2a2271506518d121ab9",
                        "https://gitter.im/ethereum/AllCoreDevs?at=5bc3d2a2271506518d121ab9"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.083333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "4",
                    "likes": "2",
                    "time": "17/10/2018-02:40:02",
                    "content": "Is there a reason we don\u2019t have fork identifiers?  I really dislike that we are beholden to miners to upgrade to a fork.  As a user, if I want to participate in a hard fork I should be able to do so even with none of the miners switching their work over.  I believe at the moment Ethereum clients are designed such that they will follow the heaviest chain of either the old code or the new code, which means miners must upgrade in order for me to upgrade.  At some point, there may be a change that miners don\u2019t voluntarily upgrade to but all economic participants do upgrade to.  In this scenario the majority of miners should not be able to prevent my client from switching to the fork. It sounds like this is effectively what happened with Ropsten, and it feels like can be simply fixed by including a fork identifier in the block headers such that my client will ignore any blocks that are not part of my desired fork. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.929407713498622
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "5",
                    "likes": "0",
                    "time": "17/10/2018-17:55:42",
                    "content": "Linking here to a related discussion, this is retrospectives / post-mortems:     Issues we discovered in the Ropsten Constantinople hard fork Process Improvement       Here\u2019s my initial post-mortem and concern/task list following the Constantinople Ropsten hard fork, in no particular order.    A consensus bug in Parity was discovered (https://github.com/paritytech/parity-ethereum/pull/9746). We need to understand why this consensus bug occurred in the first place, and particularly why it wasn\u2019t caught by the tests. @ethchris suggests that we may need clearer EIP specs including pseudo code (https://twitter.com/ethchris/status/1052503731072315392). Apparently i\u2026     ",
                    "links": [
                        "https://github.com/paritytech/parity-ethereum/pull/9746",
                        "https://twitter.com/ethchris/status/1052503731072315392"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.888888888888888
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5chdn",
                    "index": "6",
                    "likes": "1",
                    "time": "28/10/2018-13:41:01",
                    "content": "    tay:  Can someone make a note in the future to do the math on forks so they happpen during the week instead of Saturday.    That\u2019s exactly what we did, from what I understand, but people kept adding hashrate to the network and therefore the hardfork happened earlier than initially planned. The underlying issue here: block numbers are unreliable and there is a two-in-seven chance that a block evetually appears on a weekend. There are ideas discussed about using contracts to signal hard-forks (bad) or simply using timestamps (ugly), but I have not yet seen any solution that convinced me. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.178571428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "7",
                    "likes": "1",
                    "time": "29/10/2018-19:07:56",
                    "content": "    5chdn:  simply using timestamps (ugly)   Why do you find using timestamps to hard fork as \u201cugly\u201d?  Is it just because the way the Parity codebase is currently designed makes using timestamps hard?  If so, this is a reasonable argument for not doing it, but I think it is valuable to be clear that the problem isn\u2019t with timestamps generally, it is with the way Geth/Parity/Harmony are currently authored. That is, if one were to be authoring a blockchain from scratch today, using timestamps (IMO) for fork scheduling would be the right solution (no legacy baggage). ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.387445887445888
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "8",
                    "likes": "1",
                    "time": "04/11/2018-15:58:58",
                    "content": "I too would like to understand why \u2018timestamps are ugly.\u2019 It seems obvious to me. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5chdn",
                    "index": "9",
                    "likes": "1",
                    "time": "26/11/2018-11:00:31",
                    "content": "Because miners control timestamps and there is a variance allowed how to set them, so you can not for sure tell which miner at which point decides that Constantinople activates at a certain block. Also, all clients are built around block numbers, so this is not only a Parity Ethereum thing: all clients would need some basic refactoring to allow for time stamps. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.892857142857143
                }
            ]
        }
    ],
    "group_index": "455"
}