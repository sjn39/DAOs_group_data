{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/ring-ethql-more-efficient-interface-for-data-queries-from-ethereum-node/799",
            "title": "Ring: EthQL - more efficient interface for data queries from ethereum node ",
            "index": 799,
            "category": [
                "Working Groups"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "1",
                    "likes": "0",
                    "time": "18/07/2018-18:51:18",
                    "content": "Here is some of my observations from various p2p talks: @tjayrush (Thomas Jay Rush from quickblocks.io) has called for better standards for data retrieval from ethereum node, which is a pain (completely agree!). @AlexeyAkhunov (author of the turbogeth client) has mentioned current database layer is not good enough and he is looking for replacement. @evgenyponomarev from fluence was interested to created an integration between ethereum node and fluence database layer. looks like you have an interesting topic to discuss, guys! Links & Resources   Ideas on How to Make an Ethereum Node Easier to Run - by @tjayrush   EthQL - a project by PegaSys/Consensys  ",
                    "links": [
                        "https://fluence.one",
                        "https://github.com/Great-Hill-Corporation/quickBlocks/blob/master/docs/OSBEN/possibleEIPs.md",
                        "https://github.com/ConsenSys/ethql",
                        "https://pegasys.tech"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.71875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "2",
                    "likes": "0",
                    "time": "18/07/2018-19:27:08",
                    "content": "I started collecting together very rudimentary ideas here: Ideas on How to Make an Ethereum Node Easier to Run ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "3",
                    "likes": "0",
                    "time": "18/07/2018-19:42:27",
                    "content": "One of the things that has become clear to me is that \u2018duplicating\u2019 the data (which, to me, is what is implied by the \u2018QL\u2019 part of the ring\u2019s name) has consequences related to how easy/hard it will be to keep the data decentralized. Because my work concerns itself first of all with the size of the duplicated data, I\u2019ve been forced to look for ways to make the node \u2018release\u2019 its data in a more usable way. I think it would be good to clearly separate \u201cretrieval of data\u201d from \u201cstorage of retrieved data\u201d. For example, one solution may wish to retrieve every single block/transaction/receipt/log/trace and store all of it in an easily queried database (which would be fast, but quite large). Another may wish to retrieve the same data, calculate certain things, and only store those calculated results (which would be much smaller, but slower on subsequent queries on one needed the raw data). I think both approaches are valid and will lead to different suggested changes/improvements to the nodes. The central idea to keep at the front of mind throughout the entire design process, however, should be how to keep the data 100% accessible and cheap if not free. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.583631947762382
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "4",
                    "likes": "0",
                    "time": "18/07/2018-21:35:13",
                    "content": "reworked initial posting to include EthQL. @tjayrush, do you miss something in EthQL approach? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "5",
                    "likes": "1",
                    "time": "19/07/2018-03:12:06",
                    "content": "My work starts from a 100% decentralized stance. I haven\u2019t compromise at all. This forces me to keep the data on the node and only extract very small pieces to improve the interaction with the node, but not duplicate so much data that I can no longer run on consumer-grade hardware. (My code currently works on a Mac laptop.) To accomplish this, I had to give up on arbitrary queries across the entire chain, but I\u2019ve convinced myself that this is what a decentralized world is like. That\u2019s why I call what I\u2019m working on an \u201cAccount Scraper\u201d as opposed to a \u201cBlockchain Scraper.\u201d Duplicating all of the Ethereum data outside the node will force, I think, a system to move to larger and more expensive hardware which will push strongly toward centralized data. There may be ways to re-decentralize the data through some market mechanism, but I\u2019m exploring what it would look like to never centralize in the first place. I was trying to note that both approaches are worth exploring and that this group should keep both in mind. A 100% decentralized approach forces me to look to the node software to be better at releasing its data in a usable way. Improving the node would be beneficial to both approaches. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.449404761904761
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "6",
                    "likes": "0",
                    "time": "19/07/2018-21:18:07",
                    "content": "If talking about accounting, do you mean ethers only or tokens as well? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.21875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "7",
                    "likes": "0",
                    "time": "20/07/2018-12:07:05",
                    "content": "Ether accounting, token accounting, gas accounting. In general, accounting for everything an Ethereum account (regular and contract) does. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "8",
                    "likes": "0",
                    "time": "20/07/2018-15:26:24",
                    "content": "    tjayrush:  Ether accounting, token accounting, gas accounting.   unclear how to implement eth_getUniqueAddressesPerBlock for tokens. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "9",
                    "likes": "0",
                    "time": "20/07/2018-16:49:04",
                    "content": "It produces a list of addresses per block. You can use that for whatever purpose you would want, including querying against token contracts for balances. You could even use it to look for token contracts by querying the addresses\u2019s code and poking around for particular patterns. The general point I\u2019ve been trying to make is that if you want to remain decentralized, you probably don\u2019t want to duplicate the entirety of the data (and in fact, grow it significantly by adding traces to a database). Instead, I\u2019ve been focused on trying to figure out ways to make the node more \u201cgiving\u201d and more \u201cnimble\u201d. If we form a ring, I think at least three sub-subjects would be appropriate: gathering the data, delivering the data, improving the node. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.279761904761905
                }
            ]
        }
    ],
    "group_index": "1567"
}