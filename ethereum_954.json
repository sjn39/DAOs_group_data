{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/gas-for-contract-code-length-on-creation/3777",
            "title": "Gas for contract code length on creation ",
            "index": 3777,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/efn",
                    "index": "1",
                    "likes": "0",
                    "time": "13/11/2019-13:52:09",
                    "content": "Hello, I was working on recreating contracts in multiple shards and measuring gas by the operations when I observed that a transaction pays for gas based on the contract\u2019s length even when the contract code already exists. When contract code exist nothing is really altered in the db so the costs are very inflated, that\u2019s it if you don\u2019t save the code in the transaction. Instead of passing code in a transaction one could pass the hash under which the code already exists, saving a lot of gas in the process. ",
                    "links": [],
                    "GPT-summary": "The author of the post is explaining a proposal related to gas usage in contract code creation. They suggest passing a hash instead of the code itself to save gas. The post also includes constructive criticism of the current method of gas payment based on contract length.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.666666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Agusx1211",
                    "index": "2",
                    "likes": "0",
                    "time": "22/11/2019-10:30:26",
                    "content": "A version of this already exists, using a MinimalProxies to delegate all calls to a \u201csource\u201d contract, is worth noticing that this \u201cproxy\u201d solution has two drawbacks, it has to write each contract to the database and also it has to load two contracts (and that adds an additional gas cost on each call). How does the contract code storage \u201cpruning\u201d currently works? What happen if you selfdestruct a contract that has a \u201cduplicated\u201d one? does the db keeps a counter with how many accounts are using that code? does the database never deletes the code of selfdestruct contracts? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.333333333333333
                }
            ]
        }
    ],
    "group_index": "954"
}