{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/proposal-network-upgrade-meta-threads/12552",
            "title": "Proposal: Network Upgrade Meta Threads ",
            "index": 12552,
            "category": [
                "Process Improvement"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "1",
                    "likes": "7",
                    "time": "13/01/2023-17:12:08",
                    "content": "With Shanghai/Capella\u2019s scope finalized, focus has begun shifting to Cancun/Deneb. But, before we get too far in planning that upgrade, it\u2019s important to take a step back and consider improvements to our process. Ethereum has evolved a lot over the past year, on both the technical and human sides. We now have a single, unified network running both the Beacon Chain and execution layer, two sets of client teams who must coordinate with each other (as well as with client-adjacent contributors across R&D, devops, security, etc.) and a growing number of non-client teams championing Ethereum Improvement Proposals (EIPs) & contributing to protocol changes. And, of course, opinions by the broader Ethereum community about the direction of the protocol have grown both in quantity and quality. In order for protocol developers, researchers, and the broader community to agree upon and deliver on Ethereum\u2019s ambitious roadmap, good coordination is paramount. In this vein, I\u2019d like to propose the introduction of Network Upgrade Meta Threads to help facilitate higher-level discussion about the overall scope of upgrades. Let me explain!  TL;DR  I propose introducing Network Upgrade Meta Threads on Ethereum Magicians as a place for the community to discuss the best high-level scope/goals/size for network upgrades These threads, along with EIPs\u2019 discussion-to and $UPGRADE-candidate (examples) threads, would serve as input for AllCoreDevs calls. This will hopefully improve the quality of our planning process   $UPGRADE-candidate threads should serve as the canonical place to catalogue community support/objection to certain EIPs   I propose we trial this process for Cancun/Deneb, and reevaluate after the upgrade whether it\u2019s worth repeating   Background Today, the scope of network upgrades is decided upon during AllCoreDevs calls. Client developers consider various EIPs, debate their technical merits, and eventually arrive at a set of EIPs which they believe are technically sound, provide sufficient value relative to their complexity, and can be implemented together in a single network upgrade. While this generally works well, there are some cases where it\u2019s challenging for ACD to make a decision, let alone the optimal one, such as:  When different community members have different preferences for EIPs, but there isn\u2019t a strong technical reason in favour of one vs. another; When a proposed change is the \u201cfirst step\u201d towards a longer-term roadmap item, which may or may not change; When a set of candidate changes is too big for a single upgrade and must be spread out over multiple ones.  This is partially due to the nature of ACD, where the \u201cunits of concern\u201d are EIPs. Most of the discussion on calls is about the technical merits of proposals, potential issues, how to best test them, etc. This is both good (we don\u2019t want bad proposals to make it into an upgrade) and unsurprising (these domains are what most regular attendees are experts in). When the discussion must move to a higher level, e.g. the relative prioritization of proposals, the opportunity costs of upgrade timing, etc., ACD calls don\u2019t provide the ideal setting. Not only is this a big context switch from discussing technical tradeoffs, but these conversations often must happen quite rapidly (due to the time constraints on the call) and sometimes without all relevant stakeholders (given they may not be regular attendees). That said, client developers are the ones who must ultimately write the code for these upgrades and hence must be core to the final decision about scope. This proposal hopes to provide a way to increase the quality of input into this decision-making process.  Current Process Today, network upgrades get planned roughly the following way:   EIP author writes a Core EIP: someone writes an EIP with a proposed change to Ethereum\u2019s consensus rules. Discussions about the EIP often happen on EthMagicians.  Champion presents EIP on AllCoreDevs: an EIP champion, often the EIP author, comes on an AllCoreDevs call to present their EIP. In most cases, this leads to feedback from client teams and several rounds of iteration on the EIP.  Champion requests EIP inclusion for upgrade: when an upgrade is being planned, the EIP champion signals that they would like their EIP to be considered. Since Shanghai, this process has migrated to EthMagicians.  Client teams debate which EIPs should be considered: teams can come to either \u201cweak\u201d (\u201cConsidered for Inclusion\u201d) or \u201cstrong\u201d (\u201cIncluded\u201d) consensus on including the EIP.  Prototyping/testing/etc.: as teams work on the candidate EIPs for an upgrade and gain a deeper understanding of their implications, the scope gets refined. As more implementations and testing suites are available, when issues come up, client teams can determine whether it is better to fix issues with an EIP or remove it in favour of shipping the other ones quicker.  Testnet deployment: once teams are satisfied with their implementation and test coverage for a set of EIPs, those get bundled together for a test network upgrade.  Mainnet deployment: assuming the testnet deployment goes smoothly, the upgrade is now scheduled for mainnet.  As mentioned earlier, this process is very centered around the EIPs themselves. While this isn\u2019t a perfectly accurate illustration of how every fork was planned (e.g. The Merge was quite different), it\u2019s a rough sketch of the process.  Network Upgrade Meta Threads To provide both better input into the upgrade planning process as well as a formal venue for the broader community to voice their preferences, I believe we should introduce dedicated Ethereum Magicians thread focused on the \u201cscope\u201d and \u201csize\u201d of upgrades, rather than the technical details of EIPs. These Network Upgrade Meta Threads would:  Be created on EthMagicians when we begin planning a new upgrade (i.e. the Cancun one should probably already be up); Serve as a place to discuss topics such as:  What should be the main priority/priorities for the upgrade; When, roughly, should we aim for the upgrade to happen, and the tradeoffs of including a marginal feature vs. delaying; How to split multi-upgrade features across >1 upgrade, and the implications of including a subset of those features in a specific upgrade;   Be used as input into AllCoreDevs calls, but not serve as a venue for the final decision about upgrades\u2019 scope. ACD would still be where the decision is made.  As with everything else on Ethereum Magicians, these threads would be open for all to share their views. The ACD151 agenda has good examples of comments which would be appropriate for such a thread:   1856\u00d71452 549 KB   1862\u00d71308 342 KB   Hopefully, by having such a thread open for weeks/months prior to finalizing an upgrade\u2019s scope, rather than hours/days, we can improve the quality of our prioritization.  A note on $UPGRADE-candidate tags/threads With the Shanghai upgrade, we trialed having EIP champions signal on Ethereum Magicians that they\u2019d like their EIP considered for a network upgrade (proposal). This was done by adding a shanghai-candidate tag to either the EIP\u2019s discussion-to thread on Ethereum Magicians, or by opening a new thread to discuss the EIP\u2019s inclusion in the fork, like for EIP-1153.  1580\u00d7890 137 KB  For EIPs where strong community support matters, this latter option can be a great way to catalogue support for and objections to the EIP, for which discussions can happen anywhere. Moving towards doing this in Ethereum Magicians threads can help avoid EIPs having to reinvent the wheel to document this information. A good forum templates for these posts could serve as an alternative to full blown EIP websites, such as eip4844.com.  Putting It All Together With the introduction of Network Upgrade Meta Threads, the upgrade process would rely on the following components:   EIPs: technical specifications for changes (coupled with executable specs)  discussion-to threads: async discussion of technical EIP details  $UPGRADE-candidate tags/threads: async proposal to consider an EIP for an upgrade, cataloging support, objections, status updates, etc.  Network Upgrade Meta Threads: async discussion of network upgrade scope/size/relative priorities  AllCoreDevs calls: synchronous discussion of EIPs and network upgrades scope, relying on all the above as input   Next Steps First, I\u2019d like to get feedback both here and on AllCoreDevs about whether introducing these threads would be beneficial. Assuming this is the case, then I suggest we trial the process for Cancun and reevaluate afterwards. ",
                    "links": [
                        "https://ethereum-magicians.org/c/eips/5",
                        "https://ethereum-magicians.org/t/shanghai-core-eip-consideration/10777",
                        "https://github.com/ethereum/execution-specs/tree/master/network-upgrades#definitions",
                        "https://github.com/ethereum/execution-specs/tree/master/network-upgrades#deploying-your-eip-to-mainnet",
                        "https://github.com/ethereum/pm/issues/675",
                        "https://ethereum-magicians.org/uploads/default/original/2X/2/2d4c1228139f16d62e804a304d9c68fa0bee0e4c.png",
                        "https://ethereum-magicians.org/uploads/default/original/2X/3/33ea74289282f1379140c7d6149e1305ca4f815b.png",
                        "https://ethereum-magicians.org/t/shanghai-core-eip-consideration/10777",
                        "https://ethereum-magicians.org/t/shanghai-candidate-eip-1153-transient-storage/10784",
                        "https://ethereum-magicians.org/uploads/default/original/2X/5/54842bac8253affb47e62af7b4acb8cb5ebcf73a.png",
                        "http://eip4844.com",
                        "https://ethereum-magicians.org/t/core-eips-in-an-executable-spec-world/8640",
                        "https://ethereum-magicians.org/t/cancun-network-upgrade-meta-thread/12060"
                    ],
                    "GPT-summary": "The author proposes the introduction of Network Upgrade Meta Threads to help facilitate higher-level discussion about the overall scope of upgrades. The proposal aims to improve the quality of the planning process for Ethereum's network upgrades by introducing dedicated Ethereum Magicians threads focused on the \"scope\" and \"size\" of upgrades, rather than the technical details of EIPs. The threads would serve as a place for the community to discuss the best high-level scope/goals/size for network upgrades, and would be used as input into AllCoreDevs calls. The author suggests trialing this process for Cancun/Deneb.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.7739378319275225
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/moodysalem",
                    "index": "2",
                    "likes": "0",
                    "time": "13/01/2023-19:29:13",
                    "content": "Firstly, I think the network upgrade threads would be an improvement to the process. The current fork scope planning takes place across many different forums, and having a single place to discuss prioritization per fork would be useful. I also agree it\u2019s challenging to come to the best decisions under the time constraint of ACD calls. However I would like to see a more significant change to the process in order to incorporate the missing stakeholders\u2013users and application developers.     timbeiko:  That said, client developers are the ones who must ultimately write the code for these upgrades and hence must be core to the final decision about scope. This proposal hopes to provide a way to increase the quality of input into this decision-making process.   Scope here is a very overloaded term. There are two processes happening in tandem here: deciding what is a good idea to implement (e.g. consider for inclusion) and deciding the order in which they are implemented (prioritization). Today, client developers are responsible for both. I feel these two processes should be separated. Client developers are in a great place to determine which changes are good changes. Client developers are also in the best place to determine how many changes can safely go into a fork. They are familiar with the code and know much complexity can be safely managed, whether an EIP is implemented correctly and well tested, etc\u2026 So they should be the final decision makers on which changes are eligible for inclusion and how many changes can go into a fork. But client developers are not always in the best place to determine the order in which many good changes should be implemented. The process of sorting many good changes needs to be focused on user feedback. Given the large number of changes that are CFI, I would like to see ordering of other smaller changes (e.g. EOF, EXTSLOAD, TSTORE, deactivate SELFDESTRUCT) come from the community. For the process of sorting among good changes I\u2019d propose collecting votes from activate validators. Validators could select the order of changes they\u2019d like to see, and the rankings can be aggregated to come up with a final ordering. Client developers can agree to respect the ordering and implement the changes in the consensus ordering on the ACD call. I know many are concerned that any kind of token voting leads to governance capture. I don\u2019t think those concerns apply to this proposal for two reasons\u2013validators have a vested interest in building the best blockchain network, and client developers still decide the eligible set of changes. Ethereum is supposed to make human coordination problems easier, and I think it would be a big miss to not use Ethereum to help with the issue at hand. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.904616724738676
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/mcdee",
                    "index": "3",
                    "likes": "0",
                    "time": "13/01/2023-22:40:37",
                    "content": "    moodysalem:  For the process of sorting among good changes I\u2019d propose collecting votes from activate validators   No comment about the general idea of voting, but this isn\u2019t a good set of users from which to take votes.  All of the examples you gave are on the execution layer, and anyone who is purely focused on the consensus side will have no idea of the relative importance of such features. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.386904761904761
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jessepollak",
                    "index": "4",
                    "likes": "1",
                    "time": "15/01/2023-21:27:15",
                    "content": "TL;DR I believe that the process proposed here would be an iterative, positive improvement on the overall Ethereum prioritization and execution process. I am in favor of experimenting with in 2023 and re-evaluating at the end of the year whether it\u2019s something we should continue or iterate on. Background Over the last year, Coinbase has begun making a concerted effort to contribute to overall Ethereum core development, primarily through our work on EIP4844. As we\u2019ve ramped up in these contributions, I\u2019ve felt grateful for the way we\u2019ve been welcomed into the existing process and feel like we\u2019ve been able to make a positive impact within the context of it. The primary touch points for us have been (0) shipping code to many clients, including Geth, Prysm, Lodestar, Erigon and playing a leadership role in driving 4844 forward; (1) regularly attending the ACD calls and sharing our perspectives on progress, technical viability, and prioritization; (2) participating in Devcon and the workshops & prioritization discussions there; (3) coordinating the weekly 4844 implementers call with other Core Devs. In these processes, our goal has been to listen and learn (we\u2019re still new!) while also sharing our perspective on how we believe Ethereum can best evolve. Areas of room for improvement While overall our experience has been very positive, we\u2019ve also experienced first hand some challenges with the existing process, including:  Friction around sharing perspectives, particularly on priority, in ACD calls Lack of clarity on where we should be sharing our perspective given that feedback Uncertainty around whether our perspective is valued and, if not, how we could change that  We\u2019ve had a number of conversations with folks across the Ethereum community about these challenges and at every stage have been met with kindness, openness, and a willingness to explore new ways of working together. Recommendation I believe that Tim\u2019s recommendation of Network Upgrade Meta Threads would be a significant positive improvement in directly addressing some of the challenges we\u2019ve faced. In particular, it would (a) reaffirm that community input from stakeholders like Coinbase is valued; (b) clarify where and how that input should be provided; (c) provide more information for decision makers to better weigh overall Ethereum roadmap prioritization. Based on this, I\u2019d like to see this proposal adopted for 2023, with a commitment to reflect on its success at the end of the year and iterate from there. As a preview of how you could expect Coinbase to participate in future Network Upgrade Threads, I wanted to share this internal document (now public) that we wrote in December 2023 as we weighed overall prioritization for H120223. Our goal in writing this was to align internally on the current status of the Ethereum roadmap and what we thought the best sequencing would be. However, I suspect that sharing this thinking publicly for future network upgrades would be a helpful input (among many) as the community decides on priority. Future work I agree with @moodysalem\u2019s observation that right now client developers are responsible for both deciding what is a good idea to implement and prioritizing those ideas. I also believe that it may make sense to further explore separating these concerns in the future by adding a new process and/or decision making structure for making final prioritization decisions. That said, I believe that the current process and decision making structure has served us well over the last many years, and given the overall importance of Ethereum, I would rather we move slowly and deliberately in changing things. To that end, I\u2019d recommend we experiment with Network Upgrade Meta Threads first (i.e. giving existing decision makers better information) before considering other changes (e.g. changing who is making decisions). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.99671316337983
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "5",
                    "likes": "2",
                    "time": "19/01/2023-15:49:14",
                    "content": "We agreed on ACDE#153 to try this for Cancun - first Network Upgrade Meta Thread up here: Cancun Network Upgrade Meta Thread ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "6",
                    "likes": "0",
                    "time": "19/01/2023-17:27:00",
                    "content": "How about we make HFMs again? At the very least, a summary of the EIPs included in major upgrades seems like good content for Meta-EIPs. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.620833333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "7",
                    "likes": "0",
                    "time": "19/01/2023-18:48:37",
                    "content": "If we move to using the executable spec, we can also do proper releases of the spec that list the EIPs. Agreed having better lists of \u201cwhat\u2019s in the fork\u201d beyond the README in that repo would be nice. Not necessarily opposed to Meta EIPs, but I\u2019d like to better understand why we stopped doing them before we bring them back! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.333333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/crypto",
                    "index": "8",
                    "likes": "0",
                    "time": "20/01/2023-16:41:58",
                    "content": "I am on the same page as @jessepollak, this should be a fully adopted proposal/initiative for 2023 and I\u2019m glad this is happening before major scaling upgrades such as PDS (4844), DS,and others. On top of that, the community input is going to officialy be valued, I would assume that the goal of this forum is to start a long proccess (or first step) towards governance decentralization and possibly on-chain voting (looong teeeerm). Looking from the outside, it\u2019s clever to think that Ethereum\u2019s roadmap is fully community-led, when in fact now more than ever that\u2019s materializing. I\u2019m excited about the moment we\u2019re in on Ethereum and contirbuting to this fantastic ecossystem is the first and foremost priority we can do as Blockchain researchers. @timbeiko congrats for the initiative. Btw, jesse your internal doc is not public (Google docs link broken) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.751225490196078
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jessepollak",
                    "index": "10",
                    "likes": "1",
                    "time": "22/01/2023-08:47:40",
                    "content": "Whoops, fixed the link so it should be publicly accessible here now. Thanks for flagging! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.208333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/sarareynolds",
                    "index": "11",
                    "likes": "2",
                    "time": "14/02/2023-19:24:32",
                    "content": "Sounds like we are already going forward with this proposal but just wanted to drop some of my own feedback/experience here. Overall, I think introducing this forum will be a net positive change to the current process and certainly worth trialing for Cancun/Deneb but I don\u2019t think it will fundamentally change much. With regards to this specific thought: \"  That said, client developers are the ones who must ultimately write the code for these upgrades and hence must be core to the final decision about scope. This proposal hopes to provide a way to increase the quality of input into this decision-making process.  \u201d This doesn\u2019t necessarily address the case in which other developers who may not be considered core devs meaningfully contribute to core code and testing suites. In my experience, there is not a system in place for this kind of contribution, one that comes from those who are not \u201ccore devs\u201d but who understand the code, use cases, and benefits to the ecosystem. There should be encouragement on this front and a stronger effort to incorporate those opinions better and with heavier weight. It is unfortunate that only EIPs that have a core dev champion or those that have been implemented by core devs themselves are the ones that get prioritized. With any upgrade process, contributing to core code will always be bottlenecked by the decision makers. In the current structure, because those that make decisions about the prioritization of changes are the same group of people that implement the changes, those that are outside this process will naturally and continually be deprioritized. Overall, I think there is a need to introduce other decision makers outside of core devs, who have tangible and prove-able knowledge about a subject that betters the ecosystem, but who also have similarly weighted input in upgrade discussions. This should be on threads (which it sounds like this will help) but also in ACD style calls, as that is ultimately where these decisions are made. I could imagine the EF supporting some kind of focused working group that is invited to speak at ACD and who\u2019s thoughts/inputs/opinions are weighed with core devs. I understand the desire for change to happen slowly but I hope this provides some perspective on why I think the decision making process needs to be democratized amongst a group that represents all facets of the ecosystem. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.443434343434344
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "12",
                    "likes": "1",
                    "time": "15/02/2023-22:27:02",
                    "content": "Thanks for sharing your thoughts, @sarareynolds! At a high level, I think there are two different types of \u201cexternal contributors\u201d that are worth separating: EIP champions and \u201cgeneral protocol contributors\u201d. In the case of the former, my view is that it\u2019s \u201cnecessary but not sufficient\u201d to do the technical work to get an EIP in a spot where it is considered for mainnet inclusion. If that isn\u2019t done, then it\u2019s harder for client teams to approach it. That said, I don\u2019t think a set of technical checkboxes can\u2019t be the only requirement for something to go onto mainnet. From a technical PoV, there\u2019s a limited number of things client developers can focus on, so they will inevitably end up having to decide what to include vs. exclude, as with any software project. Of course, high quality implementations + test cases make their lives easier and can help here. From a \u201csocial\u201d/design PoV, it\u2019s not clear that even given infinite client dev bandwidth we should implement every change that\u2019s technically sound. Historically, there are many changes that both the community or client devs have rejected even though the specs were of very high quality (e.g. ProgPoW, Parity Multisig restore, etc.).     sarareynolds:  In the current structure, because those that make decisions about the prioritization of changes are the same group of people that implement the changes, those that are outside this process will naturally and continually be deprioritized.   I think the quote above is a good segway towards the other type of contributor,  \u201cgeneral protocol contributors\u201d. We\u2019ve seen a fair amount of non-client dev people get involved in governance and get a say, and empirically the \u201cweight\u201d their voice has tends to be a function of time spent engaging * quality of engagement. That said, at the end of the day, client devs are the ones who maintain the software which runs the network, and have to deal with anything that goes wrong. Once concern they\u2019ve echo\u2019ed over the years is that EIP champions tend to be only focused on their own specific change, but then client teams are left to deal with anything resulting from it.     sarareynolds:  Overall, I think there is a need to introduce other decision makers outside of core devs, who have tangible and prove-able knowledge about a subject that betters the ecosystem, but who also have similarly weighted input in upgrade discussions.   I\u2019d argue that \u201cthe community\u201d has had a pretty strong voice historically in being able to stop a decision from happening, even though core devs were on board (ProgPoW is probably the biggest example?), and to convince them of changes they may not feel particularly strongly about (e.g. PoW issuance reductions). I think the spot where ACD is the weakest is making a call among many potential features that smart contract devs could benefit from (e.g. 1153 vs. 2537 vs. 3074). Being able to aggregate that and feed it as input into ACD would be valuable! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.655818452380952
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/sarareynolds",
                    "index": "13",
                    "likes": "1",
                    "time": "15/03/2023-19:44:02",
                    "content": " I think the spot where ACD is the weakest is making a call among many potential features that smart contract devs could benefit from (e.g. 1153 vs. 2537 vs. 3074). Being able to aggregate that and feed it as input into ACD would be valuable!  Thanks Tim, I think this is super valuable and will definitely take back to team & other devs. I agree it would be nice to understand from many projects/teams what application focused EIPs are important and evaluate them with tradeoffs in mind of impact vs. effort. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.353174603174603
                }
            ]
        }
    ],
    "group_index": "309"
}