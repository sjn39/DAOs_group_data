{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/time-limited-erc-20-approvals/7749",
            "title": "Time-limited ERC-20 approvals ",
            "index": 7749,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/vrypan",
                    "index": "1",
                    "likes": "1",
                    "time": "11/12/2021-07:47:30",
                    "content": "This is a discussion thread for an informational EIP describing how token allowances can have a time-limit and auto-expire. The basic idea is to extend approve() and allowance() in EIP-20 so that they use a _maxBlock parameter. The proposal will be something like this: approve becomes: function approve(address _spender, uint256 _value, uint256 _maxblock) public returns (bool success)  and allowance() returns 0 if current block > _maxblock. The idea is that most users pay attention to what happens when they approve an allowance, but forget about them after some time. This proposal will make allowances auto-expire, saving users the hassle to deal with old approvals and also spare them the gas needed to cancel them. Is this something worth submitting an EIP? ",
                    "links": [],
                    "GPT-summary": "The author of the post is proposing a change to the ERC-20 standard to include time-limited approvals for token allowances. The proposal suggests adding a _maxBlock parameter to the approve() and allowance() functions, which would cause allowances to auto-expire after a certain block number. The author is asking for feedback on whether this proposal is worth submitting as an EIP. A 3rd party could give constructive criticism on the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Privacy, Security and risk management",
                        "Law and regulations",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.857142857142858
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vrypan",
                    "index": "2",
                    "likes": "0",
                    "time": "11/12/2021-08:15:29",
                    "content": "Maybe, in order to maintain backwards compatibility with ERC-20, a new function approveWithLimit() could be introduced, and the definition of approve() can be left unmodified. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.340909090909091
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "3",
                    "likes": "0",
                    "time": "12/12/2021-10:09:24",
                    "content": "Welcome! This is an interesting idea, but I\u2019m going back and forth around it personally. EIP-2612. 2612 introduces a way to leverage signed messages to create an approval, and it includes a deadline as one of its parameters, which on one hand doesn\u2019t solve the problem you\u2019re talking about, since the deadline is only how long a possessor of the signed message has to call permit, but once they\u2019ve called permit within the deadline, they have a regular non-expiring approval. otoh, the fact that 2612 uses signed messages makes it convenient to use both the permit and the transfer of the permitted amount simultaneously, mitigating the risk. So I can\u2019t say I\u2019m coming out strongly in favor or against, but figured I\u2019d at least offer this as some context. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.87962962962963
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vrypan",
                    "index": "4",
                    "likes": "0",
                    "time": "12/12/2021-10:46:10",
                    "content": "Thank you, very much, @wschwab. I will study 2612. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.3
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vrypan",
                    "index": "5",
                    "likes": "0",
                    "time": "13/12/2021-23:39:09",
                    "content": "I have drafted an EIP based on the above idea. Should I wait for some feedback or reviews before submitting a PR? https://github.com/vrypan/EIPs/blob/master/EIPS/eip-draft_time_limited_token_allowances.md ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "6",
                    "likes": "0",
                    "time": "14/12/2021-12:26:37",
                    "content": "I think it\u2019s a personal choice - you\u2019re welcome to PR if you want, you can also take some extra time, learn about 2612, and decide if you still want to do it ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 6.333333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/lukehutch",
                    "index": "7",
                    "likes": "0",
                    "time": "14/06/2022-20:23:52",
                    "content": "@vrypan I like the idea, but the expiration should be a Unix time based deadline (block.timestamp, number of seconds) rather than a block number based deadline, because EIP2612 and other standards use time-based deadlines, and block mining rate is variable. (Block mining rate may also change dramatically at some point in the future due to proof of stake or some other factor, who knows.) ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.53125
                }
            ]
        }
    ],
    "group_index": "1541"
}