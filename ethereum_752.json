{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/dapplets-call-for-related-works/2903",
            "title": "Dapplets: call for related works ",
            "index": 2903,
            "category": [
                "Wallets"
            ],
            "tags": [
                "dapplets"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "1",
                    "likes": "2",
                    "time": "12/03/2019-09:42:52",
                    "content": "Hello all, We have implemented #dapplets proposal as very early stage PoC in ETHParis Hackathon. See this video for details. Now I am trying to review existing proposals and other things that could be related to dapplets in order to take a broader look and define a roadmap for further development. I have identified following items:   (EIP-719) Trustless Signing UI Protocol by @MicahZoltu, @Arachnid   (EIP-712) signTypedData by  @fulldecent, @danfinlay   EIP typed data translation by @weijiekoh  NatSpec RadSpec  Is there a good implementation of the three EIPs above available? Is there any other related items that could be important? please let me know, ",
                    "links": [
                        "https://twitter.com/Ethernian/status/1104596777519452160",
                        "https://github.com/ethereum/EIPs/issues/719",
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md",
                        "https://github.com/weijiekoh/eip-typed-data-translation/blob/master/EIPS/eip-typed-data-translation.md",
                        "https://github.com/aragon/radspec"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.2625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "2",
                    "likes": "0",
                    "time": "12/03/2019-13:56:13",
                    "content": "Thank you for the ping. I\u2019m involved more in NatSpec than 712. I have made some minor updates on NatSpec last month and I maintain it. But if we are going to have actual change here then we will require implementation from MetaMask or a competitor. It\u2019s not like other core EIP initiatives where somebody has an idea and Vitalik pays for its implementation out of the fund. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.324999999999999
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "3",
                    "likes": "0",
                    "time": "12/03/2019-15:03:21",
                    "content": "    fulldecent:  But if we are going to have actual change here then we will require implementation from MetaMask or a competitor.   Thank you for reply! I am not going to change standards right now. Just exploring the space currently. I have no much doubts on adoption because there are clear business incentives for wallets to go this way (if we provide sufficient level of security, of cause). ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.285714285714286
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "4",
                    "likes": "0",
                    "time": "22/03/2019-13:05:44",
                    "content": "@fulldecent, Even more because you may have different opinion on how current challenges in secure signing may be solved, I would very appreciate your opinion on the draft of the Dapplets article I have wrote in medium. Could you take a look? The scope of the article is to define the problem and outline possible solution without going into deep technical details. Any critic is appreciated. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.722222222222221
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "5",
                    "likes": "0",
                    "time": "22/03/2019-14:32:34",
                    "content": "Hi, I don\u2019t have a Medium account but I read the TL;DR and the proposed picture at the bottom. Two issues:   Removing Web3 from the dApp and adding a specific vendor\u2026 I think this is moving backwards. We should encourage the visitor (and the browser on their behalf) to have web3 services available. Just like we depend on them to have XMLHttpRequest available.   You are proposing MetaMask to make changes. This is fun but it wont happen. MetaMask /still/ doesn\u2019t support ERC-721, a large application class on the blockchain. And right now the way the ecosystem works is that everybody wants to reinvent the wheel. Just look at the number of ERCs created. That paper proposes adding a 2+ year delay for the user interface to update every time somebody wants to update a new application. 2a. One solution is to make the creation of the Signer UI customizable. As in you can design new forms (they can be responsive) and layout the elements on the page. Boom, then you just reinvented what we have today.   But don\u2019t let me stop you! I think all this is good ideas, and I\u2019d love to see you try. But the most likely way to make this reality is for you to fork MetaMask and implement this stuff. If your vision requires you wait for other people to implement this stuff then that is unlikely to ever happen. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.056818181818182
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "6",
                    "likes": "0",
                    "time": "22/03/2019-14:41:36",
                    "content": " You are proposing MetaMask to make changes.  not the case any more. ETHParis implementation was WalletConnect based.  Hi, I don\u2019t have a Medium account  challenge accepted\u2026 I should think how to share the draft without expecting medium account. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/JamesZaki",
                    "index": "7",
                    "likes": "0",
                    "time": "05/02/2020-21:59:43",
                    "content": "Hey @fulldecent, I always like seeing your posts around tokens etc. May I suggest a 2a\u2019. That is, a customisable signer UI with the following attributes:  is signed by the entity creating the smart contract (creating entity) on-chain integrity hash downloadable to wallet from creating entity run in a sandboxed environment in a wallet  access to web3 tx signing actions decoupled whitelisted domains if required    Would you say this reinvents what we have today? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5357142857142865
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "8",
                    "likes": "0",
                    "time": "06/02/2020-19:56:03",
                    "content": "Actually we already have most of that technology! The missing component is whitelist domains. We need an implementation and standard for that, it can look like: interface ERCxxxx {     enum Permission {None, UNUSED, UriIsAllowed, UriAndSubpathsAllowed, UriAndSubdomainsAndSubpathsAllowed};      /// @param uri Specified URI to check     /// @return magic A magic value (....) is returned if the specified URI allows the dApp to run     /// @note Client should test a URI, all parent paths, and all domain parents for completeness     function isUriAllowedToRunDapp(string calldata uri) returns (bytes4 magic) }  If you are serious about this, you can implement it, and then write it up, bring me in as coauthor. All of the other components already exist by convention in NatSpec. By default Solidity stores the source code hash to chain. All worthwhile contracts have their source code published to Swarm. So this means that any client is can do this:  Website requests transaction Client looks up target contract address Client uses ERCxxxx to ask if the current URI is authorized for target contract If authorized, client gets target contract source code from Swarm Client parses NatSpec from target contract source code Client renders transaction dialog using interpreted NatSpec  Work plan:  Implement ERCxxxx and standardize it Create client front end (Chrome extension, iOS app, etc) to implement the above ??? Profit  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.819444444444445
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/JamesZaki",
                    "index": "9",
                    "likes": "0",
                    "time": "07/02/2020-02:30:55",
                    "content": "In the case where the signer UI module is referred to by the smart contract (eg tokenURI), would it not be better to store the whitelist off-chain in the module? Trust-wise it\u2019s no different, but keeps long urls off-chain (although could be reduced with hashes). On-chain blacklists would make sense though. My original question was in response to\u2026     fulldecent:  2a. One solution is to make the creation of the Signer UI customizable. As in you can design new forms (they can be responsive) and layout the elements on the page. Boom, then you just reinvented what we have today.   wondering how the proposal was reinventing what we have today? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.979707792207792
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "10",
                    "likes": "0",
                    "time": "22/02/2020-15:06:45",
                    "content": "@JamesZaki, @fulldecent, Guys, thank you for your comments and sorry for delayed answer from my side. The Wallet Sandbox execution model has many fine aspects regarding chain of trust, execution model and type-to-widget mapping. I am preparing an article diving into many details of the topic and describing the state of our implementation. I need feedback, because not everything is solved optimal and there are place for improvements. Hopefully the article will be finalized next week. I would really appreciate if you could take a look over the draft in progress and give me some feedback. Please let me know if you are interested, I\u2019ll send you a link. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.976190476190476
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "11",
                    "likes": "0",
                    "time": "07/05/2021-13:26:47",
                    "content": "This comment is not aging well. We need to ALLOWlist domains. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "752"
}