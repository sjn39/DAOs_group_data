{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/uni-v2-wbtc-dai-collateral-onboarding-oracle-assessment-mip10c3-sp27/6522",
            "title": "[UNI-V2-WBTC-DAI] Collateral Onboarding Oracle Assessment (MIP10c3-SP27) ",
            "index": 6522,
            "category": [
                "Collateral Onboarding",
                "Domain Work"
            ],
            "tags": [
                "oracle-domain-work",
                "uniswap-v2",
                "uni-lp",
                "uni-v2-wbtc-dai"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/NikKunkel",
                    "index": "#1",
                    "likes": "3",
                    "time": "12/02/2021-15:00:39",
                    "content": "Preamble MIP10c3-SP#: 27 Author(s): Niklas Kunkel (@NiklasKunkel) Contributors: Type: Process Component Oracle Team Name: Green Status: RFC Date Proposed: 2020-02-12 Date Ratified: <yyyy-mm-dd>  Specification Introduction This Oracle would provide the UNI-V2-WBTC-DAI/USD price as part of the collateral onboarding process for the UNI-V2-WBTC-DAI LP token. Oracle Data Model A smart contract utilizes Uniswap primitives and liquidity reserves to calculate the price of a Uniswap Liquidity Provider (LP) token. The reserves of the Uniswap pool, and the supply of the Uniswap LP token are used as inputs to the model. This model utilizes MakerDAO Oracles to price the underlying assets. This model utilizes the following base assumptions: (1) Invariant k = reserve_x * reserve_y (2) reserve_x * price_x = reserve_y * price_y (only holds true at steady-state) Combining (1) and (2) allows us to derive the formulas for calculating the \u201cnormalized\u201d reserve balances of the underlying assets given the invariant k and prices of the underlying assets. (3) reserve_x = sqrt(k * price_y / price_x) (4) reserve_y = sqrt*(k  * price_x / price_y) Alternatively given one calculated normalized reserve, one can calculate the other using a mutation of (1). This is useful for optimizing gas since calculating the square root is an expensive operation. (5) reserve_x = k / reserve_y (6) reserve_y = k / reserve_x Once the normalized reserve balances have been calculated the price of the LP token can be derived: (7) price_lp = ( (reserve_x * price_x) + (reserve_y * price_y) ) / supply_lp Substitute of (3), (4) and (7) gives us the following model for calculating the price of a Uniswap V2 LP token: (8) price_lp = ( (sqrt(k * price_y / price_x) * price_x) + (sqrt(k * price_x / price_y) * price_y) ) / supply_lp This can be simplified to: (9) price_lo = 2 * sqrt(k * price_x * price_y) / supply_lp Oracle Supporting Data Model(s) WBTC/USD (canonical) |    Source     |  Asset Pair   |  Feed Model  | | :------------ | :------------ | :----------: |  |   Bitstamp    |    BTC/USD    |    Median    | |   Bittrex     |    BTC/USD    |              | |   Coinbase    |    BTC/USD    |              | |   Gemini      |    BTC/USD    |              | |   Kraken      |    BTC/USD    |              |  Oracle Address  Mainnet - UniV2LpOracle - TBD  Supported Tools UniV2LpOracle - Source Code UniV2LpOracle - Tests Remaining Work  Deploy Oracle from Factory Contract Update MegaPoker to poke UniV2LpOracle  Summary The Uniswap V2 WBTC-DAI pair has very little liquidity, low volume, and low fees. Addition of this collateral to the Maker Protocol is an experiment to determine the DAO\u2019s ability to bootstrap Dai liquidity through enabling credit. This Oracle utilizes the existing BTC/USD Oracle Medianizer for the BTC component of the Oracle and a DSValue with a static $1 price for the Dai component. This protects against flash-loan attacks which attempt to manipulate the reserve ratios of the pool. The Oracle Domain Team nonetheless recommends that the initial debt ceiling be limited to 3M Dai. This is a precautionary measure to limit the Maker Protocol\u2019s exposure to the Uniswap V2 LP Oracle smart contract until audits have completed successfully. ",
                    "links": [
                        "https://github.com/makerdao/univ2-lp-oracle/blob/master/src/Univ2LpOracle.t.sol",
                        "https://forum.makerdao.com/t/maker-relay-ep-32-en-espanol/6600",
                        "https://forum.makerdao.com/t/maker-relay-ep-32/6596"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.353537087912088
                }
            ]
        }
    ]
}