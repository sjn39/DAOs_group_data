{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/e-vm-an-evm-vm-in-evm/11126",
            "title": "E=vm\\xc2\\xb2 - an evm vm in evm ",
            "index": 11126,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/high_byte",
                    "index": "1",
                    "likes": "1",
                    "time": "30/09/2022-13:32:28",
                    "content": "I have created a small proof of concept - an evm implementation that runs inside evm.    GitHub    GitHub - hananbeer/evm2: e=vm\u00b2 (pronounced evm-squared; the = is silent) is... e=vm\u00b2 (pronounced evm-squared; the = is silent) is an evm that runs inside evm. - GitHub - hananbeer/evm2: e=vm\u00b2 (pronounced evm-squared; the = is silent) is an evm that runs inside evm.      potential use case #1: imagine you want to allow delegatecall to an arbitrary contract. but you also want to restrict that contract, e.g.:  no selfdestruct no sstore to slot 0 all subsequent calls must have 0 value etc.  potential use case #2: imagine you want a new opcode. but you don\u2019t want to go through EIP process which could take year(s) and might not pass. so you introduce the new opcode in evm2! it\u2019s a development layer on top of execution layer. would like to hear what the community says. open for discussion.  ",
                    "links": [
                        "https://github.com/hananbeer/evm2"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.190340909090909
                }
            ]
        }
    ],
    "group_index": "147"
}