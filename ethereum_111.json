{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/shanghai-candidate-eip-3074/10781",
            "title": "Shanghai-candidate: EIP-3074 ",
            "index": 10781,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "account-abstraction",
                "shanghai-candidate"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "1",
                    "likes": "7",
                    "time": "09/09/2022-16:37:10",
                    "content": " Early last year, I felt there was a real possibility of EIP-3074 being included in the Berlin hardfork. The authors pushed to get the EIP into a stable state, but it was a bit too late and there were still questions around the security of it. To resolve these security concerns, we had two security audits of the specification [1, 2] which both came back clean. We then reapplied the EIP for CFI for London. It was subsequently rejected to keep London simple, but with the understanding it would again be considered for Shanghai. Well \u2013 Shanghai is finally just around the corner! The EIP has been stable over the last year and there are no additional changes to consider. I would like propose the EIP for Shanghai (again)! There are many resources to understand the benefits of EIP-3074, however I want to point out two specific points that are particularly relevant today:  Despite EIP-4337 existing for over 1 year, I\u2019m not aware of any wallets that support it. For better or worse, core protocol changes are schelling points and EIP-3074 could quickly be adopted by major wallets (many of them support the EIP) and drastically improve UX on Ethereum. On a more practical front, smart contracts are still plagued with dealing with two types of ether (eth and weth). EIP-3074 provides the functionality to actually remove this distinction for contracts, which has been a very rough edge for developers.  ",
                    "links": [
                        "https://dedaub.com/blog/eip-3074-impact",
                        "https://github.com/ethereum/pm/issues/260",
                        "https://www.youtube.com/watch?v=C9hzAYkklQM&t=2403s",
                        "https://github.com/ethereum/pm/issues/394",
                        "https://eips.ethereum.org/EIPS/eip-3074",
                        "https://blog.mycrypto.com/eip-3074",
                        "https://www.youtube.com/watch?v=zToZVpKPW6Q",
                        "https://www.youtube.com/watch?v=pUJlZMXrVEI",
                        "https://www.youtube.com/watch?v=eEOb0hlrCLU",
                        "https://www.youtube.com/watch?v=KVrhyTk9_zY",
                        "https://twitter.com/search?q=eip-3074",
                        "https://www.youtube.com/watch?v=pS5asEp6ry8",
                        "https://ethereum-magicians.org/t/validation-focused-smart-contract-wallets/6603",
                        "https://ethereum-magicians.org/t/eip-3074-auth-and-authcall-opcodes/4880",
                        "https://ethereum-magicians.org/t/getting-rid-of-weth-using-eip-3074/8041",
                        "https://ethereum-magicians.org/t/shanghai-core-eip-consideration/10777",
                        "https://ethereum-magicians.org/t/shanghai-core-eip-consideration/10777/4"
                    ],
                    "GPT-summary": "The author is proposing EIP-3074 for the upcoming Shanghai hardfork. The proposal has been stable for a year and has undergone two security audits. The author highlights two benefits of the proposal: it could improve UX on Ethereum and remove a rough edge for developers. The post also invites feedback and criticism on the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Grants, Funding and resource allocation",
                        "Not a proposal",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.59169254658385
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cyrus",
                    "index": "2",
                    "likes": "0",
                    "time": "16/09/2022-02:04:13",
                    "content": "Please note: I\u2019ve requested a small change to this EIP (specifically, how tx.origin is handled in a world where the gas payer and account \u201cdoing the thing\u201d are no longer synonymous) and hope that it can be considered and discussed before moving forward. See here:     EIP-3074: AUTH and AUTHCALL opcodes EIPs       In the current EVM, tx.origin is the account from which the transaction originates (logically, the account \u201cdoing the thing\u201d) as well as the account that pays the gas to execute the tx. They are synonymous.  With EIP-3074, this is no longer the case; these identities get split up: The logical originating account account \u201cdoing the thing\u201d is the AUTH\u2019d account, but the account paying the gas to initiate the transaction is the account making the AUTHCALL to remote control the AUTH\u2019d account into \u201c\u2026     Without this change, 3074 will break the way some of my 2015 smart contracts handle NFT ownership. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.303571428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "3",
                    "likes": "1",
                    "time": "16/09/2022-12:04:59",
                    "content": "    matt:     We somehow have 4/5 EIP editors in support of this  - @gcolvin is the only person that hasn\u2019t liked your post (yet). Too bad we can\u2019t participate in governance\u2026 EDIT: 5/5 EIP editors ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.833333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pgebheim",
                    "index": "4",
                    "likes": "1",
                    "time": "20/09/2022-17:46:21",
                    "content": "Heya! I\u2019ve been a bit out of the loop on this over the last year. I\u2019ve got some brass tacks questions that might be easy to answer / point me to the right resource:  Which clients already have implementations of 3074? Is the Quilt geth patch still the canonical implementation? Does anyone have a solid lists of tasks that would be helpful in getting this over the finish line? On the high level does everyone here agree with the thread @cyrus linked to earlier?  ",
                    "links": [
                        "https://ethereum-magicians.org/t/eip-3074-auth-and-authcall-opcodes/4880/111"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.732539682539683
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/yoavw",
                    "index": "5",
                    "likes": "1",
                    "time": "25/09/2022-14:11:45",
                    "content": "    matt:  To resolve these security concerns, we had two security audits of the specification   I think the audits actually came before the security concerns I raised.  The audits were finished on the June 14 2021 and May 19 2021, and my post above is from June 16 2021 and mentions risks that are not in the audits, as far as I recall. I\u2019m glad to see chainid was subsequently added to the signed message, which mitigates one of the attacks I demonstrated.  Thanks for adding that! I still feel that the risk outweighs the benefit, for the reasons I mentioned before.  E.g. no way to revoke a previously signed AUTH.  Revoking is hard to implement, but how about a deadline block number, like the one used in EIP 2612?  It would at least cap the risk to recent approvals. Even if we had a way to revoke old AUTH or set a deadline, attacks like the Governance Hijack I described would still be possible.  (Quick reminder: an invoker that helps users do something useful, but also delegates their voting tokens to an attacker.  Users won\u2019t notice anything since they still have the tokens, but the attacker steals everyone\u2019s voting power). Another concern is that EIP 3074 enshrines certain things we\u2019re trying to change.  It enshrines ECDSA signatures, which we\u2019re working to abstract away.  At a higher level it enshrines the EOA model rather than move Ethereum towards a contracts-only model.     matt:  Despite EIP-4337 existing for over 1 year, I\u2019m not aware of any wallets that support it.   While EIP 4337 hasn\u2019t been finalized yet, and new features like BLS aggregation are still work in progress, there are several wallets being built around EIP 4337 and a growing community of developers around it.  Building wallets takes time, and they\u2019re doing it while the EIP is undergoing breaking changes. To name a few, Stackup is ERC-4337 compliant, Candide is making progress, Soul Wallet is building an 4337 wallet for soulbound NFTs.  I\u2019m aware of a couple of others who haven\u2019t published yet, and a couple of teams working on ERC 4337 tooling to make wallet integration easier.  You\u2019re welcome to monitor progress on the Account Abstraction discord. While ERC 4337 is not a protocol change, I think we can build upon it and get all the benefits of EIP 3074 and beyond, without compromising on security.  I hope we can join forces and work on a set of EIPs that will take us there. ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-2612",
                        "https://ethereum-magicians.org/t/we-should-be-moving-beyond-eoas-not-enshrining-them-even-further-eip-3074-related/6538",
                        "https://www.stackup.sh/",
                        "https://docs.stackup.sh/",
                        "https://www.candidewallet.com/",
                        "https://coda.io/@candide/contributors/progress-1-25",
                        "https://docs.google.com/document/d/10JIe6Apirs8KdHGGtFIvs_IFNxLgFNLxOMLynKVgFcY/edit#heading=h.tat6al5f0tw",
                        "https://github.com/proofofsoulprotocol/smart-contract-wallet-4337",
                        "https://discord.gg/UY7HmJxK"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.488783943329398
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "6",
                    "likes": "1",
                    "time": "26/09/2022-13:56:56",
                    "content": " how about a deadline block number, like the one used in EIP 2612? It would at least cap the risk to recent approvals.  We can of course implement this in the EIP, but am generally against ( as you are aware  ) because it reduces the flexibility of the mechanism. It is a simple mechanism to implement in the contract, and that is where I believe it belongs. Developers must be able to handle implementing code which is secure, and wallet teams must ensure their users aren\u2019t exposed to insecure invokers. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/yoavw",
                    "index": "7",
                    "likes": "1",
                    "time": "26/09/2022-14:12:11",
                    "content": "    matt:  as you are aware    Yep. We already agreed to disagree on this philosophy  I\u2019m with you on giving developers as much flexibility as possible, but my concern is about the inevitability of bugs (or even maliciously introduced, well disguised \u201cbugs\u201d). On the trade off between making AUTH indefinite or limiting it in time, I\u2019m (a little bit) inclined towards the latter. But I acknowledge it\u2019s a trade-off so I\u2019ll counter myself and highlight a valid use case that my deadline suggestion would prevent.  Session-keys for games, like what ArgentX implements.  Sign an authorization for a game to perform a specific type of actions on your behalf so that you don\u2019t need to sign each one.  Usability is indeed better if you don\u2019t need to re-sign the AUTH every 30 minutes. It\u2019s possible to support this use case with account abstraction, e.g. an ERC 4337 wallet with a validation function that allows different keys to perform different actions.  And it\u2019s possible with a specialized EIP 3074 invoker that only transacts with the game contract.  But limiting the authorization to a deadline breaks it. Painful trade-off, I agree. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.754166666666666
                }
            ]
        }
    ],
    "group_index": "111"
}