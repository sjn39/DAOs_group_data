{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/medgasprice-opcode-eip/5480",
            "title": "MEDGASPRICE opcode EIP ",
            "index": 5480,
            "category": [
                "EIPs"
            ],
            "tags": [
                "eth1x",
                "opcodes"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/j_chance",
                    "index": "1",
                    "likes": "0",
                    "time": "05/03/2021-18:56:45",
                    "content": "This thread is for discussing the EIP adding a MEDGASPRICE opcode as described here. This opcode is designed to allow contracts to avoid the competitive nature of the gas price market by setting an upper bound on acceptable gas prices. This can be used (primarily) to prevent front-running, but could also be used for first come first serve sales, pseudo-serial queues in decentralized exchanges, etc. ",
                    "links": [],
                    "GPT-summary": "The post explains the proposal for adding a MEDGASPRICE opcode to contracts, which would allow them to set an upper bound on acceptable gas prices. The post invites discussion on the proposal and its potential uses, including preventing front-running and creating pseudo-serial queues in decentralized exchanges. Some users provide constructive criticism and ask questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Token economics"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 6.125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "2",
                    "likes": "0",
                    "time": "05/03/2021-20:12:15",
                    "content": "MEDGASPRICE may be a valuable opcode to include, but the current motivation doesn\u2019t convince me. It is really a crutch to attempt to stop front-running, but miners have complete control over that. If there is the economic incentive for them order transactions a certain way, they most likely will. I would like to see other valuable use cases for this opcode. Also note, the EIP-1559 BASEFEE opcode will provide contracts a mechanism to roughly gauge the current gas economy. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.494642857142857
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vbuterin",
                    "index": "3",
                    "likes": "0",
                    "time": "06/03/2021-12:58:38",
                    "content": "It would be easy to get around; eg. see https://ethresear.ch/t/flashbots-frontrunning-the-mev-crisis/8251 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/j_chance",
                    "index": "4",
                    "likes": "0",
                    "time": "08/03/2021-16:14:37",
                    "content": "Hey guys, I appreciate the feedback. The way I saw it there were two groups of people that could potentially front-run, everyone and miners. The everyone group could front-run using a very simple bot that submits transactions while miners would have a more difficult time due to the fact that they would need to find the block in question in order to re-order the transactions in a favorable way. My thinking was stopping the larger group would at least be a step in the right direction and then the odds of front-running become a function of the ratio of miners participating in front-running. That logic is a bit naive though, especially as mining fees decrease with EIP-1559 miners will be more incentivized than ever to extract value wherever possible. I still think a median gas price operator would be useful from a contract programming perspective but I don\u2019t know if it\u2019s different enough from the basefee operator to justify adding it. I also assumed that there would be inclusion fee competition after EIP-1559 but that would only happen if the economics don\u2019t work as expected - which seems unlikely to me now after thinking about it more. So, I agree this change is probably unnecessary. Also, thanks @MicahZoltu  for suggesting a commit reveal system for fraud proofs. Such a system is still vulnerable to front-running but could probably be tweaked to work well. I\u2019m not sure what to do with this EIP, I can edit it to be withdrawn or the PR can simply be closed. I\u2019m in favor of finishing the changes and marking it withdrawn so the discussion is preserved. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.842142857142857
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "5",
                    "likes": "0",
                    "time": "08/03/2021-16:35:17",
                    "content": "    j_chance:  commit reveal system for fraud proofs. Such a system is still vulnerable to front-running but could probably be tweaked to work well.   If done right there shouldn\u2019t be a way to frontrun.  Check out ENS for an example of an \u201cun-frontrunnable\u201d commit-reveal scheme. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None",
                        "None"
                    ],
                    "Sentiment": 4.642857142857143
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "6",
                    "likes": "0",
                    "time": "08/03/2021-16:35:51",
                    "content": "I would personally prefer the PR was just closed, but I would not block a proposal to just merge it as withdrawn so the history is retained. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/j_chance",
                    "index": "7",
                    "likes": "0",
                    "time": "08/03/2021-17:13:22",
                    "content": " If done right there shouldn\u2019t be a way to frontrun. Check out ENS for an example of an \u201cun-frontrunnable\u201d commit-reveal scheme.  Thanks for the tip! Their implementation is what I was thinking. The problem is, just by committing any hash you\u2019ve alerted the network that some fraud may have occurred. Anyone attempting to front-run could then quickly look at the rollup in question, find the fraud themselves and commit their own hash. One way I\u2019m thinking of avoiding this is having the commit stage occur separately from the rollup. e.g. an ephemeral contract is created with some appropriate methods then the reveal stage verifies and selfdestructs the contract.  I would personally prefer the PR was just closed, but I would not block a proposal to just merge it as withdrawn so the history is retained.  Yea, I\u2019m biased but I think preserving the discussion/idea is useful in case someone considers it in the future. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.205026455026454
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "8",
                    "likes": "1",
                    "time": "08/03/2021-17:51:46",
                    "content": "You can mask the commit in that case, so it isn\u2019t obviously a commit until the reveal.  I suspect you can do something with a CREATE2 contract where you send ETH to the address in advance and then the reveal would contain a proof of that transaction occurring.  Not terribly gas cheap, but there may be more gas efficient solutions as well (that is just what pops into my head). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.75
                }
            ]
        }
    ],
    "group_index": "1252"
}