{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/what-standards-are-out-there-for-issuing-payments-from-erc-20-or-nfts/13033",
            "title": "What standards are out there for issuing payments from ERC-20 or NFTs? ",
            "index": 13033,
            "category": [
                "Tokens"
            ],
            "tags": [
                "royalties",
                "dividends"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "1",
                    "likes": "0",
                    "time": "23/02/2023-18:26:32",
                    "content": "Here is a list of some I found, post here if you know of any others. ERC-2981 Overview: https://www.nftstandards.wtf/Standards/EIP2981+Royalty+Standard https://eips.ethereum.org/EIPS/eip-2981 ERC-5173  Ethereum Improvement Proposals   ERC-5173: NFT Future Rewards (nFR) A multigenerational reward mechanism that rewards\u200c all \u200cowners of non-fungible tokens (NFT).      ERC-1726  github.com/ethereum/EIPs     \t      ERC-1726: Dividend-Paying Token Standard            opened 07:13PM - 27 Jan 19 UTC             closed 05:44AM - 12 Feb 22 UTC               Roger-Wu                 ``` eip: <to be assigned> title: Dividend-Paying Token Standard author: Roger\u2026 Wu (@Roger-Wu) <gsetcrw@gmail.com>, Tom Lam (@erinata) <tomlam@uchicago.edu> type: Standards Track category: ERC status: Draft created: 2019-01-27 ```  ## Simple Summary  A standard interface for dividend-paying tokens.   ## Abstract  The following standard allows for the implementation of a standard API for dividend-paying tokens within smart contracts. This standard provides basic functionality to allow anyone to pay and distribute ether to all token holders. A token holder can then view or withdraw the ether distributed to them from the contract.   ## Motivation  While the number of tokens and dapps with dividend paying features is growing, there is few widely adopted standard interfaces for such contracts. A standard interface allows wallet/exchange applications to work with any dividend-paying token on Ethereum, which makes it much easier to view and manage dividends from different sources.  In this EIP, we propose a standard interface and a well-tested implementation for a dividend-paying token contract. We hope that our work could help the community to reach a consensus of the standard.   ## Specification  ```solidity pragma solidity ^0.5.0;   /// @title Dividend-Paying Token Interface /// @author Roger Wu (https://github.com/roger-wu) /// @dev An interface for a dividend-paying token contract. interface DividendPayingTokenInterface {   /// @notice View the amount of dividend in wei that an address can withdraw.   /// @param _owner The address of a token holder.   /// @return The amount of dividend in wei that `_owner` can withdraw.   function dividendOf(address _owner) external view returns(uint256);    /// @notice Distributes ether to token holders as dividends.   /// @dev SHOULD distribute the paid ether to token holders as dividends.   ///  SHOULD NOT directly transfer ether to token holders in this function.   ///  MUST emit a `DividendsDistributed` event when the amount of distributed ether is greater than 0.   function distributeDividends() external payable;    /// @notice Withdraws the ether distributed to the sender.   /// @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.   ///  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.   function withdrawDividend() external;    /// @dev This event MUST emit when ether is distributed to token holders.   /// @param from The address which sends ether to this contract.   /// @param weiAmount The amount of distributed ether in wei.   event DividendsDistributed(     address indexed from,     uint256 weiAmount   );    /// @dev This event MUST emit when an address withdraws their dividend.   /// @param to The address which withdraws ether from this contract.   /// @param weiAmount The amount of withdrawn ether in wei.   event DividendWithdrawn(     address indexed to,     uint256 weiAmount   ); } ```  OPTIONAL functions for a dividend-paying token contract:  ```solidity pragma solidity ^0.5.0;   /// @title Dividend-Paying Token Optional Interface /// @author Roger Wu (https://github.com/roger-wu) /// @dev OPTIONAL functions for a dividend-paying token contract. interface DividendPayingTokenOptionalInterface {   /// @notice View the amount of dividend in wei that an address can withdraw.   /// @param _owner The address of a token holder.   /// @return The amount of dividend in wei that `_owner` can withdraw.   function withdrawableDividendOf(address _owner) external view returns(uint256);    /// @notice View the amount of dividend in wei that an address has withdrawn.   /// @param _owner The address of a token holder.   /// @return The amount of dividend in wei that `_owner` has withdrawn.   function withdrawnDividendOf(address _owner) external view returns(uint256);    /// @notice View the amount of dividend in wei that an address has earned in total.   /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)   /// @param _owner The address of a token holder.   /// @return The amount of dividend in wei that `_owner` has earned in total.   function accumulativeDividendOf(address _owner) external view returns(uint256); } ```  ## Implementation  Our implementation of a mintable dividend-paying ERC20 token: https://github.com/Roger-Wu/DividendPayingToken   ## Backwards Compatibility  The interface is designed to be compatible with ERC20 (#20) and ERC1400 (#1411) security token standard.   ## Copyright Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).        Related articles and discussions     ERC-1155 and ERC-2981 Royalties - where are the standards heading to? Tokens       Hi,  I am exploring ERC 721 and 1155 with possible EIP 2981 royalties implementation.  I would like to have the opinion of more experienced developers to better understand what can be done and where the standards are heading to.  There are some instances in which a digital assets, let\u2019s say a song from a music album, has the necessity of its unique ID in order to be distinguished from the other songs on the same album.  At the same time the author does not want the asset to be sold as an individ\u2026        Medium \u2013 22 Jun 22    ERC-20 tokens as dividends paying shares (solidity) I recently challenged myself to implement a dividend paying ERC20-token on Ethereum using solidity. I was working on a dapp that would also\u2026  Reading time: 6 min read       ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-2981",
                        "https://eips.ethereum.org/EIPS/eip-5173",
                        "https://eips.ethereum.org/EIPS/eip-5173",
                        "https://github.com/ethereum/EIPs/issues/1726",
                        "https://github.com/ethereum/EIPs/issues/1726",
                        "https://github.com/Roger-Wu",
                        "https://ethereum-magicians.org/t/erc1155-and-eip2981-royalties-where-are-the-standards-heading-to/7888",
                        "https://medium.com/coinmonks/erc-20-tokens-as-dividends-paying-shares-solidity-b95f6c6c52ce",
                        "https://medium.com/coinmonks/erc-20-tokens-as-dividends-paying-shares-solidity-b95f6c6c52ce"
                    ],
                    "GPT-summary": "The post provides a list of standards for issuing payments from ERC-20 or NFTs and proposes a standard interface for dividend-paying tokens. The author explains the motivation behind the proposal and the basic functionality it provides. A third party is also mentioned, which has implemented a mintable dividend-paying ERC20 token. The post also includes a link to a related article and discussion.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.334920634920635
                }
            ]
        }
    ],
    "group_index": "362"
}