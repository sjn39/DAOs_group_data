{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-6066-signature-validation-method-for-nfts/11943",
            "title": "EIP-6066: Signature Validation Method for NFTs ",
            "index": 11943,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft",
                "erc"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/boyuanx",
                    "index": "1",
                    "likes": "1",
                    "time": "30/11/2022-08:40:09",
                    "content": "Discussion for https://github.com/ethereum/EIPs/pull/6066 ",
                    "links": [
                        "https://ethereum-magicians.org/t/ethereum-magicians-session-in-denver-2023/12610/4"
                    ],
                    "GPT-summary": "The post is a discussion about EIP-6066, which proposes a signature validation method for NFTs. The author is seeking feedback, and third parties are providing constructive criticism and asking questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "None",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "2",
                    "likes": "0",
                    "time": "15/12/2022-19:59:53",
                    "content": "Hi @boyuanx, Thank you for this EIP. I am in full support for this EIP which extends EIP-1271, this is well needed! E.g. This EIP will be useful for EIP-5453 endorsement which. Feel free to mention use cases like EIP-5453 in your Motivation to add the weights of necessity of this EIP. Also, I like to propose considering adding a extension field for future-proof (EIP-5750: General Extensibility for Method Behaviors)     function isValidSignature(         uint256 tokenId,         bytes32 hash         bytes calldata extraData, // ADD THIS     ) external view returns (bytes4 magicValue); }  For example, this will allow future extending EIPs, e.g.  add \"only consider valid when user\u2019s EIP-1155 balance of tokenId > miniumBalance only consider valid if user also hold slots of slotId   The EIP-5750 documented the rationale why adding an extension is beneficial. Had EIP-1271 had this extending field, they will not have the disadvantage that this EIP intends to solve and improve. In short, this is EIP a great idea. I was thinking the same for a while, happy to collaborate in the context of EIP-5453 ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-5750",
                        "https://eips.ethereum.org/EIPS/eip-5453"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author wants to collaborate on proposal"
                    ],
                    "Sentiment": 6.161458333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boyuanx",
                    "index": "3",
                    "likes": "2",
                    "time": "16/12/2022-22:30:24",
                    "content": "Thank you @xinbenlv, I agree with your points regarding flexibility and have incorporated the data field into my draft. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "4",
                    "likes": "1",
                    "time": "31/01/2023-01:09:02",
                    "content": "I\u2019m still not sold on the motivation for this EIP, but I think you make your case well enough. I just don\u2019t see the benefits over an EIP-1271 signature from a smart contract wallet controlled by the DAO. That\u2019s me taking off my editor hat, however, so feel free to disregard! ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 6.190476190476191
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "5",
                    "likes": "0",
                    "time": "31/01/2023-01:12:15",
                    "content": "As part of our process to encourage peer review, we assign a volunteer peer reviewer to read through your proposal and post any feedback here. Your peer reviewer is @ballestar! Please note that this review is NOT required to move your EIP through the process. When you\u2014the authors\u2014feel ready, just open a pull request. If any of this EIP\u2019s authors would like to participate in the volunteer peer review process, shoot me a message!  @ballestar please take a look through EIP-6066 and comment here with any feedback or questions. Thanks! ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-6066"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "6",
                    "likes": "0",
                    "time": "31/01/2023-11:44:43",
                    "content": "I\u2019m a bit unsure why the method is called \u201cisValidSignature\u201d but no signature is provided to do any check. The EIP references eip 1271 which specifically passes a signature (without enforcing the standard for this signature). The idea of validating a signature means that something can be signed off-chain, What you are doing here, and what this EIP allows, is not validating a signature, simply to check a flag. There is no signature involved, so no way to recover a signer and therefore no way to do stuff off-chain. Like in EIP-1271: The owner of the contract signed something off-chain Then an operator lambda can come and verify that this signature is valid for the whole contract I do understand and agree that a way to have \u201cper token signature\u201d is needed and can add to the standards, but I do not think this EIP can do that without actually providing a signature. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boyuanx",
                    "index": "7",
                    "likes": "1",
                    "time": "31/01/2023-17:06:01",
                    "content": "@dievardump In this case, the signer is the token itself and the signing action is initiated by the token owner at the time. In terms of the signature, I referenced Gnosis Safe which does something similar here: https://github.com/safe-global/safe-contracts/blob/main/contracts/libraries/SignMessageLib.sol#L20 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None",
                        "None"
                    ],
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "8",
                    "likes": "0",
                    "time": "31/01/2023-17:16:22",
                    "content": "Yes but by not passing a signature, you restrict the use cases for the EIP Adding the signature would allow people to create other implementations/signature verification requiring a real signature (for example from the current owner of the item or from the collection creator or\u2026). And this would still work with your example by passing a bytes(0) signature But all in all, I do think what you are trying to achieve can also already be done with EIP-1271. What is in \u201cbytes32 hash\u201d is totally arbitrary and could be the hash of a something that includes the tokenId and would only work for this tokenId. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.975
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boyuanx",
                    "index": "9",
                    "likes": "1",
                    "time": "31/01/2023-18:03:30",
                    "content": "I agree use cases are restricted by not including a signature, but this is purposefully done so that the validation process is strictly limited and tied to the token and nothing else. The intent is for the token itself to act as the sole signing entity and not include or require any external entities (think of a stamp of approval), whereas EIP-1271 requires an ECDSA signature by the EOA signing entity. Passing in bytes(0) works but it\u2019s not the intent of that EIP. I also agree bytes32 hash could incorporate the tokenId, but this is not standardized and would make interoperation difficult, which is precisely why a clear guideline (this EIP) needs to be established. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None",
                        "None"
                    ],
                    "Sentiment": 4.940476190476191
                }
            ]
        }
    ],
    "group_index": "240"
}