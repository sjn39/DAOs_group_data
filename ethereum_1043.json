{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-2583-penalties-for-trie-misses/4190",
            "title": "EIP 2583: Penalties for trie misses ",
            "index": 4190,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "1",
                    "likes": "0",
                    "time": "10/04/2020-13:24:13",
                    "content": "Discussion-topic for https://github.com/ethereum/EIPs/pull/2583 ",
                    "links": [],
                    "GPT-summary": "The post is a discussion topic for EIP 2583, which proposes penalties for trie misses in Ethereum. The author is seeking feedback and explaining the proposal, while third parties are asking questions and reviewing the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "None",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "2",
                    "likes": "0",
                    "time": "10/04/2020-13:32:12",
                    "content": "This eip introduces a penalty for operations which hit the main account trie but misses. The penalty is somwhere around 1K gas, since any higher penalty would be possible to bypass via shielding through a call (more details in the EIP). There are also two variants suggested, which both overcome the attack. Alt 1: Insta-refunds Bump all trie accesses with penalty. EXTCODEHASH becomes 2700 instead of 700.  If a trie access hit an existing item, immediately refund penalty (2K )  Upside:  This eliminates the \u2018shielded relay\u2019 attack  Downside:  This increases the up-front cost of many ops (CALL/EXTCODEHASH/EXTCODESIZE/STATICCALL/EXTCODESIZE etc)  Which may break many contracts.    Alt 2: Parent bail Use penalty as described, but if a child context goes OOG on the penalty, then the remainder is subtracted from the parent context (recursively). Upside:  This eliminates the \u2018shielded relay\u2019 attack  Downside:  This breaks the current invariant that a child context is limited by whatever gas was allocated for it.  However, the invariant is not totally thrown out, the new invariant becomes that it is limited to gas + penalty.   This can be seen as \u2018messy\u2019 \u2013 since only some types of OOG (penalties) becomes passed up the call chain, but not others, e.g. OOG due to trying to allocate too much memory. There is a distinction, however:  Gas-costs which arise due to not-yet-consumed resources do not get passed to parent. For example: a huge allocation is not actually performed if there is insufficient gas. Whereas gas-costs which arise due to already-consumed resources do get passed to parent; in this case the penalty is paid post-facto for a trie iteration.    ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.593103655603655
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "3",
                    "likes": "0",
                    "time": "10/04/2020-13:38:53",
                    "content": "pinging @axic @karalabe @vbuterin @AlexeyAkhunov ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AlexeyAkhunov",
                    "index": "4",
                    "likes": "0",
                    "time": "20/04/2020-15:43:29",
                    "content": "Thank you! I have looked at it. What I did not understand is this - why do the accesses that miss the items in the account trie are worse than accesses that do not miss? Or are you saying that all account accesses are currently underpriced, but we will only adjust the pricing for those we deem to be \u201cattacking\u201d? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.333333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "5",
                    "likes": "1",
                    "time": "22/04/2020-15:13:41",
                    "content": "So, the reasoning is:  For hits, it\u2019s possible to cache them. Some nodes will have executed the tx while in txpool. and caches will be \u201cwarm\u201d once the block includes the tx. Also, there\u2019s more work involved in getting \u2018hits\u2019, as you need to first fill the memory with a large chunk of valid addresses, then iterate over and load from memory into stack. As opposed to just GAS and done. Secondarily: trie misses are more UX-friendly to penaliz. In most cases, a trie miss means that the layer2-flow should be aborted. So it doesn\u2019t matter if we add another X gas, potentially causing an OOG, because the contract would have reverted anyway.   Or are you saying that all account accesses are currently underpriced, but we will only adjust the pricing for those we deem to be \u201cattacking\u201d?  Almost but not quite. I do think trie-misses are more expensive, and I also think all trie accesses are underpriced in general, but I think the former is more attackable than the latter. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.6919642857142865
                }
            ]
        }
    ],
    "group_index": "1043"
}