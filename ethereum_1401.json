{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-3664-next-generation-game-nft-standard/6738",
            "title": "EIP-3664: Next Generation Game NFT Standard ",
            "index": 6738,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/T.Y",
                    "index": "1",
                    "likes": "1",
                    "time": "28/07/2021-11:56:38",
                    "content": "In this proposal, we created the gNFT standard, which makes up for the problem that ERC-1155 can only support packed transfer and unchangeable attributes of NFTs. gNFT can make the attributes in the game props have four characteristics: transferable, upgradeable, changeable and evolvable. By using ERC-3664 standard NFTs in game, players are able to complete almost all operations on props only through smart contracts! For details, please check EIPs/eip-3664.md at master \u00b7 DRepublic-io/EIPs (github.com) Also, suggestions are welcome! Let\u2019s make game NFT standard stronger:) ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.449175824175824
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "2",
                    "likes": "0",
                    "time": "14/03/2022-20:21:56",
                    "content": "Would you mind updating the first post to link directly to the PR in the ethereum/EIPs repository?  The TransferSingle and TransferBatch events shadow the names of the EIP-1155 interface. While they might not conflict on a technical level (maybe they do, I\u2019m not sure), I would propose renaming them to AttributeTransferSingle and AttributeTransferBatch to make it clear what is being transferred.  Reusing balanceOf to read the value of an attribute seems a bit misleading. Maybe choosing a different name (ex. attachedTo) would make it more clear? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5
                }
            ]
        }
    ],
    "group_index": "1401"
}