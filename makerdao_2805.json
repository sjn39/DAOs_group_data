{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/mip26-dssgov-governance-contract-redesign/4589",
            "title": "MIP26: DssGov - Governance Contract Redesign ",
            "index": 4589,
            "category": [
                "Maker Improvement Proposals",
                "RFC"
            ],
            "tags": [
                "voting",
                "governance",
                "dschief",
                "executive"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/cmooney",
                    "index": "#1",
                    "likes": "30",
                    "time": "06/10/2020-15:24:09",
                    "content": " MIP26:  DssGov - Governance Contract Redesign  Preamble MIP#: 26 Title: DssGov - Governance Contract Redesign Author(s):  Smart Contracts Domain Team Type: Technical Status: Request for Comments (RFC) Date Proposed: 2020-10-06 Dependencies:  Replaces: DSChief   Sentence Summary This MIP defines DssGov, a contract replacement for DSChief that comes with improved security, usability and functionality for holders of the Maker governance token (MKR).  Paragraph Summary The Governor Contract, or DssGov for short, is a Dai Stablecoin System Contract that authorises Maker governance to make changes to the Maker protocol by supporting on-chain proposals. Unlike the existing DSChief, DssGov introduces security enhancements to prevent flashloan actions, usability improvements to enable multiple concurrent executive votes, as well as delegation functionality to allow holders to delegate their vote. This contract will also support integration with Layer 2 solutions to enable off-chain vote participation.  Executive Summary - the proposed DssGov contract supports:  Multiple concurrent proposals A threshold that must be exceeded for proposals to pass Delegation Flashloan risk prevention  The technical complexity and impact of this MIP is considered HIGH due to it being a critical part of the Maker protocol.  Motivation This Maker Improvement Proposal initially stemmed from a need to make the existing governance contract more secure and user friendly, however it quickly became apparent that a new contract must also introduce additional functionality such as delegation to meet community needs and ecosystem evolution. For a summary of the existing Governance system please refer to the Governance Chief Contract Redesign: A Pre-mip Discussion and the Chief - Detailed Documentation for a detailed view of the DSChief smart contract. From a security perspective the above pre-MIP discussion revealed a number of motivations for change, including:  The current governance contract implementation is exposed to transition risk when moving votes from one proposal to another because a reduced amount of MKR could be used to elect a random (and potentially malicious) proposal. When a new proposal gains a majority of MKR, the action of lifting a new hat is not an automatic/instant action, meaning that alternative proposals can sneak in to introduce unexpected changes. Stray spells can exist without expiry, potentially posing an ongoing threat to the system. There is no pause duration between user lock/free actions leading to a potential flashloan risk. Migration risk when moving to a new Chief contract (such as DssGov), where authority must be transferred which introduces a coordination problem to ensure that there is enough MKR on the new contract\u2019s hat while also ensuring there is enough MKR in the old chief to pass the proposal. MKR distribution across proposals potentially weakens the current HAT and exacerbates the above transition/migration risks.  From a usability perspective, motivations include:  That the current system is only able to support a single executive at a time which is unmanageable and doesn\u2019t scale with the addition of more collateral types and risk parameters. That the use of the hat mechanism (the transition from one proposal to another) would not allow multiple concurrent proposals to exist.  Discussion of the above, also introduced motivations for additional functionality:  Support for Layer 2 integration to facilitate off-chain voting and reduce/eliminate rising gas costs Support for  Delegation thereby allowing users to help secure the system even through they may not be weekly participants  Taking the above motivation as inspiration, it is evident that much of the complexity stems from the existing hat paradigm. Rethinking this design gives the Maker community an opportunity to explore more secure and usable methods of governance.  Specification The new design utilises a threshold mechanism that, alongside snapshotting, enables multiple concurrent executives as well as support for delegation and protection against flashloans. These features and capabilities will be described in the specifications below.  MIP26c1 Utilizing a threshold that must be exceeded for a proposal to pass This new design uses a variable threshold based on the amount of active MKR locked in DssGov. This threshold must be exceeded in order for a spell to be cast and make protocol changes. This is a departure from the Hat paradigm currently used, which requires users to shift their MKR from one proposal to another. In addition to the security motivations mentioned above, this design improvement also allows for the support of multiple concurrent proposals once voters have locked their MKR in DssGov. It will be the responsibility of governance to define the threshold as a percentage of the amount of active MKR locked in DssGov. This value will be a percentage value as opposed to an absolute number because a fixed number may introduce an unreachable amount causing the system to cease to function if that value is unable to be reached. Voter engagement in 2020 illustrates the following levels of participation:  Further risk analysis and research will be conducted to determine the correct threshold level, however initial review indicates that a level higher than 50k MKR would have been sufficient for all but one of this year\u2019s executive votes. This design is also considering an upper boundary to the threshold to prevent accidental locking of the system if an unattainable level were to be set. This would be a constant value and if included would be voted on by Governance when accepting the design. The concept of a threshold introduces the need to ensure that the MKR in DssGov is \u2018active\u2019 MKR, i.e. not stale or forgotten MKR which is something expanded upon below.  MIP26c2 Using active/inactive MKR to define the threshold Due to the threshold relying on the amount of active MKR locked in DssGov, it becomes necessary to ensure that the locked MKR is not old, forgotten, or lost. This is important to prevent the \u201cstale\u201d MKR from skewing the threshold value and make it impossible for actual participating MKR to reach the required numbers to pass a proposal. If MKR has remained inactive for a period of time as defined by governance it will be considered stale and will no longer count towards the total active amount of MKR. It is expected that this period of time will be defined as a number of weeks or months pending further analysis. Inactivity can be influenced both by the inactivity of the owner, and if the owner has delegated their MKR, then also the inactivity of the delegated address. Both periods of inactivity can have different time values as defined by governance. It is expected that the period at which a delegate becomes inactive will be much shorter than the point at which an MKR owner becomes inactive. This is to ensure that delegates are acting in the interest of the MKR delegated to them, while the MKR owner doesn\u2019t have to interact with the system as often to confirm their continued involvement. If a delegate becomes inactive this means that the voting rights delegated to them will also become inactive and likewise no longer count towards the total active amount of MKR (which influences the threshold calculation). If however a delegate becomes active again after being inactive, they can reactivate the MKR delegated to them unless the owner has since removed their delegation. Inactivity of an owner means that their delegation will be removed from any delegated address. In the event that an owner\u2019s MKR becomes inactive, it will be possible for the MKR owner to return the MKR back to their original account as a separate transaction. Alternatively, they will be able to delegate once again if desired. The ability to make a user\u2019s MKR inactive is made possible through the following gas mint/burn mechanism explained in the next section.  MIP26c3 Mint/burn function to facilitate accurate counting of MKR balances When an MKR owner locks their MKR in DssGov, they will be minting a gas token. This gas token will allow any bot or altruistic participant to remove that user\u2019s MKR from the total amount of active MKR if it becomes stale. Due to the existence of the gas token there will not be any cost to a bot/altruistic user for undertaking this action, which will maintain a fresh state for the threshold to reference. Minting a gas token occurs in two instances:  When an owner delegates to themselves or to a delegate address they will be minting a gas token and, When a delegated address begins its period of activity it will also mint a gas token.  These operations will ensure that it is possible for third parties to unwind inactive MKR from the system. Keeping the protocol updated with the correct amount of active MKR is not only important for managing the threshold, but also for a new function that we will introduce now, called snapshotting.  MIP26c4 Using snapshots to record MKR account balances participating in governance Snapshotting is the process of calculating MKR account balances locked in DssGov at the point in time that a proposal was created. The system will therefore only allow that maximum amount of MKR recorded at the time of the snapshot to vote on the respective proposals. If a user adds or removes MKR after a proposal has been created, the amount of MKR recorded as part of the snapshot will not be altered for those proposals. Future proposals will use a new snapshot that will record a new MKR balance calculated at the time of the proposal\u2019s creation. Snapshotting is important because it eliminates the gas intensive nature of unvoting MKR from old proposals to vote for new proposals. This mechanism coupled with the threshold optimises user governance interaction with the protocol. In order to make this solution function correctly, it is important to know that in the background there are two explicit snapshots: User Action Snapshot - captures the amount of voting rights a user has since they made their last action. An action could include any kind of change in their voting rights; locking, freeing, delegating their MKR, or having their MKR declared inactive due to it not being used as per MIP26c3 (the mint/burn function). Proposal Creation Snapshot - records  the total active MKR amount in DssGov at the moment of proposal creation based on the user action snapshots. This value will be used to determine the threshold and quorum values. It is not possible for the proposal creation snapshot to record all user voting rights in one go - as one might do with a traditional database, instead it must reference the user action snapshot to check the user\u2019s corresponding voting rights.  MIP26c5 Supporting multiple proposals Although multiple concurrent proposals are made possible through the aforementioned threshold and snapshotting mechanisms, it is worth calling this out independently as a new capability because it is the main pain point for governance participants today. Currently, users are unable to participate in multiple concurrent proposals without locking/freeing MKR from one proposal to another as part of the continuous approval voting system. This redesign removes the need to shift MKR weights and also eliminates the need for bundling proposals as users will be able to interact with multiple concurrent proposals. As previously mentioned, these proposals will only pass if the amount of MKR in the snapshot exceeds the defined threshold. The voting experience retains the existing \u2018yes\u2019 voting in support of a proposal, where there is no explicit \u2018no\u2019 vote. This again reinforces the importance of the threshold. This design decision has been chosen to facilitate faster voting. An alternative design would require a voting window in which yay/nay votes would contribute towards an outcome at the end of a time period. Such a time period of e.g. 3 days would prevent quick changes to risk parameters, as such the time-window solution along with the use of explicit \u2018no\u2019 votes was dropped in favor of continuous approval voting. One can imagine the frontend implementation surfacing multiple proposals, each of which can now pass on their own independent merit. These proposals will continue to function as part of a continuous approval voting process that now references the amount of MKR in a users account at the time of snapshotting. The system will continue to use spell expiry limits and system pauses as implemented today, which will be covered further below.  MIP26c6 Delegation Delegation is the process of enabling another individual to vote on the owner\u2019s behalf, whereby they are given voting rights in MKR weight, while the owner retains custody of the MKR tokens and is free to transfer them at any time. At a high level the user will lock their MKR in DssGov and either vote themselves or delegate to another address as shown below:  This mechanism ensures that tokens do not rely on the security of third party delegation addresses, including Layer 2 solutions that may want to participate as a delegate. Locking and delegating directly from the Chief contract is a safe way to participate in delegation as tokens can only ever be returned to the MKR owner\u2019s address. This solution does not allow delegates to forward delegated votes to other addresses. This design decision was made due to the complexities of recording voter balances and changes across a hierarchy of potential delegates. It is worth mentioning that snapshot rules also apply for delegates. Therefore, if a user delegates their MKR to another address, a snapshot will be created that a proceeding proposal will reference as part of it\u2019s MKR calculation. This will ensure that the delegate is able to vote with the correct amount of MKR weight given to them. Although the snapshot capability will not let an MKR owner vote for a proposal if they have delegated their MKR to another address, governance is always able to remove (drop) a prior proposal if it is deemed malicious by creating a new proposal which will not have a delay. Note: it will not be possible for delegate addresses to stake (and burn) MKR through the Emergency Shutdown Module. Delegate addresses would however be able to participate in a governance vote that chooses to shutdown the system through normal governance voting that goes through the standard system delay (like any other governance executive).  MIP26c7 System pauses In the existing design, Maker requires delays to protect itself from ecosystem risks and attacks. Currently the Maker protocol relies on a 12hour delay between the time a spell is passed and when it takes effect. Similarly, the new design will rely on an executive (GovExec) with a 12hour delay to pass proposals. However, if proposals are deemed malicious, governance can vote on a zero delay spell to cancel a previously actioned proposal. Likewise, proposals can also be created to protect against malicious variables, auction and oracle attacks with zero delay. This is illustrated below:   MIP26c8 Flashloan Protection The advent of flashloans allows individuals to borrow large sums of cryptocurrency and action multiple transactions within a single block without having to post any collateral. This problem has become more evident as liquidity pools have formed around governance tokens including MKR. Flashloans are prevented by ensuring that a user\u2019s snapshot will always be at least one block older than the proposal\u2019s snapshot. Similarly, proposal creation avoids flashloan risks by requiring the locking of a small amount of MKR as detailed in the following section.  MIP26c9 Decentralizing the submission of proposals To promote decentralization yet protect the system against spam proposals, it is necessary to approve certain known addresses, such as domain teams, governance facilitators and other governance mandated actors, yet still allow all other addresses to submit proposals provided that they hold a defined amount of MKR in their account to prevent spamming. With this feature it will be possible for approved addresses to post proposals as needed. For all other addresses, a Governance defined amount of MKR from the submitting address will be held as a bond to prevent the submission of spam proposals. Once the defined duration has elapsed, the MKR bond shall be returned to the user\u2019s address. Currently, no punishment has been defined for the staked MKR in the event a malicious proposal is posted. The governance community should explore whether an explicit mechanism is deemed necessary. Currently it is only possible to drop (remove) a malicious proposal by voting on a proceeding executive. The locking up of MKR when creating a proposal is however useful as previously mentioned to prevent the use of flashloans and the creation of multiple spam proposals.  MIP26c10 One time defensive quorum to migrate from DSChief to DssGov Transition risk surfaced as a key security motivator in the current design of the DSChief, not only when transitioning to a new proposal but also when transitioning to this new version of the governance contract and the executive proposals that it will generate. Therefore, to ensure a smooth transition from DSChief to the New DssGov a minimum quorum will be used as a one-off defensive mechanism that protects the protocol by only enabling DssGov if the minimum quorum is exceeded. For the transition, Governance will elect a spell in DSChief which will give authority in all core contracts to DssGov and will also remove the DSChief authority from them. It is at that point that the transfer to the new governance contract will be complete, however the new DssGov will not be able to generate proposals until enough MKR has moved to it. This should be set relatively close to the existing Chief\u2019s Hat value in order to confirm that we have buy-in from the Maker Governance community.  MIP26c11 Layer 2 Integration DssGov is being built independently and decoupled from any particular Layer 2 solution. Even though a Layer 2 solution is not part of this MIP, it warrants being mentioned as a capability that will be supported through DssGov and associated features. This will provide an ideal opportunity for governance voters to vote and/or delegate to an off-chain address while reducing their exposure to gas cost fluctuations.  MIP26c12 3rd party audits and formal verification No audit or code review has taken place yet. DssGov will however undergo 3rd party audits and formal verification prior to an executive vote for use by the Maker Protocol.  MIP26c13 Licensing AGPL3+ ",
                    "links": [
                        "https://docs.makerdao.com/smart-contract-modules/governance-module/chief-detailed-documentation",
                        "https://www.gnu.org/licenses/agpl-3.0.en.html",
                        "https://forum.makerdao.com/t/weekly-mips-update-47/9648",
                        "https://forum.makerdao.com/t/weekly-mips-update-46/9532",
                        "https://forum.makerdao.com/t/weekly-mips-update-45/9427",
                        "https://forum.makerdao.com/t/maker-relay-ep-53-en-espanol/9330",
                        "https://forum.makerdao.com/t/maker-relay-ep-53/9305",
                        "https://forum.makerdao.com/t/weekly-mips-update-44/9303",
                        "https://forum.makerdao.com/t/weekly-mips-update-43/9190",
                        "https://forum.makerdao.com/t/weekly-mips-update-42/9010",
                        "https://forum.makerdao.com/t/weekly-mips-update-41/8892",
                        "https://forum.makerdao.com/t/maker-relay-ep-49-en-espanol/8795",
                        "https://forum.makerdao.com/t/maker-relay-ep-49/8763",
                        "https://forum.makerdao.com/t/weekly-mips-update-40/8759",
                        "https://forum.makerdao.com/t/weekly-mips-update-39/8606",
                        "https://forum.makerdao.com/t/weekly-mips-update-38/8486",
                        "https://forum.makerdao.com/t/weekly-mips-update-37/8309",
                        "https://forum.makerdao.com/t/mips-update-36/8125",
                        "https://forum.makerdao.com/t/weekly-mips-update-35/7962",
                        "https://forum.makerdao.com/t/weekly-mips-update-34/7668",
                        "https://forum.makerdao.com/t/weekly-mips-update-33/7573",
                        "https://forum.makerdao.com/t/layer-2-governance-for-maker/7552/2",
                        "https://forum.makerdao.com/t/weekly-mips-update-32/7464",
                        "https://forum.makerdao.com/t/weekly-mips-update-31/7232",
                        "https://forum.makerdao.com/t/weekly-mips-update-30/7083",
                        "https://forum.makerdao.com/t/weekly-mips-update-29/7000",
                        "https://forum.makerdao.com/t/mip26c6-delegation-desperately-seeking-vote-delegation/6880",
                        "https://forum.makerdao.com/t/maker-relay-ep-33-en-espanol/6729",
                        "https://forum.makerdao.com/t/maker-relay-ep-33/6694",
                        "https://forum.makerdao.com/t/weekly-mips-update-27/6649",
                        "https://forum.makerdao.com/t/maker-relay-ep-32-en-espanol/6600",
                        "https://forum.makerdao.com/t/maker-relay-ep-32/6596",
                        "https://forum.makerdao.com/t/maker-relay-ep-31-en-espanol/6455",
                        "https://forum.makerdao.com/t/maker-relay-ep-31/6450",
                        "https://forum.makerdao.com/t/maker-relay-ep-30-en-espanol/6360",
                        "https://forum.makerdao.com/t/maker-relay-ep-30/6303",
                        "https://forum.makerdao.com/t/maker-relay-ep-29-en-espanol/6220",
                        "https://forum.makerdao.com/t/maker-relay-ep-29/6214",
                        "https://forum.makerdao.com/t/maker-relay-ep-28-en-espanol/6124",
                        "https://forum.makerdao.com/t/maker-relay-ep-28/6118",
                        "https://forum.makerdao.com/t/a-maker-community-2020-summary/5848",
                        "https://forum.makerdao.com/t/maker-relay-ep-26/5759",
                        "https://forum.makerdao.com/t/maker-relay-ep-25/5671",
                        "https://forum.makerdao.com/t/maker-relay-ep-24/5534",
                        "https://forum.makerdao.com/t/maker-relay-ep-23/5419",
                        "https://forum.makerdao.com/t/maker-relay-ep-21-en-espanol/5199",
                        "https://forum.makerdao.com/t/maker-relay-ep-21/5181",
                        "https://forum.makerdao.com/t/pre-mip-discussion-incentives-to-align-interests-of-maker-workers-with-mkr-holders-around-burning-mkr/5162/22",
                        "https://forum.makerdao.com/t/maker-relay-ep-20/5078",
                        "https://forum.makerdao.com/t/maker-relay-ep-19-en-espanol/4981",
                        "https://forum.makerdao.com/t/maker-relay-ep-19/4975",
                        "https://forum.makerdao.com/t/reacting-to-the-october-23rd-executive/4961/8",
                        "https://forum.makerdao.com/t/signal-request-should-the-maker-community-burn-attacking-borrowed-mkr-in-the-event-of-a-governance-attack-leading-to-protocol-redeployment/4903/19",
                        "https://forum.makerdao.com/t/agenda-discussion-scientific-governance-and-risk-115-thursday-october-22-16-00-utc/4757/2",
                        "https://forum.makerdao.com/t/urgent-flash-loans-and-securing-the-maker-protocol/4901/20",
                        "https://forum.makerdao.com/t/urgent-flash-loans-and-securing-the-maker-protocol/4901/9",
                        "https://forum.makerdao.com/t/agenda-discussion-scientific-governance-and-risk-114-thursday-october-15-16-00-utc/4657/2",
                        "https://forum.makerdao.com/t/maker-relay-ep-17-pt-br-portugues/4810",
                        "https://forum.makerdao.com/t/maker-relay-ep-17-en-espanol/4804",
                        "https://forum.makerdao.com/t/maker-relay-ep-17/4798",
                        "https://forum.makerdao.com/t/agenda-discussion-scientific-governance-and-risk-113-thursday-october-8-16-00-utc/4505/2",
                        "https://forum.makerdao.com/t/maker-relay-ep-16-pt-br-portugues/4722",
                        "https://forum.makerdao.com/t/maker-relay-ep-16-en-espanol/4719",
                        "https://forum.makerdao.com/t/maker-relay-ep-16/4710",
                        "https://forum.makerdao.com/t/week-19-dai-distributions-sourcecred-trial/4707",
                        "https://forum.makerdao.com/t/weekly-mips-update-49/9890",
                        "https://forum.makerdao.com/t/weekly-mips-update-48/9757"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.392365383154857
                },
                {
                    "author_link": "https://forum.makerdao.com/u/mrabino1",
                    "index": "#2",
                    "likes": "1",
                    "time": "06/10/2020-16:38:36",
                    "content": "Excellent work! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 10.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/psychonaut",
                    "index": "#3",
                    "likes": "1",
                    "time": "06/10/2020-19:15:20",
                    "content": "Can I delegate to more than one address? For example, I might split my voting weight 50/50 between two of my favorite community members? I\u2019m not sure if this would be a feature in demand, but at least the spec should be clarified. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5625
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#4",
                    "likes": "5",
                    "time": "06/10/2020-21:06:31",
                    "content": "Hi Joshua, in this iteration it is not possible to split your voting weight across multiple addresses. This would require some additional complexity in the form of an intermediary contract to handle the internal accounting logic to determine a % split across addresses. It is certainly something that could be added later as a capability in addition to DssGov once it has been deployed. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.214285714285714
                },
                {
                    "author_link": "https://forum.makerdao.com/u/wouter",
                    "index": "#5",
                    "likes": "8",
                    "time": "07/10/2020-09:35:50",
                    "content": "Unless I\u2019m missing something, this can easily be achieved by distributing one\u2019s MKR over 2 separate addresses to begin with? Not sure if the complexity of implementing this as a feature will ever be worth the minor improvement in convenience. And if it were implemented, this may well be how it would happen behind the scenes. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.861111111111111
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#6",
                    "likes": "4",
                    "time": "07/10/2020-10:50:54",
                    "content": "Yes, exactly - the owner could distribute their MKR across two (or more) addresses and then delegate from those addresses as a manual solution to the problem. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.875
                },
                {
                    "author_link": "https://forum.makerdao.com/u/yaronvel",
                    "index": "#7",
                    "likes": "0",
                    "time": "07/10/2020-11:19:55",
                    "content": "I don\u2019t know if it is the right place to raise it. But if a change is done, it is an opportunity to remind the need for a registry to makerdao smart contracts that is controlled by the MakerDAO governance. Currently there is a registry that is controlled by the makerdao deployer (at least the last time I checked), and seems to have very limited update capabilities. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0892857142857135
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#8",
                    "likes": "3",
                    "time": "07/10/2020-12:57:21",
                    "content": "Thank you for this MIP! I\u2019m eager to see a new governance contract in action. Here are some random comments     cmooney:  This new design uses a variable threshold based on the amount of active MKR locked in DssGov.   I\u2019m surprised the solution has to introduce one more parameter for governance to tune (and one that seems a little hard to reason about). What prevents having simultaneous vote on multiple proposals + new proposals point to a \u201clast passed proposal\u201d when they are created, and their threshold is the amount of MKR on that last proposal?     cmooney:  If MKR has remained inactive for a period of time as defined by governance it will be considered stale and will no longer count towards the total active amount of MKR. It is expected that this period of time will be defined as a number of weeks or months pending further analysis.   This is one more parameter to tune, but I guess it\u2019s unavoidable. Even the current contract is vulnerable to an inactivity attack, right?     cmooney:  When an MKR owner locks their MKR in DssGov, they will be minting a gas token. This gas token will allow any bot or altruistic participant to remove that user\u2019s MKR from the total amount of active MKR if it becomes stale.   Not sure I get the mechanics. Will it provide enough gas token to exactly cover the cost over multiple future transactions by the altruistic sender?     cmooney:  Snapshotting is important because it eliminates the gas intensive nature of unvoting MKR from old proposals to vote for new proposals.   Suppose there wasn\u2019t that technical requirement. Would it have been dangerous to have no snapshotting and just let freshly locked MKR vote on an existing proposal?     cmooney:  This solution does not allow delegates to forward delegated votes to other addresses.   That\u2019s too bad but I\u2019m still very much looking forward to delegation (& multiple concurrent proposals!).     cmooney:  However, if proposals are deemed malicious, governance can vote on a zero delay spell to cancel a previously actioned proposal.   I like that a lot. Could this be an instance of a more general class of authorized 0-delay proposals, and new 0-delay proposal types can be voted in/out by governance?     cmooney:  allow all other addresses to submit proposals provided that they hold a defined amount of MKR in their account to prevent spamming.   In the current system, there is no need for spam protection, people just come to a common frontend which does the filtering. Why was spam protection at the contract level needed in the version of the governance contract? I\u2019m very excited about this redesign, great work  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.007061136142768
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#9",
                    "likes": "4",
                    "time": "07/10/2020-19:06:17",
                    "content": "Hi Swayka, thanks for your comments! In response: Re: Introducing one more parameter (variable threshold) for governance to tune The rationale for using a threshold is to prevent low-bid proposals from passing. Your reference to a previous proposal is essentially what we have now, which isn\u2019t flexible enough to support multiple proposals. (we could discuss slates as part of the current design but there is still transition risk when moving votes from one proposal to another). Re: Vulnerability to inactivity attack - current DSChief vs DssGov Contract Correct, the current contract is vulnerable to inactivity which could cause delays if voters are unable to exceed the amount of MKR on the existing hat (usually the most recent winning proposal). This is why the amount of MKR on the hat is very important to secure the current system. The DssGov design makes sure that the threshold is always referencing an active amount of MKR. If we didn\u2019t have this mechanism in place we would run the risk of having such a high threshold that would be difficult to exceed. Re: Gas cost mechanics Once a user locks their MKR in DssGov, a gas token will be created. The gas token will enable an altruistic user to update the owner\u2019s MKR from active to inactive MKR only once if the owner (or delegate) becomes inactive - only one transaction is required to make this change. This will also update the total amount of active MKR in DssGov, and the amount counting towards the threshold. Re: Dangers of allowing fresh MKR to vote without relying on a snapshot If we let all MKR vote and didn\u2019t have snapshotting, the system may be exposed to flashloan risks (without additional controls that snapshotting resolves). Also, the threshold is based off of a snapshot value so that mechanism would have to change too. In this way one can see that snapshotting and thresholds are really closely tied as related functions. Re: Not allowing delegates to forward delegated votes to others This would be an ideal feature however it introduces additional complexity when users add/remove MKR and this accounting needs to travel up the hierarchy of delegated addresses - which makes for a more expensive and difficult to manage delegation system. In this first iteration, it makes sense to see what the demand for delegation is, and then for the community to also explore L2 solutions that may be more scalable in this area. Re: Supporting 0-delay executives 0-delay executives need to be very specific due to the risk of introducing immediate changes. They are therefore restricted to oracle and auction threats as well as dropping previous executives that do have a delay. Re: Why include spam protection Spam protection became a feature because the community requested multiple concurrent executives. In theory, an individual could spam the system with a multitude of executives, which has the potential to be disruptive. It was therefore decided to introduce address whitelisting for domain teams and mandated actors, and to prevent any spamming a simple bond mechanism could be employed. This could be set very low to still allow anyone to vote but unlikely to spam. Feel free to ask any clarifying questions and I\u2019ll sync with the Smart Contracts Team for detail if needed, thanks! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.298595238095238
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#10",
                    "likes": "2",
                    "time": "07/10/2020-19:09:26",
                    "content": "Hi Yaronvel, good point, yes, I am aware that the smart Contracts team is working on an onchain registry for the addition of collateral types (ILKs) as well as improvements to the current contract address changelog. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.455357142857143
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#11",
                    "likes": "1",
                    "time": "07/10/2020-23:00:27",
                    "content": "Thank you very much for the answers . Here are some additional questions and comments! Current state Is the code considered \u2018done\u2019 pending modifications for security reasons? Re: Introducing a variable threshold parameter A combination of 1) a tree of proposals (must have more votes than parent to pass), 2) the ability to vote on any number of current proposals, and 3) sweeping out inactive MKR, that looks like it could work without a threshold. I don\u2019t know if development of the new contract is mostly done or not, so a vague suggestion like this may not be relevant. Anyway since governance should be more nimble in the future, the price of an additional parameter could be much lower than I thought. Re: Vulnerability attack / Gas costs / Danger of not having snapshots / No redelegation / 0-delay executives Thanks, that clarifies things  Re: Spam protection I don\u2019t understand, unless some operations have gas costs that depend on the number of current executives? Is there a difference between the impact executive spam would have on the new contract vs. the current one? If yes, in what way? ",
                    "links": [
                        "https://forum.makerdao.com/t/weekly-mips-update-20/5009",
                        "https://forum.makerdao.com/t/weekly-mips-update-19/4935",
                        "https://forum.makerdao.com/t/maker-relay-ep-18-pt-br-portugues/4891",
                        "https://forum.makerdao.com/t/maker-relay-ep-18-en-espanol/4882",
                        "https://forum.makerdao.com/t/maker-relay-ep-18/4881",
                        "https://forum.makerdao.com/t/weekly-mips-update-18/4847",
                        "https://forum.makerdao.com/t/weekly-mips-update-17/4746"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.799242424242425
                },
                {
                    "author_link": "https://forum.makerdao.com/u/xvwx",
                    "index": "#12",
                    "likes": "0",
                    "time": "08/10/2020-00:34:00",
                    "content": "Is the code available for review somewhere? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#13",
                    "likes": "1",
                    "time": "08/10/2020-08:50:30",
                    "content": "@swakya and @xvwx code for the DssGov contract is written based on the above concepts, however it still requires additional testing and review. I will leave it up to the Smart Contract Team to determine when is the right time to share and if/how the bug bounty will play a role here too. @swakya re: Your idea of having more votes than a parent to pass + support multiple proposals + sweep out inactive MKR. It\u2019s definitely not too late for ideas! Although I think this idea (if I understand it correctly) has some problems because the \u2018parent\u2019 or any other proposal essentially becomes a threshold that must be exceeded but it isn\u2019t particularly manageable because it depends on voter participation which at times could leave the system exposed or unreachably high. If you really don\u2019t like the threshold idea, the alternative as I mentioned above would be to have a timed window of voting, where people can explicitly vote against a proposal over a period of e.g. 3 days. This however doesn\u2019t let us react as quickly to market/ecosystem changes. Re: Spam protection: In today\u2019s world the Governance Portal only displays executives deployed by the Smart Contracts team - they are the only individuals deploying proposals. Now, with an eye on decentralization, with more domain teams and more mandated actors potentially responsible for their own executives, also potentially across multiple sites (collateral/stability fee/DSR etc), this exposes a potentially malicious vector. The domain team wanted to reduce this exposure by whitelisting specific addresses and reducing the ability for other participants to spam the system (even though it is true that we haven\u2019t see such behavior to-date). This isn\u2019t so much a gas cost problem, it\u2019s more about the disruption of having thousands of proposals flood the system. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.71654761904762
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#14",
                    "likes": "0",
                    "time": "08/10/2020-12:03:49",
                    "content": "Thanks again for the extended response! Re: parents/multiproposals/inactive MKR, the idea is that as long as all MKR in the parent are active any child proposal must exceed or equal a high amount, but as time passes and parent MKR becomes inactive, the next proposal becomes easier to pass. The other side of the issue (having the system too exposed) does mean that after a long enough period of complete MKR inactivity, any proposal could pass with a dust amount of MKR voting for it, but that sounds like there would already be a huge governance problem if that were to happen. In the normal course of operations, voters would just copy their vote from the parent to the child (no transition risk), and then either wait for excess MKR in the parent to become inactive or remove their vote from the parent in order to lower the child threshold. I agree that having time windows is not a good idea. Re: spam protection, I\u2019m having trouble understanding whether this spam protection is a hard requirement due to properties of the new contract, or just something you consider \u201cnice to have\u201d. In the current system, having thousands of proposals flood the system is a) 0 cost when it comes onchain interactions, b) just a matter of filtering more events for frontends, but we aren\u2019t talking about high CPU requirements here. So for now I don\u2019t have a clear picture of why it is worth the code complexity & risk cost of adding spam protection by bonds + whitelisting if it is possible to have 0 smart contract code related to that and let frontends do the work. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.265398027898028
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#15",
                    "likes": "3",
                    "time": "08/10/2020-13:07:47",
                    "content": "Hmm I\u2019m still thinking through your parent/multi-proposal idea. Regarding your spam protection point: I would classify the spam protection as nice to have, because the system can certainly function without it, however I think it is important not to be overly reliant on front-ends (scams etc), as well as removing opportunities for potentially malicious activities. In terms of code complexity, it\u2019s not too bad - we are talking about confirming whether the user\u2019s address is a whitelisted address:  IF; yes, and they haven\u2019t exceeded the amount of allowed proposals, they they can submit a proposal. IF; no, and they haven\u2019t made another proposal recently, and they have a minimum amount of MKR for creating a proposal, they can submit a proposal. After which we update the MKR locked time required. (preventing flashloaned proposals/spam etc)  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.428571428571429
                },
                {
                    "author_link": "https://forum.makerdao.com/u/galabasquer",
                    "index": "#16",
                    "likes": "3",
                    "time": "09/10/2020-12:12:51",
                    "content": "Regarding the spamming protection. The main problem has to do with a malicious source getting enough MKR (temporary) to schedule a proposal. In this scenario good governance could recover the power during the 12 hours delay and they could drop this malicious proposal. If there isn\u2019t a spam protection, the malicious source could elect thousands of malicious spells making harder to governance to drop all of them in 12 hours. IMO, this is a security function, more a must have/should have than a nice to have. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.904761904761905
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#17",
                    "likes": "1",
                    "time": "09/10/2020-12:44:21",
                    "content": "Ha I think this answer made me more confused  What do you mean by \u201cdropping\u201d a proposal? My understanding was that spam protection was for introducing new proposals. If a malicious source has eonugh MKR to pass a proposal, they certainly have enough to introduce it in the first place, no? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.2772495361781075
                },
                {
                    "author_link": "https://forum.makerdao.com/u/galabasquer",
                    "index": "#18",
                    "likes": "3",
                    "time": "09/10/2020-13:39:06",
                    "content": "Yes, the spam protection is for creation. So this protection won\u2019t avoid a malicious address creating a proposal, but what this will do is avoiding to create a big amount of them. The main problem is not having them created, but the malicious address also having enough power to make them pass. Then we will have a big amount of proposals to be dropped by good governance (which might be a much more complex task). We haven\u2019t gas profiled exactly yet how many proposals a proposal can drop, but there is a limit. Definition of drop: Get a proposal (that was already scheduled to be executed) cancelled by another proposal. So let\u2019s put an example. Actual MKR locked in DssGov is 70K MKR. Threshold: 50%. Min MKR to make a proposal: 5K MKR. A malicious holder (or a group of them) has 35.1K MKR. So in theory with this spam protection they could only create 7 malicious proposals and make them all pass. When that happens, good MKR holders can react loking their MKR and proposing a new proposal which drops these 7 (they have 12 hours to do so). However if we do not have the spam protection, this group could create let\u2019s say 50K malicious proposals. In order to react to that, governance will need to create several drop proposals (and coordinate to get them all voted) to be able to drop these 50K malicious proposals. All that in 12 hours. So it is certainly much more secure to have a controlled number than unlimited one. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.192067736185383
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#19",
                    "likes": "0",
                    "time": "09/10/2020-16:00:44",
                    "content": "OK that makes sense! But if we consider accepted proposals as still potentially malicious, then the problem is symmetric and another attack is the inverse of what you\u2019re describing: the malicious holder can cancel any regular proposal passed by good MKR holders. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.65625
                },
                {
                    "author_link": "https://forum.makerdao.com/u/galabasquer",
                    "index": "#20",
                    "likes": "1",
                    "time": "09/10/2020-16:21:00",
                    "content": "Well yes, but if an important amount of MKR is malicious then there is probably not other chance than Emergency Shutdown. This case has more to do with moments where the governance module might not have enough MKR deposited and active in the system protecting it. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.829166666666667
                },
                {
                    "author_link": "https://forum.makerdao.com/u/jernejml",
                    "index": "#21",
                    "likes": "1",
                    "time": "10/10/2020-20:22:12",
                    "content": "    cmooney:  When an MKR owner locks their MKR in DssGov, they will be minting a gas token.   What happens if ethereum 1.x upgrade (hardfork) removes refund? Would this break contract or just disable gas token usage -> bots/users would become altruistic. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/latetot",
                    "index": "#22",
                    "likes": "0",
                    "time": "11/10/2020-18:47:28",
                    "content": "Why would an ethereum upgrade remove a gas token from someone\u2019s balance?  That\u2019s like asking what if an ethereum upgrade invalidated all CDPs.  Sure, it would be damaging, but why would anyone ever agree to do this? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://forum.makerdao.com/u/pensivepenguin",
                    "index": "#23",
                    "likes": "1",
                    "time": "12/10/2020-02:11:31",
                    "content": "Will creating the gas token or delegation (or any of the new design) require extra fees that were not present before? That is going to be a drag on people participating in a process that already looks like it could use more participation (not hating on MKR\u2026that seems to be a problem for many governance tokens). That is really clever to borrow a flash loan and use it to purchase a whole bunch of MKR and use that newly purchased MKR to vote - also clever of MKR to use a snapshot from the block before the proposal to avoid this issue. But does that introduce anything else that could be exploited - if the snapshot is always from one block before a user\u2019s vote on a proposal, could you send your MKR to another wallet during the same block in which you vote (since it would be based on the prior block\u2019s snapshot) and then use that MKR to vote again and again and again (kind of like a double spend)? I might be misunderstanding because i am not a dev. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.823593073593074
                },
                {
                    "author_link": "https://forum.makerdao.com/u/jernejml",
                    "index": "#24",
                    "likes": "1",
                    "time": "12/10/2020-03:42:26",
                    "content": "    latetot:  Why would an ethereum upgrade remove a gas token from someone\u2019s balance?   I was not talking about removing someone\u2019s balance, but about breaking/changing mechanism of storage refund -   making gas tokens not/less usable for reducing transaction\u2019s gas costs. Check:    gastoken.io    GasToken.io - Cheaper Ethereum Transactions, Today      ",
                    "links": [
                        "https://gastoken.io/"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/LongForWisdom",
                    "index": "#25",
                    "likes": "3",
                    "time": "12/10/2020-18:06:24",
                    "content": "Just going to go through and leave feedback as usual. Looking forward to this being deployed.     cmooney:  Author(s):  Smart Contracts Domain Team       cmooney:  Replaces: DSChief   I mentioned these in the DC-IAM thread, but will do so again here. \u2018Smart Contracts Domain Team\u2019 might get confusing in the future, names and forum / github users would be preferred. The \u2018Replaces\u2019 field is meant to refer to MIPs that are being replaced, rather than contracts or anything else. It should probably change to N/A.     cmooney:  This design is also considering an upper boundary to the threshold to prevent accidental locking of the system if an unattainable level were to be set. This would be a constant value and if included would be voted on by Governance when accepting the design.   I think this would be bad for regular usage. If there is a maximum threshold then it means that less than the chosen percentage of MKR voting can pass a proposal. Is it possible to set a maximum value that decreases over time and resets with every successfully passed executive? We could set it very high to start, and if we ever accidently locked ourselves out, this mechanism would lower the threshold until access was once again possible. I\u2019m imagining something roughly akin to a dutch auction where the amount decreases over time according to a simple linear curve. A downside to this is that we might be required to pass \u2018heartbeat\u2019 type proposals every month or so to reset the decreasing count and prevent system security from decreasing. With the right settings I don\u2019t think this would be very much of a downside though.     cmooney:  MIP26c2 Using active/inactive MKR to define the threshold   Is it possible to define stale MKR according to a similar linear decrease I\u2019ve described above? Instead of making it a sudden \u2018this is now stale\u2019 (which could risk system security if a large amount of MKR becomes stale at once), you could track the last time the MKR interacted with the contract (which you may already be doing with snapshots?) and calculate the resulting status-quo vote according to a linear decrease since the time that MKR was last active. Bold part above does concern me quite a bit with the current proposed system.     cmooney:  The ability to make a user\u2019s MKR inactive is made possible through the following gas mint/burn mechanism explained in the next section. MIP26c3 Mint/burn function to facilitate accurate counting of MKR balances   Honestly, this system strikes me as overly complicated. There is already an incentive for clearing stale MKR, if too much becomes stale, it\u2019s harder to pass proposals. Anyone who is in favour of any proposal is incentivised to clear any stale MKR blocking it. Yes, you have a diffusion of responsibility issue here, but we have this issue currently with casting spells, calling drip and a host of other smart contract methods. Going forward, by default domain actors should be able to call these and to expense the gas costs to the protocol, failing that, the methods are permissionless anyway. I would like to see some system of executive votes themselves minting a set number of gas tokens into DssGov in order to make voting itself cheaper. Reimbursement for the gas cost for these mints could be sucked to the address that casts the spell.     cmooney:  Snapshotting is the process of calculating MKR account balances locked in DssGov at the point in time that a proposal was created. The system will therefore only allow that maximum amount of MKR recorded at the time of the snapshot to vote on the respective proposals. Proposal Creation Snapshot  - records the total active MKR amount in DssGov at the moment of proposal creation based on the user action snapshots. This value will be used to determine the threshold and quorum values. It is not possible for the proposal creation snapshot to record all user voting rights in one go - as one might do with a traditional database, instead it must reference the user action snapshot to check the user\u2019s corresponding voting rights.   I\u2019m not sure how this is setup, but it might be more gas efficient to do this keyed by timestamp rather than by proposal (if it isn\u2019t setup that way already)? I\u2019m imagining that we\u2019ll be creating multiple proposals at set times (weekly or monthly.) If they can all share snapshots via timestamp that might make things cheaper for deployment?     cmooney:  One can imagine the frontend implementation surfacing multiple proposals, each of which can now pass on their own independent merit. These proposals will continue to function as part of a continuous approval voting process that now references the amount of MKR in a users account at the time of snapshotting.   Yay! I\u2019d also note that the snapshotting system incentivises MKR holders to keep their MKR locked in DssGov because they can\u2019t add more later if they want to vote on a specific proposal. Actually, this might be a downside, there is at least one Whale that keeps the majority of their MKR in Balancer pools, and only votes with a smaller percentage regularly and pulls in more if necessary. I\u2019m not sure that snapshots will change that behaviour positively (will just make it so that whale can\u2019t vote with the external MKR.)     cmooney:  This solution does not allow delegates to forward delegated votes to other addresses. This design decision was made due to the complexities of recording voter balances and changes across a hierarchy of potential delegates.   Sad about this, but I know it\u2019s a non-trivial problem. Thinking about cycles in the delegation graph makes my head hurt.     cmooney:  Although the snapshot capability will not let an MKR owner vote for a proposal if they have delegated their MKR to another address, governance is always able to remove (drop) a prior proposal if it is deemed malicious by creating a new proposal which will not have a delay.   I don\u2019t love this part. I\u2019d much prefer if voters could remove vote-weight from their delegate at any time, preventing a vote from passing. The way I see this playing out in the general case is that the delegate supports something that their voters disagree with, but isn\u2019t actively malicious. In this case I think it\u2019s very unlikely that a drop spell will be organised in sufficient time to prevent the initial proposal from passing given that it\u2019s unwanted but not obviously malicious, especially given the 12 hour GSM delay. Most of the time it\u2019s possible to reverse a proposal after it passes (changing stability fees back, changing debt ceilings back, etc.) However it is not possible to pull DAI back into the protocol if it is sent to a certain address. I can see situations where a delegate could abuse their power to suck DAI to legitimate projects that their voters disagree with in a way which was not easily reversible.     cmooney:  However, if proposals are deemed malicious, governance can vote on a zero delay spell to cancel a previously actioned proposal. Likewise, proposals can also be created to protect against malicious variables, auction and oracle attacks with zero delay. This is illustrated below:   I\u2019m not sure I understand this system, and the diagram doesn\u2019t help me too much.  Can you try to explain it more comprehensively. When can governance use 0-delay spells and what powers do they have? Cancelling a queued spell is fine and makes sense to me, I am much more concerned about the other things mentioned. What do FlipperMom and OSMMom have the power to change in their respective systems? You mention being able to protect against malicious variables, I\u2019m not sure I understand how this isn\u2019t already covered by intercepting a queued proposal.     cmooney:  Flashloans are prevented by ensuring that a user\u2019s snapshot will always be at least one block older than the proposal\u2019s snapshot.   Is there any way this system can be used to enforce a MKR lockup prior to voting in an executive. In my view, this is a key part of the system that is missing right now. The system is based on the idea that MKR Holders are \u2018on the hook\u2019 for their decisions, but this is not currently the case. There is nothing stopping MKR Holders voting for a proposal, then withdrawing their MKR and selling before the full effects are felt on the MKR price. Having a configurable delay to withdrawing MKR after voting would make me very happy. Since we\u2019re already keeping user action snapshots, it feels like this should be within reach for this upgrade.     cmooney:  To promote decentralization yet protect the system against spam proposals, it is necessary to approve certain known addresses, such as domain teams, governance facilitators and other governance mandated actors, yet still allow all other addresses to submit proposals provided that they hold a defined amount of MKR in their account to prevent spamming.   I think this is a reasonable solution to the problem, but I\u2019m worried that setting the right value will be difficult. How much capital will be required to submit a governance proposal outside the regular channels? Would having the bond only released if the proposal is successful allow us to reduce the bond amount to something within reach for smaller holders? You could also make it such that the bond is explicitly releasable by governance in the case of a failing, but ultimately non-malicious proposal. Perhaps another option is to make it such that bonded MKR cannot be used to vote in any proposal. This would mean that in a spam attack, the attacker would have to trade-off voting power against number of spam proposals.     cmooney:  Therefore, to ensure a smooth transition from DSChief to the New DssGov a minimum quorum will be used as a one-off defensive mechanism that protects the protocol by only enabling DssGov if the minimum quorum is exceeded.   Is this mechanism reusable for future transitions?     cmooney:  MIP26c11 Layer 2 Integration   Not sure I fully understand how this would work, but I probably don\u2019t need to know the details at this point.     cmooney:  No audit or code review has taken place yet. DssGov will however undergo 3rd party audits and formal verification prior to an executive vote for use by the Maker Protocol.   Relieved to hear this. Can you provide any further details? Will we be doing 3 audits given what happened with DSChief?  I think that covers everything. Apologies for the brain-dump on the subject. Would just like to say again that despite my criticisms I am so excited for us to get this upgrade. Thanks for all the hard work that has gone into it so far. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.163815116650687
                },
                {
                    "author_link": "https://forum.makerdao.com/u/wouter",
                    "index": "#26",
                    "likes": "3",
                    "time": "12/10/2020-20:36:58",
                    "content": "    LongForWisdom:  Relieved to hear this. Can you provide any further details? Will we be doing 3 audits given what happened with DSChief?   We\u2019re currently targeting 3 audits and a bug bounty very similar to the MCD launch security roadmap. However this is still being worked on, so still subject to change potentially. More definitive announcements should follow soon. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.333333333333333
                },
                {
                    "author_link": "https://forum.makerdao.com/u/aburban90",
                    "index": "#27",
                    "likes": "1",
                    "time": "21/10/2020-19:08:42",
                    "content": "I had a couple of loose thoughts regarding voting delegation. Part of me feels that delegations may introduce undesirable politics into our system. I can see wasted efforts, energy, time, resources, etc. going towards convincing some MKR holders to pass their delegations to a given voter. This may or may not be a real threat, but I think it\u2019s worth considering. In seeing the debauchery of the current US election cycle, I think it would be best to avoid any of that. I think we should disincentivize persuasion. Delegated votes could have some kind of tapering off weight to them, a kind of diminishing returns. 100 MKR delegated may be worth 100, while 1000 MKR could be worth 500, and 10,000 is worth 3,000. There can be some kind of asymptotic function for this. Full weights may misalign incentives. Also, I feel like there should be a cap on how much MKR can be delegated to a given voter. Someone voting with 100 MKR should not be able to have 10,000 MKR delegated to them. They don\u2019t have enough skin in the game. There can be a certain multiple, but there should be a cap. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.321840659340658
                },
                {
                    "author_link": "https://forum.makerdao.com/u/psychonaut",
                    "index": "#28",
                    "likes": "2",
                    "time": "21/10/2020-19:17:48",
                    "content": "    aburban90:  In seeing the debauchery of the current US election cycle, I think it would be best to avoid any of that.   This is really not a good comparison. The democratic system in the US was not well designed from the outset. The senate over-represents small states. There are structural issues that entrench a two-party system. We have single-candidate districts instead of rank-choice voting and proportional representation (multi-person districts). Funding is a mess. The system is suppose to represent voters, not money, but private money (both personal and corporate) is in the driver\u2019s seat. Seattle\u2019s new democracy voucher system looks promising. Also, the internet has crushed independent journalism. We need investigative journalism funded by journalism vouchers, similar to Seattle\u2019s democracy vouchers. Governance of the Maker protocol is not really similar. It\u2019s democracy, but not to represent unique people but MKR tokens (investment). ",
                    "links": [
                        "https://forum.makerdao.com/t/maker-relay-ep-27-en-espanol-feliz-2021/6035",
                        "https://forum.makerdao.com/t/maker-relay-ep-27-happy-2021/6016",
                        "https://forum.makerdao.com/t/weekly-mips-update-23/5914",
                        "https://forum.makerdao.com/t/maker-relay-ep-26-en-espanol/5768",
                        "https://forum.makerdao.com/t/maker-relay-ep-25-en-espanol/5680",
                        "https://forum.makerdao.com/t/maker-relay-ep-24-en-espanol/5574",
                        "https://forum.makerdao.com/t/maker-governance-review-november-2020/5453",
                        "https://forum.makerdao.com/t/maker-relay-ep-23-en-espanol/5442",
                        "https://forum.makerdao.com/t/maker-relay-ep-23/5419",
                        "https://forum.makerdao.com/t/weekly-mips-update-22/5416",
                        "https://forum.makerdao.com/t/maker-relay-ep-22-en-espanol/5290",
                        "https://forum.makerdao.com/t/maker-relay-episode-22/5288",
                        "https://forum.makerdao.com/t/weekly-mips-update-21/5222",
                        "https://forum.makerdao.com/t/weekly-mips-update-26/6291",
                        "https://forum.makerdao.com/t/weekly-mips-update-25/6092"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.278787878787878
                },
                {
                    "author_link": "https://forum.makerdao.com/u/monet-supply",
                    "index": "#29",
                    "likes": "6",
                    "time": "29/11/2020-18:37:59",
                    "content": "    LongForWisdom:  There is nothing stopping MKR Holders voting for a proposal, then withdrawing their MKR and selling before the full effects are felt on the MKR price.   I think this is a key weakness of Maker governance right now. Allowing voters to withdraw their MKR immediately after voting and sell makes fork-based governance infeasible in an emergency shutdown - there would be little benefit to burning attacking MKR if it had already been dumped on unsuspecting MKR LPs. I think it would make sense to require at least ~2 weeks cooldown period before MKR can be withdrawn from governance, or whatever is the minimum amount of time necessary to organize a fork of the protocol. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.123511904761905
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#30",
                    "likes": "3",
                    "time": "13/01/2021-14:10:59",
                    "content": "I\u2019m glad to see much needed changes proposed in this MIP. I\u2019ll try to provide my thoughts in the coming days so please bear with me.  Discussion is more than welcome! There\u2019s two \u201cwants\u201d of our parapolitical system when it comes to voting:   We want as little \u201cbad\u201d MKR on-chain voting as possible   We want as many MKR holders voting and involved with the governance process as possible   What I define as bad voting is uninformed, reward-oriented (e.g., voting to take advantage of a system like DssGovRewards), or exploitative (working against the process of decision-making itself). The rationale for wanting to see as many MKR holders vote (both off- and on-chain) is the \u201csupremacy of an ordinary multitude\u201d as Aristotle put it: \u201cThe principle that the multitude ought to be supreme rather than the few best is one that is maintained, and, though not free from difficulty, yet seems to contain an element of truth. For the many, of whom each individual is but an ordinary person, when they meet together may very likely be better than the few good, if regarded not individually but collectively, just as a feast to which many contribute is better than a dinner provided out of a single purse. For each individual among the many has a share of virtue and prudence, and when they meet together, they become in a manner one man, who has many feet, and hands, and senses; that is a figure of their mind and disposition.\u201d (Politics, book 13, part 11) In terms of practical application within our governance system, the two initial \u201cwants\u201d should ideally be seen in:  off-chain voting, where the greatest number of opinions can be expressed and discussed on an equal footing. The democratic \u201cmarketplace of ideas\u201d then decides which change warrants on-chain voting and a change to the protocol. on-chain voting, where a plutocracy decides on proposals previously passed by off-chain governance.  How does DSSGov encourage/discourage good voting? It encourages good voting by introducing delegation, a much needed feature that allows holders to put their voting powers in hands of trusted actors, saving the holder time and effort, while passively remaining in the governance system. In addition, this tool can serve as an \u201cequalizer\u201d for under-represented (due to low MKR holdings), but active, community members. With the forum serving as a hub for those voters, they\u2019d be able to consolidate their opinions and power via delegates. In the current proposal, the following solution discourages good voting:     cmooney:  Inactivity of an owner means that their delegation will be removed from any delegated address.   The dilemma we have to solve here is this: Do we prefer inactive MKR to be utilized in the system by delegates (who the inactive holders have previously trusted)? OR Do we prefer to require all MKR voters to remain active, regardless of delegation? We know that one of the incentives for people delegating would be to put trust in a delegate and not be required to think about voting anymore. It seems counterintuitive to remove those good votes using the same rules as for the undelegated MKR. Should they be removed at some point? Yes, otherwise we risk leaving delegates unchecked, especially those who were able to amass large numbers of delegated MKR early on. Should they be treated differently than undelegated active MKR? Also yes. (Further thought is warranted here, the process needs to be based on the specifics of how inactivity is measured.) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.913536535303776
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#31",
                    "likes": "1",
                    "time": "13/01/2021-15:28:15",
                    "content": "    cmooney:  Inactivity of an owner means that their delegation will be removed from any delegated address.   I completely missed that, thanks @Elihu. Fixing this seems worth a medium technical complexity cost increase. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#32",
                    "likes": "2",
                    "time": "14/01/2021-11:38:37",
                    "content": "The foremost reason requiring MKR holders to be active, (whether they are delegating or not) is to insure that the threshold at which votes pass is set at an appropriate level. This threshold needs to reflect the amount of MKR that is actively participating in Governance and not include old, forgotten or lost MKR. Without this check of active owners and MKR, the system could become locked. As Elihu states, this problem also extends itself to leaving delegates unchecked in the same way over time. I think this check on \u2018activity\u2019 is needed to accurately reflect the threshold, but you do raise a valid point of needing to define how inactivity is measured and what time periods make sense for the different participants. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.375
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#33",
                    "likes": "0",
                    "time": "14/01/2021-12:24:02",
                    "content": "I\u2019m a little confused, how could the system become locked if the delegate still uses the votes of the inactive delegator? As to \u201cleaving delegates unchecked\u201d I do sense a vague feeling of risk around that but I fail to see a specific scenario where it\u2019s really a problem. And any issue that might arise from that should be weighed again the lost indirect participation from MKR holders who forget to renew their delegation once in a while. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.84375
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#34",
                    "likes": "0",
                    "time": "14/01/2021-16:23:22",
                    "content": "Ahh, yeah, you\u2019re right, I should clarify that. The system wouldn\u2019t necessarily be locked however the problem comes about when we want to implement L2 contracts for delegation that could have voting control of MKR for life if they failed to implement the expiry of their own voting usage. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.482142857142858
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#35",
                    "likes": "2",
                    "time": "14/01/2021-17:25:44",
                    "content": "A large amount of MKR being delegated to a single actor (and becoming inactive afterwards) results in unchecked voting power for that delegate. Best case scenario, the delegate may have deviated from their initial agenda the MKR holders agreed to. Worst case scenario, the delegate has unchecked voting power without financial incentive, as they don\u2019t own the MKR they\u2019re voting with, and are free to make decisions that are potentially detrimental to the network. I hope this clears things up, @swakya. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.796428571428571
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#36",
                    "likes": "2",
                    "time": "14/01/2021-17:37:56",
                    "content": "I agree about the scenario and on net it may be worth having this activity check even on delegated MKR. Still I want to point out that there are then 3 possibility for a delegator :  The delegator refreshes their MKR regularly The delegator disengages because they don\u2019t want to be bothered refreshing their vote The delegator transfers their MKR to an intermediate contract, owned by the delegate, which the delegate can ping at any time to \u2018refresh\u2019 the MKR within it, and with a withdraw function for the delegator. The intermediate contract delegates its votes to the delegate.  This last possibility recreates the scenario of a delegate having unchecked power because they found a way around the activity check of DssGov so their delegator could be lazy. In a nutshell: \u201cit may be easy to fake activity\u201d. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.302083333333334
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#37",
                    "likes": "3",
                    "time": "16/01/2021-17:17:14",
                    "content": "Regarding voting quorums The more grave and important the questions discussed, the nearer should the opinion that is to prevail approach unanimity. Jean-Jacques Rousseau, The Social Contract The main weakness of bundling proposals was putting for vote non-controversial and non-essential changes along with high-impact and sometimes-controversial ones. It\u2019s obvious that some changes to the system are more fundamental than others, e.g., amending MIP0 versus onboarding a domain team member. It\u2019s the task of governance to protect the fundamentals of the protocol from hasteful changes. In constitutional democracies, amendments to the constitution, i.e., the fundamentals of a political system, are governed by special measures for this reason. A supermajority, e.g., \u2154 of all eligible votes, is required for these most impactful changes to take place. Those fundamental-level protocol changes should also be given special consideration in the deliberation process. They should serve as an opportunity for the governance system to assemble in greater numbers for the proposals that can reasonably be expected to have large and long-lasting consequences. Having rid ourselves of the proposal bundling and for the two reasons above, I\u2019d like to put up for discussion the idea of weight-dependent MIP voting thresholds. Governance would need to distinguish between weight categories of different MIPs and their respective voting requirement thresholds. The upside of such a solution would be three-fold:  The cornerstones of the Maker Protocol will be safeguarded by a higher voting threshold, ensuring that a fundamental change to the system can never happen \u201con a whim\u201d. Lighter MIP\u2019s can be passed with relative ease, i.e., an easily-achievable threshold. The differentiation between weight categories of MIP\u2019s enables a clear-cut overview for the governance community. The large number of different MIP\u2019s in the forums (and consequently, to some extent, in on-chain voting), without satisfactory explanations for the occasional voter, means they\u2019re unable to distinguish crucial changes which may have otherwise caught their attention, encouraging them to vote.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.706845238095238
                },
                {
                    "author_link": "https://forum.makerdao.com/u/prose11",
                    "index": "#38",
                    "likes": "1",
                    "time": "18/01/2021-20:46:23",
                    "content": "About to dump some thoughts on this thread but wanted to take a moment to thank you for your contributions @Elihu! Particularly this last point on requiring more agreement for more cruicial decisions     Elihu:  I\u2019d like to put up for discussion the idea of weight-dependent MIP voting thresholds. Governance would need to distinguish between weight categories of different MIPs and their respective voting requirement thresholds.   This is a really neat idea, and while it may be difficult to define exactly which types of proposals should have greater thresholds, I do think we would be able to come to some general consensus. What\u2019s particularly exciting about this in regards to this MIP is that it would be pretty simple to require a certain threshold percentage for general changes and a higher percentage for ones changing critical protocol components. I have been tossing around the idea of what should require more than a simple majority of voters for a little bit now, so it was neat to see that idea showcased while reverencing DssGov ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.805330086580086
                },
                {
                    "author_link": "https://forum.makerdao.com/u/prose11",
                    "index": "#39",
                    "likes": "3",
                    "time": "18/01/2021-21:03:24",
                    "content": "I have some questions regarding potential risks associate with switching over to DssGov and thought I\u2019d post them here for transparency and too see what are legitimate concerns and what is just classic brain worrying about new thing:   Should there be a \u201cfloor\u201d in place (35k MKR as an arbitrary number) to prevent motions from being passed based on a low percentage of locked MKR? My main concern is that a malicious actor could cause their MKR to go stale, or otherwise incentivize MKR holders to lock their tokens elsewhere and then rely on market liquidity of MKR to borrow enough to make a malicious play.   On a similar vain, will the \u201csnapshot\u201d capture inactive MKR as well? The main worry here is that someone could purposefully park a large amount of MKR in governance, have it go stale, and then use it to influence a major decision of malicious proposal.   Would I be correct in stating that DssGov would remove our ability to distinguish between token holders signaling opposition, not paying attention, or being generally ambivalent about a proposal? I think there\u2019s some value in knowing the differences there and if there were a way to easily add that to the contract I would be greatly in favor of doing so.   Should there be restrictions on the amount of MKR that can be delegated to someone? Adding to some of the misalignment concerns above, if we let any one person/entity control a vast amount of voting rights without the economic downside of poor decision making we could find ourselves in a dangerous position   Is a 12 hour delay enough? We are currently set to further delays, and even with making spamming more expensive, I worry that having multiple contracts to monitor may make it so 12 hours is not enough time to discover and take action against a malicious proposal.   How much safer does requiring MKR to be bonded for new proposals make the system? Here I am worried about accessibility (are we trying to say if you don\u2019t have X amount of MKR you shouldn\u2019t be offering on0chain proposals?), but also questioning how much safer this makes us from malicious attacks. If someone has borrowed the MKR they are using for malicious attacks will they care if it is locked up/destroyed if their actions crater the token value anyway?   . ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.145757237554113
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#40",
                    "likes": "5",
                    "time": "19/01/2021-16:13:42",
                    "content": "Hi @prose11 , great questions, thank you! My responses below:  Should there be a floor in place to prevent motions from passing?  A floor, or quorum was considered in the pre-MIP discussion however it was removed due to the risk of freezing the system if it became incorrectly set over time. It was felt that the threshold (determined by the amount of MKR locked in DssGov) should be sufficient in normal operations. A quorum equal to the existing hat should still be used when transferring authority from the current Chief to DssGov.  On a similar vain, will the \u201csnapshot\u201d capture inactive MKR as well?  Snapshots only capture active MKR as counting towards the threshold and any ongoing votes. Yes, someone could place their MKR in DssGov to increase the threshold thereby preventing a proposal from passing - much like what we see today, when someone increases the MKR on the existing hat to prevent a new proposal from passing.  Would\u2026DssGov\u2026 remove our ability to distinguish between token holders signalling opposition, not paying attention, or being generally ambivalent about a proposal?  Today participants signal approval by voting on a proposal, or they show disapproval by adding MKR to the existing hat to make it harder to pass the new proposal. Signalling opposition is essentially asking to have the system enable a \u2018no\u2019 vote. This would imply adding a window of voting (3 days for example) to each vote. This is not a technical challenge but it does make it challenging (without additional changes) to pass proposals where immediate action is required.  Should there be restrictions on the amount of MKR that can be delegated to someone?  Interesting question, I hadn\u2019t considered that\u2026but wouldn\u2019t it be preferable to allow MKR holders to naturally free-market-style determine what is safe/optimal when they delegate?  Is a 12 hour delay enough?  Good point, this is a variable number so we can adjust as needed. When initially proposed the protocol had a 12hr delay that has since seen increases, so yeah it does feel too short. I think a delay matching what we have at the time of transition will be a sensible initial value.  How much safer does requiring MKR to be bonded for new proposals make the system?  Not sure I understand this question. In terms of malicious actions - it is not possible to use flashloans or atomic actions to participate in votes due to the snapshot.  Referencing @Elihu \u2019s idea of weight-dependent MIP voting thresholds\u2026  The existing code has not considered various threshold levels, this would need to be explored further. For anything else other than MIPs like e.g. risk variables I think Instant Access Modules that could require for example 1000 MKR to make a change would be lighter weight and move such logic outside of DssGov.  Referencing @swakya comments\u2026  Delegation is done within the DssGov contract so there is no need for an external contract to manage delegation. This is safer than multiple external contract interactions. Note however that it is not possible for delegates to further delegate to another entity (aka chained delegation). Re: Mitigating against fake activity: Faking voter activity is technically possible by delegating to a smart contract that could automatically call DssGov to show that it is \u2018falsely\u2019 active. This periodic call would however incur gas costs. Also confirming that this would not be the sole reference point for rewards so other data points would be required. (an alternative for example would be to reward on the number of votes participated in - but I leave that to the external rewards MIP that others are working on). In terms of increasing the threshold, indeed this would make it harder to pass votes, however it may be worth thinking of this in reverse, whereby an increase in threshold acts as a protective measure against low-MKR proposals. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.276194893541833
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#41",
                    "likes": "1",
                    "time": "19/01/2021-19:32:55",
                    "content": "Thank for your comments! re:faking activity, I am not concerned about rewards. Fake activity means that it is possible for a big delegate to offer a \u2018delegate-and-forget\u2019 service. Their delegators would have an incentive to use the service, because it would let them be lazy. The delegate would also have an incentive to offer the service, because it would reduce delegator churn, and thus increase the voting power of the delegate. So I expect the value of the whole activity-checking logic to be very low. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.541666666666667
                },
                {
                    "author_link": "https://forum.makerdao.com/u/g_dip",
                    "index": "#42",
                    "likes": "1",
                    "time": "20/01/2021-16:31:19",
                    "content": "Comment/question on MIP26c1: Is anyone concerned about this time threshold being hit automatically and a legitimate MKR holder not noticing? This could open us up to a governance attack if a MKR holder thinks they\u2019re defending the protocol but their MKR actually has no weight. Would it work better to have the MKR become \u201celigible\u201d to be considered stale but require an executive vote to actually trigger that mechanism? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#43",
                    "likes": "0",
                    "time": "20/01/2021-18:13:30",
                    "content": "    Derek:  The existing code has not considered various threshold levels, this would need to be explored further. For anything else other than MIPs like e.g. risk variables I think Instant Access Modules that could require for example 1000 MKR to make a change would be lighter weight and move such logic outside of DssGov.   Thank you, the varying threshold levels being potentially part of a later implementation is what I expected. It\u2019s an interesting point you make with the Instant Access Modules, I\u2019ll have to look more into it. I have also discussed moving this logic to off-chain governance with @LongForWisdom, which would require a certain governance participation level for weighted MIPs, before moving to on-chain voting. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.3804945054945055
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#44",
                    "likes": "0",
                    "time": "20/01/2021-18:31:23",
                    "content": "    swakya:  Fake activity means that it is possible for a big delegate to offer a \u2018delegate-and-forget\u2019 service. Their delegators would have an incentive to use the service, because it would let them be lazy. The delegate would also have an incentive to offer the service, because it would reduce delegator churn, and thus increase the voting power of the delegate. So I expect the value of the whole activity-checking logic to be very low.   The technical possibility for such a service to exist doesn\u2019t discard the need for appropriate measures to be included in DssGov, in my view. Furthermore, the laziness incentive may not be enough: to send your MKR to an external contract, essentially trusting a non-DAO entity with your funds, might serve as a sufficient deterrent for the usage of activity-faking contracts. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.979166666666667
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#45",
                    "likes": "1",
                    "time": "20/01/2021-21:00:26",
                    "content": "I fail to follow. If some measures are easy to circumvent, they are not appropriate. Not sure what you mean with \u201cnon-DAO\u201d but they\u2019d be putting their funds in a contract with constrained behaviour, just like everyone does everywhere in these crazy DeFi times. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.767361111111111
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#46",
                    "likes": "2",
                    "time": "20/01/2021-22:33:28",
                    "content": "I agree with you: if the measure can be made more resilient, then by all means it should be strived for. However, if presented with two scenarios where the only difference is protocol-enabled activity check on delegated votes (with the potential of being circumvented), I see no reason why we wouldn\u2019t include it. Remember that the alternative is unchecked voting power by default. What I mean with \u201cnon-DAO\u201d are contracts external to the Maker protocol. While the behavior of those may be constrained, I suspect a lot of people would prefer to check in from time to time, rather than put their trust in unaudited code (or audited by the delegate involved). Actively discouraging people from doing so would be another light-handed approach the governance may take. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.045138888888889
                },
                {
                    "author_link": "https://forum.makerdao.com/u/swakya",
                    "index": "#47",
                    "likes": "2",
                    "time": "20/01/2021-23:37:39",
                    "content": "To be honest it think this is a symbolic measure that only gestures at being serious while offering no actual protection. And we pay a price for it in the form of additional contract complexity, risk, and development delay. Since I assume the code won\u2019t be deployed until it is formally verified, it is true that the risk will end up being minimal. But I would like us to judge features less by what feels good and more by what feels game-theoretically sound. I hope I\u2019m wrong here, and that there is never any real appetite for circumventing activity checks. But this, the discussion about governance rewards, and the discussion about raising the dust limit have me worried that we are not thinking about good design and incentives deeply enough. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.839285714285714
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Elihu",
                    "index": "#48",
                    "likes": "0",
                    "time": "21/01/2021-11:26:55",
                    "content": "On the maximum threshold parameter     cmooney:  This design is also considering an upper boundary to the threshold to prevent accidental locking of the system if an unattainable level were to be set. This would be a constant value and if included would be voted on by Governance when accepting the design.   It\u2019s my understanding that all of plausible risk scenarios for governance to lock itself out are covered by the combination of:  Percentage-based voting thresholds Timely removal of inactive MKR  Unless a plausible scenario comes up, I\u2019d be hesitant to add a potential bottleneck to the system. Imagine a situation where the fixed voting threshold was initially set at 100k, but regular voter participation gradually rises to 250k. This would mean that a proposal effectively needs 40% of total votes to pass. To @swakya\u2019s comment The subject of incentives is never a purely technical one, and the possibility of a technical loophole may not be enough to make it a credible threat: the built-in activity check mechanism, along with trust-related disincentives of sending your funds to a delegate-controlled smart contract to save some time, makes it more than a gesture at seriousness. Not all safeguards can be implemented on-chain, but a smart combination of off- and on-chain security and incentivization is what\u2019s needed. Please note that I\u2019m not referring to the activity check/governance rewards problem as a whole here, only to the vote-accumulating, agenda-changing/malicious delegate slice of it. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.654620181405896
                }
            ]
        }
    ]
}