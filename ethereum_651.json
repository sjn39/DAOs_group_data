{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/registry-for-accepted-payments/2464",
            "title": "Registry for accepted payments ",
            "index": 2464,
            "category": [
                "Wallets"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "1",
                    "likes": "1",
                    "time": "17/01/2019-15:04:53",
                    "content": "I was running this idea with some of you already - but always offline - so moving this online to refine a bit further in direction of an potential EIP What do you think of a registry where wallets can register which payment forms they accept? I think user experience could really improve here.  As e.g. in a payment situation where the user is presented with a ERC-681 QR code we could signal to the user e.g. that a raiden payment would be accepted. I imagine these functions, registerPaymentType(id,string)  setSupportedPaymentType(id) removeSupportedPaymentType(id)  getPaymentTypesForAddress(address)  still a bit unsure about the string in the register. Would be neat to be able to list services. But not sure if it belongs there and sure it will get into a localisation mess later on. Perhaps just register and do the metadata for id\u2019s off chain. They could be signed with the key that was used for registering the type. ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.430555555555555
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "2",
                    "likes": "0",
                    "time": "09/02/2019-13:10:17",
                    "content": "One thing that could also be interesting - some vendors might want to accept e.g. DAI and xDAI. Here it gets a bit more complicated as it is not only the transport - but also the token. I think for this use-case we need to modify the interface. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "3",
                    "likes": "0",
                    "time": "10/02/2019-19:29:32",
                    "content": "Just to visualize it a bit:  device-2019-02-10-201943.png1622\u00d71050 227 KB  offering more payment options we would need more checkboxes - the UX would be horrible. Perhaps instead of a registry - the QR code shows an IPFS or swarm hash and the content contains an json with the invoice. Then we would also get the message field that the burner wallet has. In this json there would then also be the accepted payment methods. DAI/xDAI/DAI over raiden/PlasmaSystemXY/\u2026 symbolic image ",
                    "links": [
                        "https://twitter.com/__BrettWilson__/status/1094412708374433793"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Alexintosh",
                    "index": "4",
                    "likes": "2",
                    "time": "11/02/2019-09:35:52",
                    "content": "I totally agree with this proposal. I also feel we need to have a standard way to present which payments method are accepted for a specific request. Inside Dexpay (dai/xdai pos) we are currently listening both the xDAI network and mainnet when we are waiting for a payment in DAI to allow more flexibility from the user side, this should be formalized somehow to avoid confusion. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.416666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/skywinder",
                    "index": "5",
                    "likes": "0",
                    "time": "11/02/2019-23:48:07",
                    "content": "Hey, ligi! That\u2019s a great idea! Looks Inspiring! In continue of our talk: I\u2019ll back to you with Ignis API implementation as soon as we will bake it for beta testing! fyi: demo is here: https://ignis.thematter.io And we start to do an alpha test our Ignis Plasma protocol: for now iOS only. Our app here:    testflight.apple.com    Join the Franklin Pay beta Available on iOS       GitHub:    GitHub    matterinc/FranklinPay-iOS Secure Dollar Wallet. Contribute to matterinc/FranklinPay-iOS development by creating an account on GitHub.       We are going to implement DAI support in the next versions. ",
                    "links": [
                        "https://testflight.apple.com/join/FVWgauFQ",
                        "https://testflight.apple.com/join/FVWgauFQ",
                        "https://github.com/matterinc/FranklinPay-iOS",
                        "https://github.com/matterinc/FranklinPay-iOS"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.732142857142858
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pedrouid",
                    "index": "6",
                    "likes": "1",
                    "time": "20/02/2019-17:29:40",
                    "content": "Agreed, we tried to hack on a PoS system at ETH Denver and this was by far our biggest challenge. The lack of adoption of standards from Wallets right now is really bad. Another thing to note is how most wallets don\u2019t emphasize QR Code scanning, this feature is usually hidden under a single asset or send transaction screen. At the end of the hackathon we solved it by using WalletConnect which reduce the number of compatible wallets but still better adoption than ERC-681. Using Metamask or WalletConnect provides a good solution for registering accept payments but it looses the provability of these payments as the merchant is in control of this payment confirmation. Ideally users are able to verify this on-chain and by matching their payments with the an on-chain invoice. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.273809523809524
                }
            ]
        }
    ],
    "group_index": "651"
}