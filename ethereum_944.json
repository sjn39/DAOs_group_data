{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/skinny-eip-1559/3738",
            "title": "Skinny EIP 1559 ",
            "index": 3738,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/vbuterin",
                    "index": "1",
                    "likes": "8",
                    "time": "31/10/2019-21:52:36",
                    "content": "This is a proposal to implement a greatly simplified transaction fee reform mechanic that is intended to have similar (though slightly less optimal) effects to EIP 1559 but at ~1/5 the implementation complexity. Parameters   ADJUSTMENT_COEFFICIENT: 8  Protocol changes  We interpret a particular storage slot in the state (eg. as storage key 0 of address 0x0100) as the BASEFEE. \"Set BASEFEE\" means to SSTORE to that storage slot, and when using BASEFEE in equations we mean to SLOAD from that storage slot to read the value. At the start of processing block FORK_BLKNUM, set BASEFEE to 1 Let diff = block.gas_used - block.gas_limit // 2. At the end of processing a block:  After applying block rewards and fees, reduce the miner\u2019s balance by BASEFEE * block.gas_used. If the resulting balance would be below zero, the block is invalid. If diff > 0, set BASEFEE += max(1, BASEFEE * diff // block.gas_limit // ADJUSTMENT_COEFFICIENT)  If diff < 0 and BASEFEE > 1, set BASEFEE -= max(1, BASEFEE * abs(diff) // block.gas_limit // ADJUSTMENT_COEFFICIENT)     Rationale Currently, miners generally have some internal mingasprice, and accept any transactions with tx.gasprice >= mingasprice, accepting the highest-fee transactions if there are more than enough transactions available to fill the block. The mingasprice reflects the miner\u2019s cost in processing the transaction and the marginal increment that the transaction adds to the risk that the block will not propagate quickly enough to join the main chain. The \u201crational\u201d mingasprice has been calculated to be about 0.8 gwei (uncle blocks lose ~0.33 ETH = 330m gwei, 10 million gas blocks add ~0.025 to the uncle rate over empty blocks, so expected cost of 1 gas = 330m / 10m * 0.025 = 0.825 gwei)  and miners do actually set about this value (see table at the bottom of the ethgasstation page). This mechanism adds a fee that miners are required to pay (that gets burned), which adjusts their interests so that they will want to set their mingasprice dynamically, to equal the BASEFEE plus 1 gwei (client devs can just set miner settings so they do this automatically without needing to change anything). Users can now send transactions setting a gasprice of the current head\u2019s BASEFEE (which will be correct for the next block) + 1-2 gwei, and get a high likelihood that their transactions will be included in the next block, without needing to do complex calculations based on recent fees and mempool stats to compute fees and even then only getting included a few blocks later. Hence, most of the simplicity gains of full-on EIP 1559 carry over, though during spikes users may need to set higher fees as they do now to ensure their transactions get included quickly. ",
                    "links": [
                        "https://ethereum-magicians.org/t/eip-1559-go-etheruem-implementation/3918"
                    ],
                    "GPT-summary": "The post explains a proposal for a simplified transaction fee reform mechanic that aims to have similar effects to EIP 1559 but with less complexity. The proposal suggests adding a fee that miners are required to pay, which gets burned, and adjusts their interests so that they will want to set their mingasprice dynamically. The post also provides rationale for the proposal. A 3rd party gives constructive criticism of the proposal and asks questions about it.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Change to proposal pipeline",
                        "Privacy, Security and risk management",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.357916666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/kaiynne",
                    "index": "2",
                    "likes": "2",
                    "time": "31/10/2019-22:46:58",
                    "content": "One of the main challenges as I understand it, and costs, with 1559 (I guess we now call it the fat version?) is the effort to model the change, particularly with two fee markets operating simultaneously. How much do you think this will lower the need for modelling to be performed before this can be implemented? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.888888888888889
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/stobiewan",
                    "index": "3",
                    "likes": "1",
                    "time": "01/11/2019-04:09:47",
                    "content": "The last point under protocol changes, I think you meant \u2018if diff < 0\u2019 rather than \u2018if diff > 0\u2019. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/basco",
                    "index": "4",
                    "likes": "0",
                    "time": "01/11/2019-06:21:55",
                    "content": "Is that if diff > 0     set BASEFEE += max(1, BASEFEE * diff // block.gas_limit // ADJUSTMENT_COEFFICIENT) else if diff > 0 and BASEFEE > 1     set BASEFEE -= max(1, BASEFEE * abs(diff) // block.gas_limit // ADJUSTMENT_COEFFICIENT)  Or if diff > 0     BASEFEE += max(1, BASEFEE * diff // block.gas_limit // ADJUSTMENT_COEFFICIENT)     if BASEFEE > 1         BASEFEE -= max(1, BASEFEE * abs(diff) // block.gas_limit // ADJUSTMENT_COEFFICIENT)  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AFDudley",
                    "index": "5",
                    "likes": "1",
                    "time": "01/11/2019-10:55:22",
                    "content": "We are already implementing what Slipper and I designed. The issue has never been implementation complexity, the issue has always been the cost of everything else. Lowering the implementation complexity doesn\u2019t lower the simulation costs, it doesn\u2019t lower the cost of economic analysis. It may lower the cost of testing. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vbuterin",
                    "index": "6",
                    "likes": "2",
                    "time": "01/11/2019-14:21:04",
                    "content": "Thanks @stobiewan @basco for the fix. Added. So this approach does NOT do the \u201ctwo fee markets operating simultaneously\u201d approach; it directly changes how existing transactions work, in a completely backwards-compatible way that doesn\u2019t require eg. hardware wallets or the p2p layer to change any code. If implementation complexity is not the bottleneck and simulation and analysis costs are the big issue then that\u2019s fine, and maybe the simplification is not necessary. I\u2019d also be curious to see what kinds of simulations/analysis you have in mind that needs to be done that has these high costs. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.547916666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/edmundedgar",
                    "index": "7",
                    "likes": "0",
                    "time": "02/11/2019-23:20:27",
                    "content": "Do you have a simple write-up of what you\u2019re implementing? (Or a link to the code you\u2019re working on that implements it.) It\u2019s currently hard for anybody except yourself to compare the \u201cfull\u201d version and this \u201cskinny\u201d version because the original \u201cfull\u201d EIP as currently written leaves out important details like how the target gas usage is decided. It sounds like you actually have a complete specification, at least in your head - it doesn\u2019t matter if you make some mistakes when posting it, @stobiewan and @basco will spot them\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.177083333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AFDudley",
                    "index": "8",
                    "likes": "0",
                    "time": "03/11/2019-01:26:33",
                    "content": "I\u2019m not entirely sure how to respond to this given that most of the cost in simulation is in the fixed costs of doing the tooling required to do the analysis. I\u2019m sure the Gauntlet team would be happy to speak with you directly about what they were offering to do and where costs could be reduced. If both transaction types are equally available, what prompts users to switch? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.535714285714286
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AFDudley",
                    "index": "9",
                    "likes": "0",
                    "time": "03/11/2019-01:29:23",
                    "content": "I\u2019ll post the link to the repo here when it\u2019s \u201cready\u201d. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Agusx1211",
                    "index": "10",
                    "likes": "1",
                    "time": "04/11/2019-10:49:32",
                    "content": "This \u201cskinny\u201d version of EIP 1559 is 100% compatible with the way that existing clients build and sign transactions, that\u2019s awesome.  Let  diff = block.gas_used - block.gas_limit // 2  This mechanism changes the real gas limit of the network to be block.gasLimit / 2, because in the long run, the rules will be optimizing BASEFEE until blocks are always half full. Maybe it should be included with this change, a doubling of the current default target gas limit set by the miners, currently would be from 10000000 to 20000000. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.9523809523809526
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Agusx1211",
                    "index": "11",
                    "likes": "0",
                    "time": "22/11/2019-10:22:25",
                    "content": "If we move forward with this EIP, we should consider providing a way to read BASEFEE from the EVM context, maybe 'EXTSLOAD' opcode proposal could be passed alongside this EIP ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "944"
}