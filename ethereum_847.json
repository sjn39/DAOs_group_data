{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-2014-extended-state-oracle/3301",
            "title": "EIP-2014: Extended State Oracle ",
            "index": 3301,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "1",
                    "likes": "0",
                    "time": "20/05/2019-11:47:20",
                    "content": "Discussion board for   Ethereum Improvement Proposals   Extended State Oracle Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.      ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-2014"
                    ],
                    "GPT-summary": "The post is an explanation of the Extended State Oracle Ethereum Improvement Proposal (EIP-2014) and provides a discussion board for it. The post may attract questions about the proposal, and third parties may review and audit it. It is not an advertisement, and there is no indication of collaboration or feedback being sought.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Board composition",
                        "Law and regulations",
                        "Community and engagement"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "This is not a discussion, but the proposal itself",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "2",
                    "likes": "0",
                    "time": "23/05/2019-21:16:56",
                    "content": "Some interesting comments from @fubuloubu were made on the PR ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "3",
                    "likes": "0",
                    "time": "23/05/2019-21:20:41",
                    "content": "I wanted to explain this a bit more. Initially this started out as defining a standard extensible API for data, such as chain id. Then I also wrote up a draft, which includes EIP-210 (blockhash) support in it, but never pushed that change. Currently I am considering changing it into a meta EIP describing the guidelines how data contracts (such as chainid history \u2013 however @fubuloubu has a nice proposal for that, blockhash, logs, etc.) could work. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.7857142857142865
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "4",
                    "likes": "2",
                    "time": "23/05/2019-21:20:47",
                    "content": "I do think you should leave the chain ID example out of this. As has been pointed out in one of the chain ID EIPs, returning a simple chain ID isn\u2019t enough, since for mainnet-derived chains, multiple chain IDs have been valid at different points in the past. To avoid this EIP getting bogged down in discussions about the correct interface for checking chain ID, it probably makes more sense to leave this to other EIPs. A few other thoughts:  \u201cNon payable\u201d is a Solidity level concept. Instead, you should spell out the consequences, such as that it should revert if value is sent with the call. All existing precompiles can have value sent to them. Requiring that this one can\u2019t may impose implementation complexities for clients. You need to say something about gas costs for the precompile (even if it\u2019s just that each extension sets its own gas costs). You need to specify what happens if it\u2019s called with a nonexistent function ID, or with too little data. Unused sections should be marked with a todo or deleted, probably.  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.985648148148148
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "5",
                    "likes": "0",
                    "time": "05/06/2019-07:25:18",
                    "content": "Good points @Arachnid. To add to that :  If a user sends 4byte 5cf0e8a4 and also data, should it fail or ignore?  Also, the points listed could be moved into the tests-section as suggested tests. I do, however, think it\u2019s good to include chainid into this EIP, instead of splitting it out into separate EIPs. It helps to keep things simple. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party auditing and reviewing proposal"
                    ],
                    "Sentiment": 6.125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "6",
                    "likes": "0",
                    "time": "06/06/2019-23:44:57",
                    "content": "Chain ID has proven far from being simple. There\u2019s a lot of complexity tied up in how this little uint256 number is used and what it means, as well as under what conditions it is modified. I\u2019m comfortable if it just returns the current value, as that\u2019s basically just EIP-1344, but if it has to account for all the complex behavior that can arise from accounting for when the number changes in other calls (such as EIP-1959 and EIP-1965 try and account for), I would not include it into this proposal. But if nothing else related is included, then this proposal is essentially just EIP-1344 with stubs for \u201cother\u201d stuff, which has not been defined yet. That alongside the fact that calls cost extra gas and chainId isn\u2019t really a part of the \u201cextended state\u201d (EIP-1344 lifts it from the transaction context) makes me want to recommend differing on this EIP. It\u2019s complicated enough by itself, all these more complicated proposals for behavior we largely have no historical record for makes me nervous. On top of that, this is going to be a widely-used feature (alongside EIP-712), I want getting chainId to be as simple and flexible as possible. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.071853741496599
                }
            ]
        }
    ],
    "group_index": "847"
}