{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-4573-procedures-for-evm-code-sections/7776",
            "title": "EIP-4573: Procedures for EVM Code Sections ",
            "index": 7776,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "evm",
                "opcodes",
                "core-eips"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "1",
                    "likes": "1",
                    "time": "16/12/2021-22:03:54",
                    "content": "Currently, Ethereum bytecode has no syntactic structure, and subroutines have no defined interfaces. We propose to add procedures \u2013 delimited blocks of code that can be entered only by calling into them via defined interfaces. Also, the EVM currently has no automatic management of memory for procedures.  So we also propose to automatically reserve call frames on an in-memory stack. Constraints on the use of procedures must be validated at contract initialization time to maintain the safety properties of EIP-3779: Valid programs will not halt with an exception unless they run out of gas or recursively overflow stack. ",
                    "links": [],
                    "GPT-summary": "The post proposes the addition of procedures to Ethereum bytecode to add structure and defined interfaces to subroutines. It also proposes automatic management of memory for procedures. The constraints on the use of procedures must be validated at contract initialization time to maintain the safety properties of EIP-3779. The post explains the proposal and invites feedback and questions. A 3rd party could give constructive criticism of the proposal or ask questions about it.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Token economics",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gumb0",
                    "index": "2",
                    "likes": "0",
                    "time": "25/01/2022-13:17:26",
                    "content": "What is the motivation to have multiple sections with multiple entry points in each one as opposed to  multiple sections each one with a single entry point or a single code section with multiple entry points?  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 4.8809523809523805
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "3",
                    "likes": "0",
                    "time": "26/01/2022-00:03:38",
                    "content": "The motivation is just to allow for the encapsulation of related sets of procedures into independent code sections.  External tools could then combine these sections like libraries for different contracts. The encapsulation allows for all of the procedures in a section to share optimized subroutines that will not be accessible to other code sections.  (And if we don\u2019t allow for multiple entry points we can wind up with people using flags to do the job with a single one anyway.) ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.111607142857143
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gumb0",
                    "index": "4",
                    "likes": "0",
                    "time": "26/01/2022-10:17:22",
                    "content": "    gcolvin:  The encapsulation allows for all of the procedures in a section to share optimized subroutines that will not be accessible to other code sections.   How will they be not accessible? Isn\u2019t CALLPROC allowing to call any entry point of any section? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.104166666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "5",
                    "likes": "0",
                    "time": "26/01/2022-16:36:33",
                    "content": "Subroutines are accessed via RJUMPSUB, which is always limited to the current code section.  And only those procedures called out in an Entry Point section can be called from a different code section. I\u2019ll note that the procedure concept stands on its own, and I could propose these opcodes independently if we don\u2019t find them useful as entry points. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 5.591836734693878
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "6",
                    "likes": "0",
                    "time": "30/01/2022-02:27:40",
                    "content": "I\u2019ve taken my own suggestion, @gumb0  and narrowed this EIP down to just specifying procedures. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.111111111111112
                }
            ]
        }
    ],
    "group_index": "1545"
}