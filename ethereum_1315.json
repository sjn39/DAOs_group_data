{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-3340-nft-editions-standard-extension/6044",
            "title": "EIP-3340: NFT Editions Standard Extension ",
            "index": 6044,
            "category": [
                "EIPs"
            ],
            "tags": [
                "feedback-wanted",
                "nft"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/nginnever",
                    "index": "1",
                    "likes": "3",
                    "time": "20/04/2021-05:16:28",
                    "content": "This is a simple extension with the intent of improving provenance in ERC-721 tokens representing works of digital art. As NFTs evolve further into representing digital art, there is a need to strengthen the link between a token and the digital work itself. With the current standard, a symbolic URI is the only information present linking the art to the blockchain. The URIs may become lost over time and the link may be lost. Hashing the digital art is a good link but pre-images may be lost. This standard focuses on allowing the artist to store a signature for each NFT, and allows the artist to designate an original and limited printed editions in a trustless way that does not rely entirely on the metadata. Links: Issue: Discussion for EIP-3440 \u00b7 Issue #3519 \u00b7 ethereum/EIPs \u00b7 GitHub PR: EIP-3440: NFT Editions Standard by nginnever \u00b7 Pull Request #3518 \u00b7 ethereum/EIPs \u00b7 GitHub Cheers ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/3518",
                        "https://ethereum-magicians.org/t/improving-nft-standard/6012/7"
                    ],
                    "GPT-summary": "The post introduces a new standard extension, EIP-3340, for ERC-721 tokens representing digital art. The extension aims to improve the provenance of the tokens by allowing the artist to store a signature for each NFT and designate original and limited printed editions in a trustless way. The post provides links to the discussion and pull request for the EIP. The post does not advertise the proposal, ask for collaboration, or provide any feedback on the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Privacy, Security and risk management",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.295168067226891
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Shymaa-Arafat",
                    "index": "2",
                    "likes": "0",
                    "time": "27/05/2021-07:46:03",
                    "content": "    nginnever:  With the current standard, a symbolic URI is the only information present linking the art to the blockchain. The URIs may become lost over time and the link may be lost. Hashing the digital art is a good link but pre-images may be lost.   What do u mean?I haven\u2019t read much about NFT in Ethereum, but the whole point was the unique ID and talks all over the net about using it for 3D objects specially in ancient pieces ( whether art or monuments) the point it can, MUST, distinguish original from copy otherwise it\u2019s useless!!! . I noticed one thing from the Daily Show https://t.co/Vfh9E108SG?amp=1 and started to ask people since I\u2019m no expert in NFT is he joking or if this is true there is a major danger  mobile.twitter.com    Sasa Milic (sasamilic33)  @ArafatShymaa i'm not sure of the exact implementation you mention, but wouldn't the \"consolidated\" artwork map to a set of hashes (representing the individual art pieces) rather than map to a single hash?  6:24 AM - 21 May 2021        . I expected they\u2019re using an accumulated hash of all the small pics in something similar to a Merkle Tree/Trie/\u2026 whatever (since this is probably fixed) and they just missed ( have a little bug u may say) of not checking the hash of every small piece before issuing a new NFT. I emphasized on the danger of this happening to a museum pieces ( while the one paid for Beeple may joke about it or consider it a gift to the Daily Show, a country paid a fortune for NFTing it\u2019s museums will go to Court for this. . Now u r saying the situation is even much worse than I expected??? ",
                    "links": [
                        "https://mobile.twitter.com/sasamilic33/status/1396684410850738181",
                        "https://mobile.twitter.com/sasamilic33/status/1396684410850738181",
                        "https://mobile.twitter.com/sasamilic33/status/1396684410850738181"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.08675257034632
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/nginnever",
                    "index": "3",
                    "likes": "0",
                    "time": "29/05/2021-22:36:51",
                    "content": "    Shymaa-Arafat:  Now u r saying the situation is even much worse than I expected???   To clarify this extension does not claim that NFTs are currently cryptographically less verifiable than any media coverage may portray them as, or that there is not a strong crypto graphic link in the protocol. This comments on the implementation details and only offers a minimally extended option to continue the provenance story over time, perhaps slightly improving the link between artist and digital work. The current links between artist and digital work are\u2026  The original ECDSA signature on the initial transaction that \u201ccreated the NFT\u201d. A contract may be deployed from an artist\u2019s EOA or a minting transaction may be executed to an already deployed NFT from the artist\u2019s EOA (Opensea,rarible,foundation,superrare etc\u2026) The metadata is stored with the NFT ID mapping space with an additional URI extension. This metadata is usually an IPFS content hash containing a nested link (IPLD) to the media. This content addressing ensure that the blockchain immutably stores sha256 image of the media.  You will notice that as long as an artist retains and deploys the nft themselves there is a pretty easy link to verify. However there aren\u2019t any easy ways for the artist to show they still have that key or that they value it (to my knowledge). This extension simply lets them sign the NFTs and then sign messages over time, post those messages on out of band networks like twitter, and let NFT owners verifiably show that the artists signatures match the ones on their NFT. This is more for an over time improvement to provenance, if however minimal. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.112847222222222
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Shymaa-Arafat",
                    "index": "4",
                    "likes": "1",
                    "time": "30/05/2021-03:46:37",
                    "content": "Oh yes, I\u2019ve done some reading in the 3 days before u replied; however my Motivating Q is still the same. I know there\u2019s a Cryptographic hash (u just added it\u2019s SHA256), the points r: 1-The degree of security depends on the object kind and to what limit it could be uniquely identified, ie I still see u can\u2019t just sell they\u2019re all the same level of security. Ex. -if u sign a real estate contract with say SHA256, then ur ownership is as secure as SHA256 -but if u used it to sign a photo or even a DNA, u should add to ur calculations the accuracy of ur presentation of the image(the way u uniquely identity it), or the accuracy of DNA (I know DNA is like 0.9999\u20269 accurate) . 2- For this specific case of the Beeple pic, as it includes smaller images inside it, I\u2019m asking what exactly did they hash? *If they hashed every small image, howcome one of the smaller ones got a new NFT? *If they did not, do u think the owner who paid 69m$ is aware of that?or thinks he bought them all? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.912121212121212
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MaxFlowO2",
                    "index": "5",
                    "likes": "0",
                    "time": "04/01/2022-06:47:05",
                    "content": "Still game to have this in full production on NFT contracts? Was diving through the EIPs and came across this, and was wondering if you have used this before or not? I believe you can tweak this a bit between the different styles of NFT minting contracts as well\u2026 say a public minter like OpenSea, PFP\u2019s, and game \u201ccharacters\u201d would all be different implementations of this. Give me a week and I\u2019ll fire up my repo of what I think and would like to add to the EIP. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/nginnever",
                    "index": "6",
                    "likes": "0",
                    "time": "04/01/2022-15:05:21",
                    "content": "    MaxFlowO2:  was wondering if you have used this before or not?   Thanks for taking a look. I have implemented this and used it in tests but I haven\u2019t worked it into anything production. I do still think it\u2019s a cool idea to extend signing meaningfully.     MaxFlowO2:  I believe you can tweak this a bit between the different styles of NFT minting contracts as well   Yeah, I think if done cleverly this could be used for something like opensea. In general I think it would be nice to see creators given more power to mark their works when their NFTs are bundled in with many other creators NFTs like opensea type minting. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 6.220833333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MaxFlowO2",
                    "index": "7",
                    "likes": "0",
                    "time": "04/01/2022-18:18:45",
                    "content": "Yeah, let\u2019s link up and make this happen outside of testnets\u2026 At a minimum, heard nothing but people saying this is a good idea, may want to change some of the parameters (like _setTokenURI()) but i bet you within the week we can have this is production of a few of my contracts\u2026 I happen to launch these PFP\u2019s on chain id 250 all the time, and wanted a new way to \u201cdigitally sign\u201d this. even if the signature is an ipfs link and that being signed with abi.encodepacked(). One thing I ask, can I be added to this as an author as well if we happen to get this working? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "3rd party giving constructive criticism of proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.795454545454546
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MaxFlowO2",
                    "index": "8",
                    "likes": "0",
                    "time": "04/01/2022-18:20:41",
                    "content": "Don\u2019t mind me, making the bots that call this inactive, active so watch me comment on all the threads. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.333333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MaxFlowO2",
                    "index": "9",
                    "likes": "0",
                    "time": "05/01/2022-07:13:40",
                    "content": "Might have a decent re-write, plugging EIP 1271\u2019s isValidSignature() into this just to set this into more adoption of this standard\u2026 This would rewrite isSigned() a bit to isValidSignature() but adding the parameter of tokenID to the mix, making the new \u201cMagic Number\u201d other than 0x1626ba7e\u2026 but think this could be the ticket. Also dropping an interface on this to make all variables private with custom getters (more gas effective). First Edition will be like how I did ERC2981\u2019s: Collection (think PFP\u2019s via hashlips or whatever) - One signature to prove them all Mass Minter (think one OpenSea\u2019s pubic minter) - One signature per token Plus tossing a throwback to ERC165 in there for \u201cbackwards compatibility\u201d Also with ERC721 being the normal, dropping ERC721URIStorage for ERC721 straight up, since there\u2019s a few cases where not using _setTokenURI() is a way better option, say those collection (aka PFP) contracts ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.115845959595959
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MaxFlowO2",
                    "index": "10",
                    "likes": "1",
                    "time": "05/01/2022-07:23:23",
                    "content": "also want to do an access control measure like onlyArtist()? cold be super simple to rewrite that (have done in the past for onlyDev())\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.354166666666667
                }
            ]
        }
    ],
    "group_index": "1315"
}