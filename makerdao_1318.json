{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/how-might-one-vote-without-a-verifiable-interface/16076",
            "title": "How might one vote without a verifiable interface? ",
            "index": 16076,
            "category": [
                "Governance"
            ],
            "tags": [
                "meta-governance",
                "mips"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/nikolai",
                    "index": "#1",
                    "likes": "9",
                    "time": "27/06/2022-04:44:39",
                    "content": "Suppose I was a very paranoid individual who believed that everyone was \u201cout to get me\u201d. In light of recent software supply chain attacks against user interfaces of defi products, I might be worried that there is such an attack prepared for my cold storage addresses in particular. That would mean that a user interface would be delivered using web2 technology, and I would be using that interface to generate a signature request for my local hardware wallet. Imagine the interface told me that it was going to generate a signature request for one thing, but instead, generated a signature request for a malicious transaction. How would I know? For simple, well-known contract types like ERC20 tokens, it is viable to manually inspect the calldata on your hardware wallet or cold storage device, and be sure that the transaction is indeed what you intend to sign. But what if the contract was one that you didn\u2019t usually use, but was nevertheless important for you to access? And what if the developers of those contracts did not provide a verifiable user interface delivery method for me to check that the transaction was what I expected? In the long term, I hope we can use simple web3 tools like dmap and dpack for securely delivering addresses and ABIs to the client, and have simple standards for consuming them so that developers could easily generate language bindings for specific objects. Right now, if I wanted to write a simple script to interact with some contracts in the Maker system, I would need to read scattered documentation and ensure that the documentation is in sync with the system. The Maker project actually does much better than the average defi project in this regard, as I remember seeing a page with all addresses for each deployment. But right now, I need to express my opinion in the MKR poll. Even if I had started at the very beginning, and didn\u2019t wait for the last few days to try to start voting, would that still be enough time to make sense of all the documentation about how to actually use the existing contracts? Fortunately, there is a simple way for me to limit my exposure to the risk of any particular user interface, while also being able to vote with my MKR. I will just split my balance up into multiple addresses using an interface that I can verify, which includes the ability to transfer ERC20 tokens. Then, I can vote with one at a time, and if anything goes wrong, the damage is limited and I can investigate what happened. It should be clear that splitting up my vote like this is not me trying to show as if there is \u201cbroad\u201d support for my proposal, which I could do by hiring people to act like they support my proposal instead. That might make sense for a different system, but in the current Maker system, votes are determined proportional to MKR tokens, not distinct addresses. That\u2019s why I think the \u201cunique voters\u201d metric is misleading, it is not much more than an interpretation of the contracts by the user interface designer. Here is a demonstration that I can sign with this key. https://etherscan.io/tx/0xe844a40b8ba2a4522f8c06bc75c26c7abd01e275b6593b2b86078660f2c362c4 ",
                    "links": [
                        "https://github.com/dapphub/dpack",
                        "https://etherscan.io/tx/0xe844a40b8ba2a4522f8c06bc75c26c7abd01e275b6593b2b86078660f2c362c4"
                    ],
                    "GPT-summary": "The post discusses the potential risks of using a user interface to generate a signature request for a local hardware wallet, and proposes a solution to limit exposure to such risks. The author also discusses the challenges of interacting with contracts in the Maker system and suggests the use of simple web3 tools for securely delivering addresses and ABIs to the client. The post does not advertise or explain a proposal, nor does it give entirely positive or negative feedback on a proposal.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [],
                    "Sentiment": 5.2278368794326235
                },
                {
                    "author_link": "https://forum.makerdao.com/u/0xdeniz",
                    "index": "#2",
                    "likes": "10",
                    "time": "27/06/2022-10:48:29",
                    "content": "Here are some ideas that might prove helpful:   By using a Vote Proxy contract you could minimize exposure of your cold storage whilst participating in Maker governance through the Voting Portal UI. The UI for generating a Vote Proxy contract is deprecated and has yet to be ported over to the current version of the Voting Portal. You could either try using the aforementioned UI for generating a vote proxy contract, or use these instructions to manually create one through using Etherscan\u2019s UI for interacting with smart contracts. Documentation of the Voting Proxy contract itself can be found here.   Although not all components of Maker\u2019s voting system live on-chain (eg. gov-polling-db) it is possible to participate fully without using/trusting the Voting Portal UI. For example, multiple crypto custodians have built custom integrations with Maker\u2019s governance contracts for their institutional MKR holders. I agree that the state of documentation is very fragmented\u2014the documentation related to UIs is largely deprecated also. Still I believe that it\u2019s possible to find the relevant smart contract documentation required in the process of building a custom frontend. One last thing I\u2019ll add here is that you should exercise caution with manually sending IOU tokens to/from accounts as it might lead to unrecoverable MKR tokens. More docus on IOU here.       nikolai:  That\u2019s why I think the \u201cunique voters\u201d metric is misleading, it is not much more than an interpretation of the contracts by the user interface designer.   This is good feedback\u2014Maker\u2019s voting system is not sybil-resistant and the wording in the UI should not suggest so. ",
                    "links": [
                        "https://v1.vote.makerdao.com/polling",
                        "https://dux.makerdao.network/how-to-create-a-vote-proxy-manually-using-etherscan",
                        "https://docs.makerdao.com/smart-contract-modules/proxy-module/vote-proxy-detailed-documentation",
                        "https://docs.makerdao.com/smart-contract-modules/governance-module/chief-detailed-documentation"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author is advertising proposal (only indirectly, through discussing Maker's governance contracts)",
                        "None",
                        "None"
                    ],
                    "Sentiment": 5.508594346829641
                },
                {
                    "author_link": "https://forum.makerdao.com/u/juan",
                    "index": "#3",
                    "likes": "1",
                    "time": "27/06/2022-17:00:18",
                    "content": "It would be great if that info would also live somewhere in the Voting Portal. : ) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.393939393939394
                },
                {
                    "author_link": "https://forum.makerdao.com/u/system",
                    "index": "#4",
                    "likes": "0",
                    "time": "26/09/2022-23:01:06",
                    "content": "This topic was automatically closed 91 days after the last reply. New replies are no longer allowed. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0606060606060606
                }
            ]
        }
    ]
}