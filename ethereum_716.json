{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-global-address-to-pubkey-service/2727",
            "title": "EIP: Global address to pubkey service ",
            "index": 2727,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "1",
                    "likes": "1",
                    "time": "22/02/2019-23:53:04",
                    "content": "Forked from GraphQL interface to Ethereum node data :    GraphQL interface to Ethereum node data   RFE: I would like to have an ability to get a public key for address (without intermediary explicit tx lookup and ecrecover call).      GraphQL interface to Ethereum node data   Sure, that\u2019s possible, but:  It would require new index datastructures on disk. It wouldn\u2019t work for transactions sent before the node was fast-synced without changes to the fast-sync protocol. It wouldn\u2019t work for light nodes without changes to the LES protocol.    I need to know a public key for address to send a encrypted message to recipient. Currently I need to communicate in advance with the recipient to get a pubkey for address. For some use cases like \u201cStealth transactions\u201d  it is discouraged. As stated before by @Arachnid, default implementation address=> pubkey by clients is not easy. A simple workaround suitable for many cases could be a trivial contract with a mapping inside deployed at well known address. Is there such contract address=> pubkey already deployed? If not: may be we should do it? ",
                    "links": [
                        "https://ethereum-magicians.org/t/graphql-interface-to-ethereum-node-data/2710/4",
                        "https://ethereum-magicians.org/t/graphql-interface-to-ethereum-node-data/2710/7"
                    ],
                    "GPT-summary": "The author proposes a new feature to the Ethereum node data that would allow users to get a public key for an address without an intermediary explicit tx lookup and ecrecover call. The proposal is met with constructive criticism from a third party, who points out the technical limitations and suggests a workaround. The author responds with a question about whether a contract with a mapping inside has already been deployed.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Privacy, Security and risk management",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.623232323232323
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Amxx",
                    "index": "3",
                    "likes": "2",
                    "time": "28/02/2019-14:37:26",
                    "content": "We had the same discussion in our project and were considering writing such contract. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "4",
                    "likes": "1",
                    "time": "02/03/2019-01:19:44",
                    "content": "Great! Please publish it before use to collect public feedback. May be there are more hidden UseCases. I would glad to see it as a public service. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.527777777777778
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Amxx",
                    "index": "5",
                    "likes": "1",
                    "time": "02/03/2019-10:00:23",
                    "content": "Our approach is pretty simple for now Code is here If you have any better idea, I\u2019ll be happy to discuss that\u2026 I\u2019ll be at the hackathon in paris next week, maybe this could be a good project ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "3rd party is advertising proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "6",
                    "likes": "0",
                    "time": "02/03/2019-16:09:26",
                    "content": "Yeah! Thank you! One objection for public discussion:  I would let only account owner create/update their own records.  Reason: preventing unexpected hostile deletion/alternation of entries. It will simplify the contract greatly because the setter logic can be implemented in the default function and getter can be default public accessor. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ssh",
                    "index": "7",
                    "likes": "1",
                    "time": "02/03/2019-16:23:05",
                    "content": "I\u2019m not sure if that is what you implied but taking a signature as an argument instead of just using the owner of the account that sent the transaction would let me add accounts of mine which don\u2019t have any eth. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 3.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "8",
                    "likes": "0",
                    "time": "02/03/2019-16:28:26",
                    "content": "    ssh:  would let me add accounts of mine which don\u2019t have any eth   valid argument. Anyway it could be done in fallback function with pubkey as payload. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "9",
                    "likes": "0",
                    "time": "02/03/2019-16:38:57",
                    "content": "    Amxx:  I\u2019ll be at the hackathon in paris next week, maybe this could be a good project   I\u2019ll be both at Council and at hackathon. Would you have a talk before hackathon (at Council)? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match."
                    ],
                    "Sentiment": 6.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Amxx",
                    "index": "10",
                    "likes": "0",
                    "time": "02/03/2019-17:53:56",
                    "content": "    ssh:  would let me add accounts of mine which don\u2019t have any eth.   That was exactly my idea. I beleive at some point most wallets won\u2019t hold any assets (ether/tokens) and will only be used to sign orders that will be relayed (meta transaction) to multisig identity smart contracts. Therefore I think anyone capable of paying a transaction should be able to register a public key for another account (provided it\u2019s done right \u2192 computing the address from the key) In my opinion, the next step is to allow identity contracts\u2019 owners to setup a key for their contract \u2026 which could be done in a number of (bad) ways \u2026 we have to find the right one ! ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.573979591836736
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "11",
                    "likes": "0",
                    "time": "02/03/2019-18:17:26",
                    "content": "    Amxx:  would let me add accounts of mine which don\u2019t have any eth.   There is another aspect: Is someone publish his public key, he commits himself to listen and receive encrypted messages. Is someone commits my public key, I am not aware of it and thus I will not check it for messages sent to me. The question is: is sending a encrypted message to address essentially the same use case as sending the payment (which requires no pre-confirmation from owner)? ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 4.910714285714286
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Amxx",
                    "index": "12",
                    "likes": "0",
                    "time": "02/03/2019-18:59:21",
                    "content": "I guess that is one way of seeing it. My stance on that was more like \u201cif this account ever participated in a procole that require you to send an encrypted message to it, here is the public key, but that doesn\u2019t imply the account owner will actively be looking for any message\u201d ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.458333333333334
                }
            ]
        }
    ],
    "group_index": "716"
}