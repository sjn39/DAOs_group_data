{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-quantum-nft-standard/8852",
            "title": "EIP: Quantum NFT Standard ",
            "index": 8852,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/maxareo",
                    "index": "1",
                    "likes": "0",
                    "time": "07/04/2022-05:34:51",
                    "content": " Abstract This proposal aims to introduce a smart contract interface that can represent an NFT that are normally distributed around the true NFT but displayed randomly.  Motivation A non-fungible token proposed in ERC-721 is usually associated with a media content in the external world through a deterministic link to metadata with media inforamtion. This deterministic linkage can be improved with easy-to-use on-chain randomness such as Gassian random number generator proposed here. The net effect is the ownership is still one, and the displayment can be random with centrality. This can be used in the NFT and GameFi domains. ",
                    "links": [
                        "https://github.com/simontianx/OnChainRNG/tree/main/GaussianRNG"
                    ],
                    "GPT-summary": "The post introduces a proposal for a smart contract interface that can represent an NFT with random displayment using on-chain randomness. The proposal aims to improve the deterministic linkage between an NFT and its associated media content. The post explains the motivation behind the proposal and its potential applications in the NFT and GameFi domains. The post also invites feedback and questions about the proposal, and constructive criticism is welcomed.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Interoperability and Scalability",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 4.529220779220779
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SalihRmah",
                    "index": "2",
                    "likes": "1",
                    "time": "07/04/2022-14:28:10",
                    "content": "I\u2019m not sure I understood what you mean exactly, but if the goal is randomly distributed metadata across the whole NFT project, it is possible to simply assign the metadata in random order to the tokens (with chain-link randomness as a truly random seed, and from there you can use it to simulate any probability function you desire\u2026) making this a standard wouldn\u2019t boost interoperability of NFT projects that would want to use this approach, plus I don\u2019t see a reason why NFT makers would want to adhere to random assignment of metadata to tokens, since this randomness usually is achieved by the buyers/minters order of arrival, which is generally a war over there) ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.110576923076923
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/maxareo",
                    "index": "3",
                    "likes": "0",
                    "time": "08/04/2022-01:41:00",
                    "content": "If I name it as Quantum NFT Standard, you may have a better feeling. In essence, that\u2019s what it is. An NFT does not have to be always linked to the same metadata in a deterministic way. It can be random yet with centrality towards the original one. For example, the NFT with tokenId 123 may be read as token 123 with 60% of probability, and 122 and 124 10% each, 121 and 125 5% each, so on and so forth. The tokenId is always 123, but the content can be those in the neighborhood. The Gaussian distribution provides the central tendency that Chainlink VRF cannot provide. Let me know if this makes sense to you. Again, this idea is in the infancy, any idea, comment and question is highly welcome. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.839285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SalihRmah",
                    "index": "4",
                    "likes": "0",
                    "time": "08/04/2022-08:59:43",
                    "content": "Ah, same token different metadata at different times, technically makes sense, Quantum NFT Standard does make it clearer I can think of a possible use-case, but for on-chain data, for example a P2E game \u201cdrunk-fighters\u201d, where fights depend on how strong a fighter is (data is on-chain), and his current strength is randomized (since he\u2019s drunk   ). but that would require the randomness be applied on the strength and then calculating the result of a fight\u2026 But, I can\u2019t think of a reason for metadata to be non deterministic, I wouldn\u2019t want my art to change (since it is something I\u2019d want to show people and know what they would see for sure no matter when they\u2019re looking), Can you give an example use-case for non-deterministic metadata? PS: I\u2019ve mentioned Chainlink VRF to remind you that you can\u2019t truly generate true randomness without something similar to to it, and so if the \u201ccurrent\u201d metadata is used to determine a win/something, in your code, the gaussian distribution seed you get from: uint256 seed = uint256(keccak256(abi.encodePacked(salt + block.timestamp))); isn\u2019t truly random, using VRF to get the seed would be more secure. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.244791666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/maxareo",
                    "index": "5",
                    "likes": "1",
                    "time": "08/04/2022-10:19:15",
                    "content": "Hey @SalihRmah, thanks for the comments. I like the \u201cdrunk-fighters\u201d idea a lot. I think you are touching the essence of it, which is there is a true value on-chain, and small deviations from it are not only allowed but also encouraged. Yes, randomness is another topic, and in the repo I shared above talked about it in detail. The focus here is about the type of randoness. The randomness provided by either Chainlink VRF or keccak256 is uniform in the domain [0,2**256-1], and the RNG in that repo is Gaussian which has a central tendency, which is huge in this scenario. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/julesl23",
                    "index": "6",
                    "likes": "1",
                    "time": "08/04/2022-12:36:48",
                    "content": "A lookup table is a way to do it. You can get the Chainlink VRF random number and use that as an index to a mapping/array that has pre-generated Gaussian distribution values, to get a sample from that. If continuous values are needed then can linear interpolate between two looked up values. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 2.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/maxareo",
                    "index": "7",
                    "likes": "0",
                    "time": "08/04/2022-13:19:39",
                    "content": "Have you looked at the on-chain Gaussian RNG in the repo yet? It may provide a simpler and more gas-efficient solution. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                }
            ]
        }
    ],
    "group_index": "1688"
}