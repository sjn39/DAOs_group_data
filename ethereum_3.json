{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-5313-light-contract-ownership/10052",
            "title": "EIP-5313 Light Contract Ownership ",
            "index": 10052,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "1",
                    "likes": "0",
                    "time": "22/07/2022-19:13:00",
                    "content": "Latest draft: Create eip-xxx.md by fulldecent \u00b7 Pull Request #5313 \u00b7 ethereum/EIPs \u00b7 GitHub ",
                    "links": [],
                    "GPT-summary": "The post is a link to the latest draft of a proposal for a new Ethereum Improvement Proposal (EIP) called \"Light Contract Ownership\". No feedback or collaboration is requested or advertised, and no third-party feedback or criticism is given.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 7.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "2",
                    "likes": "2",
                    "time": "22/07/2022-20:58:08",
                    "content": "I think you\u2019re in the running for the fastest speedrun of the EIP process   Serious question though, why not an isOwner(address) function? Compatibility with existing implementations? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 3.333333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "3",
                    "likes": "1",
                    "time": "23/07/2022-04:28:57",
                    "content": "While I agree that isOwner(address) would be better, owner() is currently a defacto standard within the ecosystem.  Perhaps someone can create another EIP for isOwner(address) returns (bool) and owners() returns (address[])?  Though, owners() perhaps should be paged? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.833333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/frangio",
                    "index": "4",
                    "likes": "2",
                    "time": "23/07/2022-15:11:41",
                    "content": "IMO \u201cownership\u201d should be only used when it\u2019s a single account. Any kind of \u201cshared ownership\u201d is a more complex arrangement that can\u2019t be described by a list of owners. For example: is it 1-of-N or N-of-M, is there any hierarchy, etc. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.728571428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "5",
                    "likes": "2",
                    "time": "24/07/2022-04:46:03",
                    "content": "Yeah, a fair argument here would be that single owner should always be the case, and if you want a more complex multi-owner relationship that should be encapsulated into a separate contract that then is the single owner of the contract in question.  I think I can get behind this argument generally and support only having single owner contracts. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.186507936507937
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "6",
                    "likes": "0",
                    "time": "25/07/2022-21:22:39",
                    "content": "Long-term and big-picture, there is a good argument to use a new and versatile isAuthorizedAccount(address account). And then after broad adoption, standardize it. But this EIP is specifically so that you can inherit the minimum functionality needed to make your contract compatible with OpenSea or whatever else you need. I don\u2019t control OpenSea and can\u2019t make them design to other interfaces. But I have recently implemented this draft EIP-5313 (ownerOf() returns (address)) and it successfully worked to validate a collection on OpenSea. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.269886363636363
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/k06a",
                    "index": "7",
                    "likes": "2",
                    "time": "26/07/2022-20:13:50",
                    "content": "In case of complex ownership, owner should be address of contract implementing custom ownership logic  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "8",
                    "likes": "0",
                    "time": "02/08/2022-02:36:14",
                    "content": "Thank you all for the feedback! This EIP seems to be in a good state. Requesting to move to Last Call status at Promote EIP-5313 to last call by fulldecent \u00b7 Pull Request #5389 \u00b7 ethereum/EIPs \u00b7 GitHub ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "9",
                    "likes": "0",
                    "time": "03/08/2022-02:15:49",
                    "content": "I wonder if there is value in defining a return value of 0 as special (meaning the contract is unknowned)?  While one can infer this, it may be nice to standardize that 0 is the standard way to express unknowned so people don\u2019t use other values like 0xdead and whatnot.  Is there value in having a well defined event that is fired whenever ownership changes?  This may be more appropriate for a separate EIP (that perhaps depends on this one), but it does seem like a valuable thing to standardize. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.526785714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "10",
                    "likes": "1",
                    "time": "03/08/2022-21:08:31",
                    "content": "An event is defined in EIP-173. The motivation in EIP-5313 (DRAFT) for not using the event is that it is not the minimal requirement.  I do not know of anybody that has implemented EIP-5313 (DRAFT) that would make use of a zero return value. Specifically, OpenSea is today using EIP-5313 (DRAFT) for logins and it does not make special use of a zero return value. For this reason, specification of the meaning for a zero return value would not be minimal and therefore it is not in 5313 (DRAFT) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.261904761904762
                }
            ]
        }
    ],
    "group_index": "3"
}