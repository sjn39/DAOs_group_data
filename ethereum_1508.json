{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/ultimate-heavy-io-relief/7493",
            "title": "Ultimate Heavy IO Relief ",
            "index": 7493,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/jessielesbian",
                    "index": "1",
                    "likes": "0",
                    "time": "17/11/2021-02:21:54",
                    "content": "I have an idea for a new optimization technique that will definitely relieve the heavy IO loads on Ethereum nodes. My idea extends the EIP-2200 gas refunds to the block level, not just the transaction level. My idea involves a \u2018state cache\u2019 that stores frequently-used storage slots in RAM and gives out heavy gas discounts for reads and writes to those storage slots. Every time a storage slot is accessed, it\u2019s considered hot and is cached for the next 5 blocks. Reads or writes to a hot storage slot would not follow normal storage gas metering rules. Instead, reads and writes to hot storage slots should cost 10 gas for reads and 50 gas for writes. ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.353535353535354
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/mlaw",
                    "index": "2",
                    "likes": "0",
                    "time": "27/11/2021-06:49:27",
                    "content": "Given that hot slots are probably cached in-memory via the kernel buffer cache, I\u2019m not sure this will much improvement on (disk) IO. But I like the idea of a discounts for such accesses as it\u2019s a good incentive. This would be kinda like a generalization of EIP-2930 for all transactions, with possibly better UX since knowing which slots will be accessed isn\u2019t always feasible. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/hmijail",
                    "index": "3",
                    "likes": "1",
                    "time": "27/11/2021-08:41:57",
                    "content": "Imagine you wanted to take advantage of this mechanism. You send your transaction and want it to get the mentioned \u201cdiscounts\u201d. How would you actually do it? How do you know which slots are hot when your transaction runs? Apart from that, this technique ignores the actual problem in the way a regular Ethereum client accesses its DB. Not only the kernel, but the DB engines already go to lengths to cache stuff and be fast, possibly taking into account hardware characteristics - that\u2019s their whole job. And still, the heavy IO remains a problem, because it\u2019s intrinsic to the way in which the Ethereum state is typically stored. You might be interested to read how the Erigon client works to fix that problem: GitHub - ledgerwatch/erigon: Ethereum implementation on the efficiency frontier ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.242424242424243
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "4",
                    "likes": "1",
                    "time": "27/11/2021-09:00:52",
                    "content": "Probably a good time to review this gist: Caching.md \u00b7 GitHub ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 8.5
                }
            ]
        }
    ],
    "group_index": "1508"
}