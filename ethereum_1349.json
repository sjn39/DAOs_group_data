{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/on-chain-interactivity-of-nfts-making-nfts-metaverse-compatible-with-meta-actions/6394",
            "title": "On-chain Interactivity of NFTs: Making NFTs metaverse-compatible with Meta-actions ",
            "index": 6394,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "1",
                    "likes": "2",
                    "time": "04/06/2021-09:01:49",
                    "content": " On-chain Interactivity of NFTs: Making NFTs metaverse-compatible with Meta-actions Opening a discussion about the best way we could find to make NFTs metaverse-compatible, and even more than just that, finding a way for NFTs to actually expose to consuming platform that they have an on-chain API available. Quick Example: being able to tend to your cat needs directly in Cryptovoxels.  Problem Today if I create the next super NFT everyone wants, there is a big chance that I would like for it to be importable in current and future VR worlds and Metaverse. However, more than just being able to import it, I will want users to be able to interact with this NFT. As an example, this week a project allowing people to purchase a Bonsai NFT came out, and people have been thinking \u201chowever it would be nice to be able to tend to the bonsai. Water it. Cut it.\u201d But today, those actions, if they were possible on the website of the NFT creator, would have to be specifically coded for this specific NFTs to be able to work in Metaverse. Because there is right now no API that allows NFT creators to expose the existence of actions to the consuming platforms.  Start of a solution In Web3 and solidity programming, we have something similar: We need an ABI to be able to interact with a contract. Without the ABI, we can not know what are function names, nor what parameters we have to pass. What if we were finding a way to do the same things for NFTs? What if in the NFT JSON metadata - or somewhere on-chain, we had a field that actually tells consuming platforms: \u201cHey there are actions possible on this NFT, you can even integrate it directly in your metaverse\u201d with a list of actions and definite parameters: Example: { \t\"name\": \"Bonsai #1\", \t\"description\": \"The super Bonsai\", \t\"image\": \"ipfs://ipfs/Qx...\", \t\"low_poly\": \"ipfs://ipfs/Qx...\", \t\"contract\": \"0xdeadbeef...\", \t\"meta_actions\": [{ \t\t\"name\": \"Water Bonsai\", \t\t\"functionSignature\": \"waterBonsai(uint256)\", \t\t\"inputs\": [\"tokenId\"], \t\t\"user_type\": \"owner\" \t},{ \t\t\"name\": \"Trim Bonsai\", \t\t\"functionSignature\": \"trimBonsai(uint256)\", \t\t\"inputs\": [\"tokenId\"], \t\t\"user_type\": \"owner\" \t},{ \t\t\"name\": \"Compliment Bonsai\", \t\t\"functionSignature\": \"complimentBonsai(uint256)\", \t\t\"inputs\": [\"tokenId\"], \t\t\"user_type\": \"guest\" \t}] }  inputs would be a definite list of keywords that consuming platforms would know. (I can think of contract, tokenId, recipient, amount, \u2026) that would be \u201cself explanatory\u201d user_type would also be a deinite list of keywords that would mostly expose if this action is disponible to anyone or just owner  \u2192 this is an example, it\u2019s not the proposed form of it, I\u2019m opening a discussion with ideas here Something in this direction would actually allow all Metaverse, when someone loads a Bonsai in their world, to display \u201cpossible actions\u201d that the owner can actually do directly in the metaverse, without having to go away I haven\u2019t seen this presented somewhere and can\u2019t find any EIP for this but I think this is the next big step we will have to make for interoperability of NFTs. Is this something worked on, and if not, what are you thinking about this? ",
                    "links": [],
                    "GPT-summary": "The author proposes a solution to make NFTs metaverse-compatible by creating an on-chain API that allows NFT creators to expose the existence of actions to the consuming platforms. The proposal suggests adding a field in the NFT JSON metadata that tells consuming platforms what actions are possible on the NFT. The author invites feedback and ideas on the proposal.",
                    "GPT-proposal-categories": [
                        "Interoperability and Scalability",
                        "Smart contract updates",
                        "Token economics",
                        "Community and engagement",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.539036544850498
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "2",
                    "likes": "0",
                    "time": "05/06/2021-10:37:24",
                    "content": "When I say Metadata it can also be at contract level: An extension to ERC721 and ERC1155 that allows to define an \u201cNFT ABI\u201d per token id: Consuming platforms would see if the contract of the NFT supports this NFT Abi functionality, and if yes, query it to get the ABI / abiURI. Something like: if (await contract.supportsInterface(ERC_NFTABI_INTERFACE)) {   const nftAbiURI = await contract.nftAbiURI(tokenId);   const nftABI = await fetch(nftAbiURI).then(res => res.json());   // now with nftABI the platform knows    // what interactions are possible on the NFT   // and can offer users to make those interactions    // directly in their own interface }  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 6.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wighawag",
                    "index": "3",
                    "likes": "0",
                    "time": "06/06/2021-10:44:12",
                    "content": "if we are talking about on-chain action, the abi of the nft contract itself should be sufficient, no ? solidity already include the ipfs hash of the source in the bytecode and sourcify is building a db out of it on ipfs This seems to already handle all you mention here. Or am I missing something ? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "4",
                    "likes": "1",
                    "time": "06/06/2021-11:05:53",
                    "content": "Well the abi of the contract is sufficient for the world to know the functions, but how does it know that there are some specific functions that are \u201cactions\u201d available on an NFT? For example you have an ERC1155 with several tokenIds. Token ID 1 is a Sword Token ID 2 is a Tree Token ID 3 is a Cat Let\u2019s say all those can be imported and shown in Decentraland. And in the contract, there is actually a function to Water the tree, so it doesn\u2019t die. Today if we want Decentraland to show, in their own interface a \u201cWater\u201d action, someone has to code specifically for this (contract, tokenId=2) a custom mapping so it is possible to show this \u201cWater\u201d action for this tree when you click on it. However, if the NFT itself, could declare \u201cthese are the actions anyone can do on me\u201d, then there is no custom mapping needed. The world can just read the interface for this ID, and show the actions that are possible. Because all actions are not possible on all tokens, not to all people (guest vs owner) and probably the contract might also have function that have nothing to do with actions on the NFTs Does that make sense? The idea is more to allow any NFT, that are completely world agnostic, to be able to be fully used & interacted with, in all different worlds. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.821428571428572
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wighawag",
                    "index": "5",
                    "likes": "0",
                    "time": "06/06/2021-13:21:46",
                    "content": "It make sense, got it. I guess a description field would also be useful. and an icon too, could be optional though. But how do you think the various metaverse clients would handle this in generic fashion ? I can see it working via text as this is universal (but we also need to consider languages, etc\u2026). Similarly an icon should work in a generic fashion. This is already great, but not sure we can go much further without hitting some compatibility issues. To take the watering example, we can imagine in the best case scenario that in the client in question, it would display a watering animation when the action is executed, but that assume specific knowledge of the \u201cmeta action\u201d and thus specific integration which then mean that the generic standard was not needed for that instance. We could maybe imagine a more complete mapping, with an animation associated with it, but this is where we are potentially hitting compatibility issue as different metaverse has different rendering strategies, etc\u2026 I guess we do not need to go that far though and text+icon will already be great, just thinking aloud  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.682065217391305
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wighawag",
                    "index": "6",
                    "likes": "0",
                    "time": "06/06/2021-13:26:05",
                    "content": "Also regarding, metadata vs solitidy abi and natspec, it could well be that instead of defining these meta_actions in the metadata it could be part of the natspec. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "7",
                    "likes": "0",
                    "time": "06/06/2021-14:41:09",
                    "content": " I guess we do not need to go that far though and text+icon will already be great, just thinking aloud   Yes I was thinking more \u201ceasy\u201d first (an action name, signature, maybe \u201cpermission\u201d & contract, and description and icons are sure needed you are right), before see what people need. I guess it can already be nice to just be able to interact with your \u201coutsider NFT\u201d without having to always go out of your VR world. I thought of natspec, but I was thinking it can become a very very long comment if you have to define it for each possible IDs When at contract level (I would say it\u2019s prefered, like a function getNFInterface(tokenId) returns (string) )  or metadata, you would only have to update the \u201cnft interface\u201d to reflect it. Also maybe the standard would evolve to allow action about this tokenId on different contract (for example if you have one contract that holds the Tokens, and a bunch of separate contracts that actually compose your game features. Then you can define \u201cwater\u201d on the \u201cTendToTheTree\u201d contract, and \u201cpet\u201d on the \u201cTenToTheCat\u201d contract, etc\u2026 etc\u2026 and when you add features to your game, again you can just update the interface for this tokenId with a tx / with a metadata update, instead of redeploying a whole contract with natspecs updated This way with a simple interface (one function call on the contract to get the interface) you can expose a complicated system to the worlds! (pardon my schematization skill\u2026) Capture d\u2019\u00e9cran de 2021-06-06 17-02-46|650x499 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.582312925170068
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Shymaa-Arafat",
                    "index": "8",
                    "likes": "0",
                    "time": "06/06/2021-15:39:27",
                    "content": "1-ur overall topic reminded me of VR a, ie when(if) a country made NFTs for it\u2019s monuments they should also make it include any use of it (the real piece) in VR. . 2-However, ur example is not clear for me. I understand a game/movie creator would like to make NFTs for his characters how does he draws them, a cat starring in a cartoon for example, but not the moves?! This could vary according to the current movie. Unless u mean if he didn\u2019t NFT every possible moving position of his cat, another game could copy the same cat moving it differently for example??? . 3-In fact that\u2019s an issue I don\u2019t understand how does NFT handle it? How the cryptographic hash is calculated??? From ur cat example if a competitor put something in the cat hair, will he get away with it as the cryptographic hash will be different??? -Draw a temporary erasable color on an antique??? . 4-My last repeated Q about the Beeple pic, does the hash/copyright include all the hashes of the small pics?and how that is done?in a Merkle like for example?where can I find these details??? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.65625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "9",
                    "likes": "0",
                    "time": "06/06/2021-15:58:40",
                    "content": "Hello @Shymaa-Arafat , I think you answered to the wrong thread and misunderstood the goal of this one. There is nothing about hash nor drawing/moving things. The thread you have been participating to until now is this one => EIP-3340: NFT Editions Standard Extension - #4 by Shymaa-Arafat where you have been talking about hash and asking question Beeple\u2019s work. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match"
                    ],
                    "Sentiment": 3.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Shymaa-Arafat",
                    "index": "10",
                    "likes": "0",
                    "time": "06/06/2021-16:28:44",
                    "content": "1-I talked & asked about NFTs in 3 or 4 threads not just the one u mentioned . 2-If u don\u2019t work in the cryptographic details of NFTs, u can answer the part about ur cat example. Am I getting it right u r talking about an animation cat drawing? -Not exactly related to ur topic, but u do mean one like the mentioned & complained about in this article right?  BBC News    Buying a pink NFT cat was a crypto nightmare Trying to own a virtual feline proves to be an exhausting and expensive process.      ",
                    "links": [
                        "https://www.bbc.com/news/technology-57273904"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.929464285714285
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Hectorzh",
                    "index": "11",
                    "likes": "0",
                    "time": "07/07/2022-10:28:02",
                    "content": "There is nothing related to the hash. Your NFT contract is there on the chain stating the NFT is yours. You cannot do anything with the NFT. If you download the cat picture of the NFT, it is a picture and not the NFT though you get the same picture and can draw on it. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "1349"
}