{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/erc-5485-interface-for-legitimacy-jurisdiction-and-sovereignty/10425",
            "title": "ERC-5485: Interface for Legitimacy, Jurisdiction and Sovereignty ",
            "index": 10425,
            "category": [
                "EIPs"
            ],
            "tags": [
                "erc"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "1",
                    "likes": "0",
                    "time": "18/08/2022-03:44:49",
                    "content": " eip: 5485 title: Interface for Legitimacy, Jurisdiction and Sovereignty description: <Description is one full (short) sentence> author: Zainan Victor Zhou (@xinbenlv) discussions-to:  status: Draft type: Standards Track category: ERC created: 2022-08-17 requires: 165   Abstract An interface for legitimacy, jurisdiction and sovereignty.  Motivation Provide a way for compliant smart contracts to declare their legitimacy lineage, jurisdiction they observe, and sovereignty if they choose to not fall onto any jurisdiction. For example. If ContractA gains legitimacy from ContractB, ContractB gains legitimacy from ContractC but ContractC doesn\u2019t gain legitimacy from any one, ContractC is considered the \u201cjurisdiction\u201d that both ContractB and ContractA observe. Both ContractA and ContractB MUST return address of ContractC as the result of jurisdiction. A real world example is that ContractA represents an A company registered in a country, ContractB represents a The Secretary of State of the country. The ContractC represents Supreme Court of the Country. Another real example is a contract the declared \u201cself-sovereignty\u201d that doesn\u2019t follow any jurisdiction. This interface supports both cases, providing a way to allow smart contract to determine if they want to allow / prohibit interaction based on the sovereignty. For example A country might want to require any digital money service\u2019s all smart contracts to observe their EIP-5485 jurisdiction before they are allow to operate money in their (real world) legal jurisdiction. On the other hand, a DAO with strong decentralized ideology might choose to only inter-operate with EOA or \u201cself-sovereigned\u201d smart contracts to avoid being affected by any countries.  Specification The key words \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d, \u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and \u201cOPTIONAL\u201d in this document are to be interpreted as described in RFC 2119.  Compliant contract MUSTS implement the following interface.   interface IERC5485 {  function legitimatedBy() public view returns (address);  function jurisdiction() public view returns (address);  }     Suppose a compliant ContractA is deployed at address 0x<Contract_Address_A> gains its legitimacy from another contract or External Owned Account (EOA) at 0x<ADDRESS_B>, it shall return the 0x<ADDRESS_B> when being queried for legitimatedBy().   A contract that matches ANY of the following cases is considered a \u201csovereign contract\u201d:     Case 1: it does not implement this EIP   Case 2: it implements this EIP but return its own address.   Case 3: it implements this EIP but return a ZERO address.     Any compliant contract MUST return its legitimacy sources chain up to the sovereign contract when queried by jurisdiction().   If ContractA gains legitimacy from ContractB, ContractA MUST observe the ContractB\u2019s order to ANY of the following    Order Type 1: execute a selfdestruct of ContractA   If ContractA observes jurisdiction of ContractC (a sovereignty), ContractA MUST observe ContractC\u2019s order to ANY the following    Order Type 1: execute a selfdestruct of ContractA   Order Type 2: execute ANY smart contract executable proposals as specified in EIP-5247    Rationale Needs discussion.  Backwards Compatibility Needs discussion.  Security Considerations Needs discussion.  Copyright Copyright and related rights waived via CC0. ",
                    "links": [],
                    "GPT-summary": "The post presents a proposal for an interface for legitimacy, jurisdiction, and sovereignty for smart contracts. The proposal aims to provide a way for compliant smart contracts to declare their legitimacy lineage, jurisdiction they observe, and sovereignty if they choose to not fall onto any jurisdiction. The post also specifies the requirements for compliant contracts and the expected behavior of the interface. The post invites discussion on the proposal and its implementation.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Law and regulations",
                        "Identity and reputation systems",
                        "Token economics",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None"
                    ],
                    "Sentiment": 5.6259523809523815
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/sbacha",
                    "index": "2",
                    "likes": "0",
                    "time": "21/08/2022-05:43:45",
                    "content": "this is obviously a government psyop, this EIP is not even coherent and should be rejected until an actual specification is met. Also your title is intentionally inflammatory. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving entirely negative feedback on proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.833333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/davidc",
                    "index": "3",
                    "likes": "1",
                    "time": "23/08/2022-16:07:51",
                    "content": "This is interesting but definitely has to be thought through more. I\u2019m not sure if it\u2019s appropriate for a contract that another gains legitimacy from to be able to issue a selfdestruct. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.458333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jademckinley08",
                    "index": "4",
                    "likes": "1",
                    "time": "13/09/2022-08:51:18",
                    "content": "Great Stuff, thanks for sharing the information ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "5",
                    "likes": "0",
                    "time": "28/09/2022-23:18:05",
                    "content": "selfdestruct is an example of the \u201cmost powerful thing\u201d an account (contract) can do onto another account (contract). we can definitely consider other way to mandate. Basically, under jurisdiction means the agreement to obey rules of the jurisdiction and be panelized when not. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.291666666666667
                }
            ]
        }
    ],
    "group_index": "53"
}