{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/temporal-replay-protection/2355",
            "title": "Temporal Replay Protection ",
            "index": 2355,
            "category": [
                "EIPs"
            ],
            "tags": [
                "security",
                "replay-protection",
                "dust-removal"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "1",
                    "likes": "5",
                    "time": "08/01/2019-12:15:25",
                    "content": "This EIP would add temporal replay protection: https://github.com/ethereum/EIPs/pull/1681 We already have cross-chain replay protection, thus \u2018temporal\u2019 to signify that we\u2019re talking about replay over time. The main driver for my EIP is to make dust account removal possible, but there are also other scenarios where it could be useful: during ICO (either the tx makes it through within two hours or just remove it) and to make it easier for nodes to clean up/maintain transaction queues. EDIT: Linked to the PR instead of a the version in a specific commit-hash ",
                    "links": [
                        "https://ethereum-magicians.org/t/ping-a-ring-from-a-post/2356"
                    ],
                    "GPT-summary": "The post explains a proposal to add temporal replay protection to Ethereum. The author's main goal is to make dust account removal possible, but the proposal could also be useful in other scenarios. A third party could provide constructive criticism or ask questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Law and regulations",
                        "Privacy, Security and risk management",
                        "Interoperability and Scalability",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.590277777777778
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "2",
                    "likes": "2",
                    "time": "08/01/2019-17:02:36",
                    "content": "Really like this EIP - much cleaner than e.g. replacing a transaction with a higher gas price when the tx is not wanted anymore. Just a small nit:  Note: this EIP does not introduce any maximum valid-until date, so it would still be possible to create transactions with near infinite validity.  actually it introduces a maximum (max uint64) - so perhaps change to:  Note: this EIP does not introduce any maximum valid-until date apart from the maximum of uint64, so it would still be possible to create transactions with near infinite validity.  so there is no more room to nit-pick. Thanks for the initiative with this EIP! Can\u2019t wait for the HF introducing this feature. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.2727272727272725
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Amxx",
                    "index": "3",
                    "likes": "0",
                    "time": "09/01/2019-10:06:57",
                    "content": "    ligi:  Just a small nit:  Note: this EIP does not introduce any maximum valid-until date, so it would still be possible to create transactions with near infinite validity.  actually it introduces a maximum (max uint64) - so perhaps change to:  Note: this EIP does not introduce any maximum valid-until date apart from the maximum of uint64, so it would still be possible to create transactions with near infinite validity.    Another possibility is to consider that valid-until 0 is equivalent to valid forever. This is what I call the \u201ccheck only if value is set\u201d approach. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.964285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "4",
                    "likes": "0",
                    "time": "09/01/2019-10:40:37",
                    "content": "    Amxx:  Another possibility is to consider that valid-until 0 is equivalent to valid forever. This is what I call the \u201ccheck only if value is set\u201d approach.   I do not think this is needed and it would introduce a bit more complexity in code. So I would signal not to do it this way. I think the approach of @holiman is completely fine there my comment was just to get the wording a bit more precise so there is no more nit-picking possible. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.1190476190476195
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "5",
                    "likes": "1",
                    "time": "06/02/2019-16:24:54",
                    "content": "    ligi:  I do not think this is needed and it would introduce a bit more complexity in code   I\u2019d agree about that. I pushed some changes to the EIP, to give credit to an earlier EIP (by @Arachnid)  which was basically the same, but used blocknumber instead of time. I also added some reasoning about that choice. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 5.833333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arctek",
                    "index": "6",
                    "likes": "0",
                    "time": "27/12/2019-02:39:54",
                    "content": "With a few trading protocols now supporting a deadline in their smart contracts (Uniswap V2, 0x v3), having this would be great for preventing charging users for transactions that will fail past a deadline. It should also help out in terms of transactions that needlessly sit in the pending pool by fault of user error. If a transaction is signed for a particular valid-until date, does that make any subsequent transaction with a higher valid-until date invalid? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.1154761904761905
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/kladkogex",
                    "index": "7",
                    "likes": "1",
                    "time": "30/12/2019-12:33:51",
                    "content": "This is super important for fast ETH-compatible networks like us at SKALE, and we will implement it on our network sometime in 2020. It has to be the time stamp and not the block number, since for asynchronous consensus there is no fixed, so the block number becomes meaninless. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.104166666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "8",
                    "likes": "0",
                    "time": "01/06/2020-14:43:07",
                    "content": "    holiman:  I pushed some changes to the EIP, to give credit to an earlier EIP (by @Arachnid) which was basically the same, but used blocknumber instead of time .   I don\u2019t personally think this is appropriate content for an EIP.  EIPs are all CC0 so there is no legal theater necessity to give credit, and the referenced EIP is still a draft (looks like dead in the water) and therefore subject to a complete rewrite that makes it no longer at all related to what this EIP does.  If it were a final EIP then I would have no problem with that addition. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.066666666666667
                }
            ]
        }
    ],
    "group_index": "625"
}