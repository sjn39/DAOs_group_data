{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/reth-erc20-token-smart-contract-technical-assessment/12885",
            "title": "[rETH] ERC20 Token Smart Contract Technical Assessment ",
            "index": 12885,
            "category": [
                "Collateral Onboarding",
                "Domain Work"
            ],
            "tags": [
                "sc-domain-work",
                "reth"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/kaue",
                    "index": "#1",
                    "likes": "8",
                    "time": "27/01/2022-16:12:29",
                    "content": " General Information   Symbol: rETH  Addresses:  RocketTokenRETH: 0xae78736Cd615f374D3085123A210448E74Fc6393  RocketDepositPool: 0x4D05E3d48a938db4b7a9A59A802D5b45011BDe58  RocketStorage: 0x1d8f8f00cfa6758d7bE78336684788Fb0ee0Fa46     Deployment Dates:  RocketTokenRETH: Sep-30-2021 05:44:44 AM +UTC RocketDepositPool: Sep-30-2021 05:32:39 AM +UTC RocketStorage: Sep-30-2021 05:31:57 AM +UTC    Total supply: 42622085209938036490401 1 WAD (21796 units)  Developers allotment: None  Collateral Onboarding Application: [rETH] MIP6 Collateral Application   Project website: rocketpool.net   Github repository: rocket-pool/rocketpool   Can use an existing MCD collateral type adapter? Yes, the standard GemJoin adapter works since rewards are distributed only once rETH is deposited back into RocketPool\u2019s protocol.   Risk Summary   Does the contract implement the ERC20 token standards? Yes.  Risk analysis: HIGH.   Technical Information   Compiler version : solidity:0.7.6   Decimals: 18  Overflow checks: Yes, the token contract uses OpenZeppelin\u2019s SafeMath.sol library for arithmetic operations.  Mitigation against allowance race-condition: Yes. increaseAllowance, decreaseAllowance functions are implemented by extending OpenZeppelin\u2019s ERC20.sol contract.  Upgradeable contract patterns: Yes and no. The ERC20 token itself is not upgradeable but the RocketPool protocol can deploy a new rETH contract and use it as the new standard within the system from that point on. On the other hand, there are no token migration mechanisms in place to facilitate that process and widespread rETH V2 adoption would require a large community effort to manually mint equivalent tokens or run a novel migration in the protocol.  Access control or restriction lists: Yes. Methods depositExcess and mint access are restricted to the latest deployed version of RocketDepositPool.sol. This is done by calling RocketBase.sol\u2019s modifier onlyLatestContract with parameters rocketDepositPool and msg.sender, which interfaces with RocketStorageInterface.sol to fetch RocketDepositPool.sol\u2019s address at the time, stored in the RocketStorage.sol contract.   Formal Verification Considerations:   Does transfer have simple semantics? Yes, inherited from OpenZeppelin\u2019s ERC20.sol.  Does transferFrom have simple semantics? Yes, inherited from OpenZeppelin\u2019s ERC20.sol   Can balances be arbitrarily modified by some actor? No.    Are there any external calls? Yes. Both depositExcess and mint call the latest deployed version of RocketStorage.sol.    Testnet Information   Rocketpool\u2019s protocol went through an extensive community testnet period with over 50.000 ETH under management on Goerli and can be accessed through testnet.rocketpool.net. Currently, only around 21.166 ETH are present in the Goerli deployment.   RocketTokenRETH: 0x178E141a0E3b34152f73Ff610437A7bf9B83267A   RocketDepositPool: 0x923Ed282Cda8952910B71B5efcA7CDa09e39c633   RocketStorage: 0xd8Cd47263414aFEca62d6e2a3917d6600abDceB3    Contract Logic Summary At its core, the implementation is a standard ERC20 contract which uses the custom safe integer and arithmetic functions, with two main differences:  There are elementary on-chain calculations used to ultimately set rETH <> ETH conversion rates by communicating with the rest of the protocol and checking overall collateralization/supply. Minting permissions are exclusively only to the RocketDepositPool contract, which essentially acts as an intermediary to ETH-depositing users.  The RocketPool protocol implements a global registry (RocketStorage.sol) of system-wide variables of multiple given types (uint256, string, address, bytes, bool, int256, bytes32) to better manage interactions and access control among contracts as well as improve upgrades and overall maintainability to the protocol. More related to the rETH token itself, another external contract (RocketNetworkBalances.col) interfaces with RocketStorage.sol to provide on-chain values specific to the total supply of rETH/ETH as well as staking and time-related variables in the protocol. The rETH contract depends on this particular one to be able to calculate important values such as the rETH <> ETH conversion rate and collateralization ratios. In a similar fashion, RocketDAOProtocolSettingsNetwork.sol handles the fetching of DAO-determined network variables and serves rETH the target collateralization ratio it should have.  Upgradeability In general, contracts themselves can be upgraded to later versions by redeploying the logic and storing the new address in RocketStorage.sol. To facilitate this process, the contract RocketVault.sol is used to store ETH and rETH momentarily, suggesting a trend coming from the devs not to upgrade the token itself but the logic around it within the protocol.  Administrative Addresses  RocketDepositPool : 0x4D05E3d48a938db4b7a9A59A802D5b45011BDe58 This contract is currently the only allowed minter of rETH and address with access to the depositExcess method (although the contract\u2019s receive method also behaves the exact manner). It interfaces with end-users by handling ETH deposits and ultimate conversion to rETH. It can be easily upgraded by moving tokens at the time to RocketVault, deploying a new version of the contract, and Guardian overwriting the latest RocketDepositPool address in RocketStorage.sol. Rocket Pool: Deployer 2 (Guardian): 0x0cCF14983364A7735d369879603930Afe10df21e This address is the main RocketPool contract deployer, as well as the only non-contract address able to change RocketStorage variables at will.  Detailed Token Contract Description Table File Name: RocketTokenRETH.sol SHA-1 Hash: b9cea77bf1178201cc8e4b839016165d73740137     Contract Type Bases        \u2514 Function Name Visibility Mutability Modifiers Details           rETH Implementation RocketBase, ERC20, RocketTokenRETHInterface      \u2514 getEthValue Public    NO\u2757\ufe0f Calculate the amount of ETH backing an amount of rETH by calling the RocketNetworkBalances contract   \u2514 getRethValue Public    NO\u2757\ufe0f Calculate the amount of rETH backed by an amount of ETH by calling the RocketNetworkBalances contract   \u2514 getExchangeRate External    NO\u2757\ufe0f Returns the amount of ETH backing 1 rETH   \u2514 getTotalCollateral Public    NO\u2757\ufe0f Gets the total amount of collateral available (rETH token contract balance + excess deposit pool balance)   \u2514 getCollateralRate Public    NO\u2757\ufe0f Returns the portion of rETH backed by ETH in the contract as a fraction of 1 ether (rETH/ETH)   \u2514 depositExcess External    onlyLatestContract Deposit excess ETH from deposit pool. Only accepts calls from the RocketDepositPool contract (onlyLatestContract modifier)   \u2514 mint External    onlyLatestContract Mint rETH. Non-payable and only accepts calls from the RocketDepositPool contract (onlyLatestContract modifier)   \u2514 burn External    NO\u2757\ufe0f Burn rETH for ETH   \u2514 withdrawDepositCollateral Private     Withdraw ETH from the deposit pool for collateral. Called on every burn   \u2514 depositExcessCollateral External    NO\u2757\ufe0f Sends any excess ETH (determined by comparing getCollateralRate against rocketDAOProtocolSettingsNetwork\u2019s target collateral rate) from the token contract to the deposit pool   \u2514 _beforeTokenTransfer Internal     This is called by the base ERC20 contract before all transfer, mint, and burns to ensure there are no multiple deposits on the same block from the same address (mandated by network.reth.deposit.delay)   \u2514 allowance Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 approve Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 transfer Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 transferFrom Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 increaseAllowance Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 decreaseAllowance Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 balanceOf Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 name Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 symbol Public    NO\u2757\ufe0f Unmodified ERC20.sol function   \u2514 decimals Public    NO\u2757\ufe0f Unmodified ERC20.sol function     Contract Risk Summary The first varying point presented above in the \u201ccontract logic summary\u201d section is not really a major risk factor. It\u2019s just a matter of working through how to best plug this into MCD oracles since, at the end of the day, rETH is deterministically tied to the ETH price (already fetched by oracles in the Maker protocol) and RocketPool\u2019s ETH/rETH supply at a given time. On the other hand, the second point raised is indeed a considerable risk factor. A malicious Guardian or an unsuccessful upgrade to the RocketPool protocol could route the latest RocketDepositPool network variable to a flawed contract. As the mint function only has this one check, the rETH supply could virtually be inflated indefinitely. Additionally, the protocol is fairly new to Mainnet (roughly 120 days) and most reviewed contracts (if not all) are still on version 1 within the network. Testnet info is not clear how thoroughly upgrades were tested and although high-quality audits are available, the protocol level of validation is yet to reach full maturity in production.  Supporting Materials  Audits   Consensys\u2019 in-depth audit.   Trail of Bit\u2019s audit report.    Files Description Table     File Name SHA-1 Hash     RocketTokenRETH.sol b9cea77bf1178201cc8e4b839016165d73740137   RocketBase.sol b0bda868dad3c7c43ad740b24a37e2cb4f52994f   RocketStorageInterface.sol 803f94de50c44b1c69e8541f90b2412f458ce23d   RocketDepositPoolInterface.sol a2198f3fdb9d02480aee055c19943514eae723dd   RocketNetworkBalancesInterface.sol 6c5d222ed8c08f8299cb2b1c356a84faca7c5308   RocketTokenRETHInterface.sol 974d99cde81f278052c7b21e731049abe07e7e50   RocketDAOProtocolSettingsNetworkInterface.sol 2b33337452370e48950e1a1c9fca591306a9b984     Contracts Description Table     Contract Type Bases       \u2514 Function Name Visibility Mutability Modifiers          RocketTokenRETH Implementation RocketBase, ERC20, RocketTokenRETHInterface     \u2514  Public    RocketBase ERC20   \u2514  External    NO\u2757\ufe0f   \u2514 getEthValue Public    NO\u2757\ufe0f   \u2514 getRethValue Public    NO\u2757\ufe0f   \u2514 getExchangeRate External    NO\u2757\ufe0f   \u2514 getTotalCollateral Public    NO\u2757\ufe0f   \u2514 getCollateralRate Public    NO\u2757\ufe0f   \u2514 depositExcess External    onlyLatestContract   \u2514 mint External    onlyLatestContract   \u2514 burn External    NO\u2757\ufe0f   \u2514 withdrawDepositCollateral Private       \u2514 depositExcessCollateral External    NO\u2757\ufe0f   \u2514 _beforeTokenTransfer Internal              RocketBase Implementation      \u2514  Public    NO\u2757\ufe0f   \u2514 getContractAddress Internal       \u2514 getContractAddressUnsafe Internal       \u2514 getContractName Internal       \u2514 getRevertMsg Internal       \u2514 getAddress Internal       \u2514 getUint Internal       \u2514 getString Internal       \u2514 getBytes Internal       \u2514 getBool Internal       \u2514 getInt Internal       \u2514 getBytes32 Internal       \u2514 setAddress Internal       \u2514 setUint Internal       \u2514 setString Internal       \u2514 setBytes Internal       \u2514 setBool Internal       \u2514 setInt Internal       \u2514 setBytes32 Internal       \u2514 deleteAddress Internal       \u2514 deleteUint Internal       \u2514 deleteString Internal       \u2514 deleteBytes Internal       \u2514 deleteBool Internal       \u2514 deleteInt Internal       \u2514 deleteBytes32 Internal       \u2514 addUint Internal       \u2514 subUint Internal              RocketStorageInterface Interface      \u2514 getDeployedStatus External    NO\u2757\ufe0f   \u2514 getGuardian External    NO\u2757\ufe0f   \u2514 setGuardian External    NO\u2757\ufe0f   \u2514 confirmGuardian External    NO\u2757\ufe0f   \u2514 getAddress External    NO\u2757\ufe0f   \u2514 getUint External    NO\u2757\ufe0f   \u2514 getString External    NO\u2757\ufe0f   \u2514 getBytes External    NO\u2757\ufe0f   \u2514 getBool External    NO\u2757\ufe0f   \u2514 getInt External    NO\u2757\ufe0f   \u2514 getBytes32 External    NO\u2757\ufe0f   \u2514 setAddress External    NO\u2757\ufe0f   \u2514 setUint External    NO\u2757\ufe0f   \u2514 setString External    NO\u2757\ufe0f   \u2514 setBytes External    NO\u2757\ufe0f   \u2514 setBool External    NO\u2757\ufe0f   \u2514 setInt External    NO\u2757\ufe0f   \u2514 setBytes32 External    NO\u2757\ufe0f   \u2514 deleteAddress External    NO\u2757\ufe0f   \u2514 deleteUint External    NO\u2757\ufe0f   \u2514 deleteString External    NO\u2757\ufe0f   \u2514 deleteBytes External    NO\u2757\ufe0f   \u2514 deleteBool External    NO\u2757\ufe0f   \u2514 deleteInt External    NO\u2757\ufe0f   \u2514 deleteBytes32 External    NO\u2757\ufe0f   \u2514 addUint External    NO\u2757\ufe0f   \u2514 subUint External    NO\u2757\ufe0f   \u2514 getNodeWithdrawalAddress External    NO\u2757\ufe0f   \u2514 getNodePendingWithdrawalAddress External    NO\u2757\ufe0f   \u2514 setWithdrawalAddress External    NO\u2757\ufe0f   \u2514 confirmWithdrawalAddress External    NO\u2757\ufe0f          RocketDepositPoolInterface Interface      \u2514 getBalance External    NO\u2757\ufe0f   \u2514 getExcessBalance External    NO\u2757\ufe0f   \u2514 deposit External    NO\u2757\ufe0f   \u2514 recycleDissolvedDeposit External    NO\u2757\ufe0f   \u2514 recycleExcessCollateral External    NO\u2757\ufe0f   \u2514 recycleLiquidatedStake External    NO\u2757\ufe0f   \u2514 assignDeposits External    NO\u2757\ufe0f   \u2514 withdrawExcessBalance External    NO\u2757\ufe0f   \u2514 getUserLastDepositBlock External    NO\u2757\ufe0f          RocketNetworkBalancesInterface Interface      \u2514 getBalancesBlock External    NO\u2757\ufe0f   \u2514 getLatestReportableBlock External    NO\u2757\ufe0f   \u2514 getTotalETHBalance External    NO\u2757\ufe0f   \u2514 getStakingETHBalance External    NO\u2757\ufe0f   \u2514 getTotalRETHSupply External    NO\u2757\ufe0f   \u2514 getETHUtilizationRate External    NO\u2757\ufe0f   \u2514 submitBalances External    NO\u2757\ufe0f   \u2514 executeUpdateBalances External    NO\u2757\ufe0f          RocketTokenRETHInterface Interface IERC20     \u2514 getEthValue External    NO\u2757\ufe0f   \u2514 getRethValue External    NO\u2757\ufe0f   \u2514 getExchangeRate External    NO\u2757\ufe0f   \u2514 getTotalCollateral External    NO\u2757\ufe0f   \u2514 getCollateralRate External    NO\u2757\ufe0f   \u2514 depositExcess External    NO\u2757\ufe0f   \u2514 depositExcessCollateral External    NO\u2757\ufe0f   \u2514 mint External    NO\u2757\ufe0f   \u2514 burn External    NO\u2757\ufe0f          RocketDAOProtocolSettingsNetworkInterface Interface      \u2514 getNodeConsensusThreshold External    NO\u2757\ufe0f   \u2514 getSubmitBalancesEnabled External    NO\u2757\ufe0f   \u2514 getSubmitBalancesFrequency External    NO\u2757\ufe0f   \u2514 getSubmitPricesEnabled External    NO\u2757\ufe0f   \u2514 getSubmitPricesFrequency External    NO\u2757\ufe0f   \u2514 getMinimumNodeFee External    NO\u2757\ufe0f   \u2514 getTargetNodeFee External    NO\u2757\ufe0f   \u2514 getMaximumNodeFee External    NO\u2757\ufe0f   \u2514 getNodeFeeDemandRange External    NO\u2757\ufe0f   \u2514 getTargetRethCollateralRate External    NO\u2757\ufe0f   \u2514 getRethDepositDelay External    NO\u2757\ufe0f     Legend     Symbol Meaning      Function can modify state    Function is payable     Contracts Inheritance Diagram  Screen Shot 2022-01-27 at 12.27.182192\u00d7282 81.2 KB   Contracts Call Graph  Screen Shot 2022-01-27 at 12.27.481506\u00d71426 133 KB  ",
                    "links": [
                        "https://etherscan.io/address/0x4D05E3d48a938db4b7a9A59A802D5b45011BDe58",
                        "https://etherscan.io/address/0x1d8f8f00cfa6758d7bE78336684788Fb0ee0Fa46",
                        "https://forum.makerdao.com/t/reth-mip6-collateral-application/6881",
                        "https://stake.rocketpool.net/",
                        "https://github.com/rocket-pool/rocketpool",
                        "https://testnet.rocketpool.net",
                        "https://goerli.etherscan.io/address/0x178E141a0E3b34152f73Ff610437A7bf9B83267A",
                        "https://goerli.etherscan.io/address/0x923Ed282Cda8952910B71B5efcA7CDa09e39c633",
                        "https://goerli.etherscan.io/address/0xd8Cd47263414aFEca62d6e2a3917d6600abDceB3",
                        "https://etherscan.io/address/0x3bdc69c4e5e13e52a65f5583c23efb9636b469d6",
                        "https://etherscan.io/address/0x4d05e3d48a938db4b7a9a59a802d5b45011bde58",
                        "https://etherscan.io/address/0x3bdc69c4e5e13e52a65f5583c23efb9636b469d6",
                        "https://etherscan.io/address/0x0ccf14983364a7735d369879603930afe10df21e",
                        "https://consensys.net/diligence/audits/2021/04/rocketpool/#system-overview",
                        "https://github.com/trailofbits/publications/blob/master/reviews/RocketPool.pdf",
                        "https://forum.makerdao.com/t/collateral-status-index/2231",
                        "https://forum.makerdao.com/t/risk-core-unit-month-in-review-july-2022/16931",
                        "https://forum.makerdao.com/t/reth-collateral-onboarding-risk-evaluation-update/18071",
                        "https://forum.makerdao.com/t/reth-actualizacion-de-la-evaluacion-del-riesgo-de-incorporacion-de-garantias-traduccion/18083",
                        "https://forum.makerdao.com/t/relay-semanal-7-13-de-junio-2022/15897",
                        "https://forum.makerdao.com/t/reth-collateral-onboarding-risk-evaluation/15286",
                        "https://forum.makerdao.com/t/weekly-relay-june-7-13-2022/15818",
                        "https://forum.makerdao.com/t/protocol-engineering-month-in-review-january-2022/13202"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.2020701227567425
                },
                {
                    "author_link": "https://forum.makerdao.com/u/flipflopflapdelegate",
                    "index": "#2",
                    "likes": "2",
                    "time": "28/01/2022-01:45:58",
                    "content": "Thanks man\u2014nice work\u2014volume seems stagnant ($194,000) with only $3.9M available liquidity via Uniswap. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/system",
                    "index": "#3",
                    "likes": "0",
                    "time": "28/04/2022-01:46:55",
                    "content": "This topic was automatically closed 90 days after the last reply. New replies are no longer allowed. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0606060606060606
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Patrick_J",
                    "index": "#4",
                    "likes": "0",
                    "time": "10/08/2022-12:55:05",
                    "content": "",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/amusingaxl",
                    "index": "#5",
                    "likes": "8",
                    "time": "11/08/2022-19:50:39",
                    "content": "Hello Maker Community. It\u2019s been a while, so @collateral-core-unit has been working on an update to the original rETH assessment. Please feel free to reach out to us if you have any further questions.   rETH Assesment Update  TL;DR  CES is adding some clarifications regarding the original assessment. The audit by Sigma Prime for the current version of the RocketPool protocol was not mentioned in the original assessment. There is a major upgrade to the RocketPool protocol \u2013 named Redstone \u2013 expected to happen by 2022-08-29. Audit reports for Redstone have not been published yet. CES recommends that rETH onboarding should be put on hold until the upgrade is completed successfully , and the audit reports are released to the public.   Original Assessment Amendments  RocketPool Architecture RocketPool contracts do not implement any well known upgradeability patterns (i.e.: EIP-1822, EIP-1967, EIP-2535), instead they use something resembling the Service Locator Pattern[1][2]. The Service Locator takes form of the RocketStorage contract, which is not upgradeable:  The central hub of the network is the RocketStorage contract, which is responsible for storing the state of the entire protocol. This is implemented through the use of maps for key-value storage, and getter and setter methods for reading and writing values for a key. - RocketPool docs  All other contracts have a reference to RocketStorage. The base contract is named RocketBase and implements some modifiers that help to ensure that only the current contracts in RocketStorage can call some permissioned functions. Given the dynamic nature of the RocketStorage, any updates to it must be done atomically, otherwise the protocol can end up having orchestration issues (i.e: new contracts calling old contracts or vice-versa). This requires that upgrades have to be coded into smart contracts (example), which is similar to how MakerDAO deals with changes through executive spells. As of 2022-08-04T22:25:13Z the RocketPool Protocol on Ethereum Mainnet is composed of the following contracts:  See More {   \"rocketStorage\": \"0x1d8f8f00cfa6758d7bE78336684788Fb0ee0Fa46\",   \"rocketVault\": \"0x3bDC69C4E5e13E52A65f5583c23EFB9636b469d6\",   \"rocketAuctionManager\": \"0x1a2F00D187C9388fDa3Bf2dc46a6b4740849EcCE\",   \"rocketDepositPool\": \"0x4D05E3d48a938db4b7a9A59A802D5b45011BDe58\",   \"rocketMinipoolManager\": \"0x6293B8abC1F36aFB22406Be5f96D893072A8cF3a\",   \"rocketMinipoolQueue\": \"0x5870dA524635D1310Dc0e6F256Ce331012C9C19E\",   \"rocketMinipoolStatus\": \"0xa52451b9d25EEf02BE42B3A8161A18f947F8A6a5\",   \"rocketMinipoolPenalty\": \"0xE64AC47b6e2FEcfCDEA35147Fe61af9894A06ba6\",   \"rocketNetworkBalances\": \"0x138313f102cE9a0662F826fCA977E3ab4D6e5539\",   \"rocketNetworkFees\": \"0x0a882C9059Cc2E97c860b80018C27145884D694b\",   \"rocketNetworkPrices\": \"0xd3f500F550F46e504A4D2153127B47e007e11166\",   \"rocketNetworkWithdrawal\": \"0x0000000000000000000000000000000000000000\",   \"rocketRewardsPool\": \"0xA3a18348e6E2d3897B6f2671bb8c120e36554802\",   \"rocketClaimDAO\": \"0x428f0de7a6BF5EcCa29e1c5E8C407B21E8bECD39\",   \"rocketClaimNode\": \"0x899336A2a86053705E65dB61f52C686dcFaeF548\",   \"rocketClaimTrustedNode\": \"0x6af730deB0463b432433318dC8002C0A4e9315e8\",   \"rocketNodeDeposit\": \"0xDCD51fc5Cd918e0461B9B7Fb75967fDfD10DAe2f\",   \"rocketNodeManager\": \"0x4477Fbf4Af5b34E49662d9217681a763dDc0a322\",   \"rocketNodeStaking\": \"0x3019227b2b8493e45Bf5d25302139c9a2713BF15\",   \"rocketDAOProposal\": \"0x37714D3a9D3b3091220D68184e3AFEC4Ec911368\",   \"rocketDAONodeTrusted\": \"0xb8e783882b11Ff4f6Cef3C501EA0f4b960152cc9\",   \"rocketDAONodeTrustedProposals\": \"0xb0ec3F657ef43A615aB480FA8D5A53BF2c2f05d5\",   \"rocketDAONodeTrustedActions\": \"0x5b9B2494060138470a2b834f6003c0343a585349\",   \"rocketDAONodeTrustedUpgrade\": \"0x952999Ec97248547D810Fd6464fDb78855b022aB\",   \"rocketDAONodeTrustedSettingsMembers\": \"0xdA1AB39e62E0A5297AF44C7064E501b0613f0D01\",   \"rocketDAONodeTrustedSettingsProposals\": \"0xAD038f8994a6bd51C8A72D3721CEd83401D4d2b0\",   \"rocketDAONodeTrustedSettingsMinipool\": \"0xA29b42BbD19B76aB092BCc3C20370887bBfd9095\",   \"rocketDAOProtocol\": \"0x0429Cdd8cEACe24d4dC2B97Ce22A780a407dF0e1\",   \"rocketDAOProtocolProposals\": \"0x42EC642eAa86091059569d8De8aeccf7F2F9B1a2\",   \"rocketDAOProtocolActions\": \"0xB50d513de40eE70A662c39207b4382a693f9e08D\",   \"rocketDAOProtocolSettingsInflation\": \"0xEDD568281929a9a276F4cBEd80DEB208f11Ba3Bb\",   \"rocketDAOProtocolSettingsRewards\": \"0xCDb681AF33C60f4D659d12E309b6C57fA4A97673\",   \"rocketDAOProtocolSettingsAuction\": \"0x87c41E0a44826745b398071025e306Ce03bebeCf\",   \"rocketDAOProtocolSettingsNode\": \"0xc82D37221940b6E594d6D26D2c5aF775c3F1f437\",   \"rocketDAOProtocolSettingsNetwork\": \"0xc1B6057e8232fB509Fc60F9e9297e11E59D4A189\",   \"rocketDAOProtocolSettingsDeposit\": \"0x781693a15E1fA7c743A299f4F0242cdF5489A0D9\",   \"rocketDAOProtocolSettingsMinipool\": \"0x030aEa8378Cc131674D6D655cA26B5A3ef4C63da\",   \"rocketTokenRETH\": \"0xae78736Cd615f374D3085123A210448E74Fc6393\",   \"rocketTokenRPL\": \"0xD33526068D116cE69F19A9ee46F0bd304F21A51f\",   \"addressQueueStorage\": \"0x44E31944E1A6F3b8F805E105B130F8bdb7E2EBd8\",   \"addressSetStorage\": \"0xD4ae2511dF21F367792bA4D67c6eb032171c6a16\" }    Contract upgrades From the original assessment:  [The RocketDepositPool contract] can be easily upgraded by moving tokens at the time to RocketVault[\u2026]  From a RocketPool community member:  Tokens are generally in RocketVault, nothing needs to be moved to upgrade.  As it can be seen from the current RocketDepositPool contract page on Etherscan, it does not hold any balance:  screenshot-2022-08-09T21:25:05Z1377\u00d7743 92 KB  Screenshot taken at 2022-08-09T21:25:05Z Regarding the RocketVault contract, it currently holds a significant share of the available RPL supply (~35\\%) and some ETH:  screenshot-2022-08-09T21:32:04Z700\u00d7819 71 KB  Screenshot taken at 2022-08-09T21:32:04Z  screenshot-2022-08-09T21:36:20Z1396\u00d7935 131 KB  Screenshot taken at 2022-08-09T21:36:20Z  _beforeTokenTransfer on rETH  From the original assessment:  This is called by the base ERC20 contract before all transfer, mint, and burns to ensure there are no multiple deposits on the same block from the same address (mandated by network.reth.deposit.delay)  From a RocketPool community member:  This is not correct. Multiple deposits on same block from same address are not prevented. The check implements a ~24h delay on token transfer after minting. The lock will be removed with Redstone [next RocketPool upgrade].  The _beforeTokenTransfer() function works roughly like this:  1 - Get the user.deposit.block{from} from RocketStorage as lastDepositBlock  2a - If this value is different from 0:  2a.1 - Get the dao.protocol.setting.networknetwork.reth.deposit.delay value from RocketStorage as depositDelay  2a.2a - If block.number - lastDepositBlock > depositDelay then:  2a.2a.1 - Remove user.deposit.block{from} from RocketStorage  2a.2a.2 - Return void    2a.2b - Otherwise, revert.   2b - Return void.  The user.deposit.block{from} variable is set in the deposit() function from RocketDepositPool. The implication is that every new deposit made in to the pool by the same wallet address makes any rETH token transfers unavailable for that wallet for depositDelay blocks, even for tokens that were already available in the wallet before the latest deposit. As of 2022-08-09T15:08:07Z the value for depositDelay was 5760 blocks, which translates roughly to 24 hours. From the original assessment:   Does transfer have simple semantics? Yes, inherited from OpenZeppelin\u2019s ERC20.sol. Does transferFrom have simple semantics? Yes, inherited from OpenZeppelin\u2019s ERC20.sol   Taking into consideration the behavior of _beforeTokenTransfer described above and the fact that it is called by both transfer and transferFrom methods in OpenZeppelin\u2019s ERC20.sol (see @openzeppelin/contracts/token/ERC20/ERC20.sol#L231), we need to rectify the answers above:  Does transfer have simple semantics? No, because _beforeTokenTransfer can block the transfer. Does transferFrom have simple semantics? No, because _beforeTokenTransfer can block the transfer.  However, in practice the timelock would not affect rETH that would be locked into MCD, because the original owner will only be able to move it after depositDelay has passed. Since MCD would never call RocketDepositPool.deposit(), such timelock would not be created again. NOTICE: The next RocketPool upgrade will change this mechanism. You can read more about it in the next section.  Expected upgrades     Description ETA     Redstone 2022-08-29     Changes in Redstone WARNING: Comments in the following section below were written taking the latest information publicly available as of 2022-08-09T15:28:55Z into consideration. RocketPool contracts are still suitable to change until they are deployed to Mainnet. RocketPool\u2019s original post about the Redstone upgrade can be found here.  Remove the timelock after deposit  The original article stated the following:  With Redstone however, this 24hr lock has now been removed, instead when you trade rETH for ETH, a single day worth of rewards subtracted from the total trade amount which prevents sandwiching attacks.  However, during the analysis performed by CES, we found out that the fee is actually deducted from the amount of rETH minted when the RocketDepositPool.deposit() function is called, so it is actually the opposite: when you trade ETH for rETH. CES reached out to the RocketPool team, and they have confirmed that our understanding is correct. However, no changes to the article have been made as of this writing.  The timelock will be removed in 2 steps:  Set depositDelay to 0 The new RocketDepositPool contract no longer to set user.deposit.block{from} in RocketStorage when deposit() is called.  The reason this timelock ever existed was to prevent sandwiching attacks on the RocketPool protocol. Redstone brings a new strategy to mitigate this problem by introducing a small deposit fee, currently set to 0.05\\% \u2013 approximately 1 day worth of rewards if the APR is at 18.25\\% per year (356 * 0.05\\% = 18.25\\%). This means that an effective sandwich attack would only be profitable if rETH price is adjusted at a rate faster than 0.05\\% per day (excluding gas fees), which seems very unlikely. Such deposit fee can be changed through a formal proposal by RocketPool governance. This change effectively disables the _beforeTokenTransfer hook on ERC20. Regarding the interaction with MCD, in theory rETH transfers would still have non-simple semantics, since the RocketTokenRETH contract will not be upgraded this time. However, in practice they will work as simple ERC20 transfers because of the current settings. To reintroduce a lock after Redstone, it would require both another upgrade of the deposit pool and a settings change.  Other changes The remaining changes introduced by Redstone do not seem technically relevant to the integration with MCD, however they are briefly described below:   Priority Fee Distributor: after The Merge, the consensus mechanism on the Ethereum network will effectively change to PoS. This means that block validators will start to receive the priority fees for any blocks they produce.  Those fees now need to be distributed among the node operator and rETH users the same way as Beacon Chain rewards do now.  New Reward System: currently any unclaimed RPL rewards are automatically forfeited after 28 days. The new reward system brings up to 40x gas cost savings and rewards have no expiration.  Smoothing Pool: a new opt-in feature which allows participants to eliminate randomness in rewards. By using this new feature, node operators can collectively get a more or less constant rewards. If any of the nodes in the smoothing pool is selected to be a validator, the rewards + priority fees will be proportionally among all participants in the pool.   Unchanged components An important clarification is that the rETH token contract RocketTokenRETH.sol will not be directly modified in Redstone.  New Stats     Metric Value As of     Total Supply 101,749.646547560714629034 2022-08-09T20:03:38Z   Fully Diluted Market Cap USD 175,170,156.50  2022-08-09T20:03:38Z     Audits   Sigma Prime Audit \u2013 valid for the current version. Redstone audits yet to be released.   Conclusion Redstone brings some significant changes. While they have little impact on the technical side of onboarding rETH, they can still affect the RocketPool protocol in unexpected ways. Given that the audits for such upgrade have not been published yet, CES recommends that the onboarding of rETH should be put on hold until Redstone is live, and the audits are released. Currently, CES expects to circle back on this matter by mid-September. If the upgrade is successfull and depending on the result of the audits, the onboarding can be put through the following executive vote. Now that the audit reports have been published, CES will analyze them. We still recommend waiting to onboard rETH once Redstone is deployed and is running flawlessly. We acknowledge this can be a bit frustrating for the RocketPool community, which has been patiently waiting for the onboarding of rETH, however we are opting to play safe in this matter, because changes in a large protocol such as RocketPool can bring a lot of uncertainty. ",
                    "links": [
                        "https://medium.com/rocket-pool/rocket-pool-the-merge-redstone-601d9efd6b4",
                        "https://martinfowler.com/articles/injection.html#UsingAServiceLocator",
                        "https://stackify.com/service-locator-pattern/",
                        "https://docs.rocketpool.net/developers/usage/contracts/contracts.html#contract-design",
                        "https://github.com/rocket-pool/rocketpool/blob/c7fa2faa75c763c9e06b198c66285c63f4d8ced5/contracts/contract/RocketBase.sol#L24-L62",
                        "https://github.com/rocket-pool/rocketpool/blob/b7080e9461d0aa95f7c66cc2c70bba712c5fd191/contracts/contract/upgrade/RocketUpgradeOneDotOne.sol",
                        "https://etherscan.io/address/0x4D05E3d48a938db4b7a9A59A802D5b45011BDe58",
                        "https://github.com/rocket-pool/rocketpool/blob/c7fa2faa75c763c9e06b198c66285c63f4d8ced5/contracts/contract/token/RocketTokenRETH.sol#L157-L172",
                        "https://github.com/rocket-pool/rocketpool/blob/c7fa2faa75c763c9e06b198c66285c63f4d8ced5/contracts/contract/deposit/RocketDepositPool.sol#L81",
                        "https://etherscan.deth.net/token/0xae78736cd615f374d3085123a210448e74fc6393#code",
                        "https://medium.com/rocket-pool/rocket-pool-the-merge-redstone-601d9efd6b4",
                        "https://medium.com/rocket-pool/rocket-pool-the-merge-redstone-601d9efd6b4",
                        "https://medium.com/rocket-pool/rocket-pool-the-merge-redstone-601d9efd6b4",
                        "https://github.com/rocket-pool/rocketpool/blob/b7080e9461d0aa95f7c66cc2c70bba712c5fd191/contracts/contract/upgrade/RocketUpgradeOneDotOne.sol#L169",
                        "https://github.com/rocket-pool/rocketpool/blob/b7080e9461d0aa95f7c66cc2c70bba712c5fd191/contracts/contract/deposit/RocketDepositPool.sol",
                        "https://github.com/rocket-pool/rocketpool/blob/b7080e9461d0aa95f7c66cc2c70bba712c5fd191/contracts/contract/deposit/RocketDepositPool.sol#L81-L86",
                        "https://github.com/rocket-pool/rocketpool/blob/b7080e9461d0aa95f7c66cc2c70bba712c5fd191/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsDeposit.sol#L24",
                        "https://rocketpool.net/files/sigma-prime-audit.pdf",
                        "https://forum.makerdao.com/t/reth-collateral-onboarding-risk-evaluation-update/18071",
                        "https://forum.makerdao.com/t/ces-july-and-august-2022-update/17817",
                        "https://forum.makerdao.com/t/reth-actualizacion-de-la-evaluacion-del-riesgo-de-incorporacion-de-garantias-traduccion/18083",
                        "https://forum.makerdao.com/t/weekly-makerdao-recap/16382/16"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.532759914816366
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Jasper_ETH",
                    "index": "#6",
                    "likes": "3",
                    "time": "12/08/2022-00:55:50",
                    "content": "Redstone audit results are in, & the full documentation is now available on the Rocket Pool website at the following links: ConsenSys: https://rocketpool.net/files/consensys-audit-redstone.pdf Sigma Prime: https://rocketpool.net/files/sigma-prime-audit-redstone.pdf ",
                    "links": [
                        "https://rocketpool.net/files/sigma-prime-audit-redstone.pdf"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://forum.makerdao.com/u/knoshua",
                    "index": "#7",
                    "likes": "2",
                    "time": "12/08/2022-08:29:23",
                    "content": "Thank you for the thorough and well researched assessment.     amusingaxl:  From the RocketPool team:  Tokens are generally in RocketVault, nothing needs to be moved to upgrade.        amusingaxl:  From the RocketPool team:  This is not correct. Multiple deposits on same block from same address are not prevented. The check implements a ~24h delay on token transfer after minting. The lock will be removed with Redstone [next RocketPool upgrade].    Just a quick clarification: These are my statements. I am not part of rocket pool team, just a third party that was trying to help with this report and getting rETH integrated into Maker. Sorry if I gave a false impression. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.712962962962963
                },
                {
                    "author_link": "https://forum.makerdao.com/u/amusingaxl",
                    "index": "#8",
                    "likes": "1",
                    "time": "12/08/2022-18:32:44",
                    "content": "Oh, my bad here. I should have double-checked before posting. I\u2019ll amend the post. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 1.5000000000000009
                }
            ]
        }
    ]
}