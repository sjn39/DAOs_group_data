{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-4974-ratings/8805",
            "title": "EIP-4974: Ratings ",
            "index": 8805,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "1",
                    "likes": "6",
                    "time": "02/04/2022-17:02:54",
                    "content": "Traditionally, blockchain applications have focused on buying and selling digital assets. However, the asset-centric model has often been detrimental to community-based blockchain projects, as seen in the pay-to-play dynamics of many EVM-based games and DAOs in 2021. EIP-4947 addresses this issue by allowing ratings to be assigned to contracts and wallets, providing a new composable primitive for blockchain applications. This thread, begun in April 2022, has led to much evolution of the EIP. Please refer to the latest version  under review located here:  ERC-4974: Ratings ",
                    "links": [
                        "https://ethereum-magicians.org/t/welcome-please-readme-first/8/11",
                        "https://ethereum-magicians.org/t/ens-bounded-non-transferable-nfts/9217",
                        "https://ethereum-magicians.org/t/the-big-introduce-yourself-thread/75/101",
                        "https://ethereum-magicians.org/t/naming-conventions/8860"
                    ],
                    "GPT-summary": "The post introduces EIP-4974, which proposes a new composable primitive for blockchain applications by allowing ratings to be assigned to contracts and wallets. The author explains how this proposal addresses the issue of pay-to-play dynamics in community-based blockchain projects. The post also mentions that the proposal has evolved since its inception in April 2022 and provides a link to the latest version under review. The post invites feedback and questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Community and engagement",
                        "Token economics",
                        "Privacy, Security and risk management",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 6.113636363636363
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "2",
                    "likes": "3",
                    "time": "02/04/2022-22:58:01",
                    "content": "I do not see any need to standardize the use case of implementing ERC-20 (or ERC-1155 or ERC-777) with /less/ features than the full specification. This exact kind of proposal has been put forth several times before relating to non-transferrable ERC-721 \u201cbadges\u201d, all revoked or expired.  This should be encouraging news! It means you are cleared for takeoff and everything is ready for you to go ahead and implement. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None",
                        "None"
                    ],
                    "Sentiment": 6.4
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "3",
                    "likes": "2",
                    "time": "03/04/2022-17:47:08",
                    "content": "Edit:  Removing an outdated draft of the EIP, but leaving the references to external discussions here.  References Issues & Discussions   EIP-EXP discussion thread, Ethereum Magicians, begun April 2022.  \u201cSoulbound\u201d, Vitalik Buterin, published January 2022.  EIP-1238, \u201cNon-transferrable Non-Fungible Tokens\u201d, GitHub issue opened July 2018.  EIP-4671, \u201cNon-Tradable Token Standard\u201d, draft status as of April 2022.  EIP-4671 discussion thread, Ethereum Magicians, begun January 2022.  ",
                    "links": [
                        "https://vitalik.ca/general/2022/01/26/soulbound.html",
                        "https://github.com/ethereum/EIPs/issues/1238",
                        "https://github.com/ethereum/EIPs/issues/4671",
                        "https://ethereum-magicians.org/t/eip-4671-non-tradable-token/7976/35"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 3.9999999999999996
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "4",
                    "likes": "0",
                    "time": "03/04/2022-17:56:12",
                    "content": "Thanks for the feedback @fulldecent! I\u2019ve gone ahead with a full draft and implementation example. Here\u2019s the PR:  github.com/ethereum/EIPs         EIP Draft: Fungible Non-tradable Tokens, or EXP   ethereum:master \u2190 dtedesco1:master            opened 11:11AM - 05 Apr 22 UTC               dtedesco1             +456 -0       A need exists for fungible tokens that indicate reputation in a community, rathe\u2026r than serve as tradable assets. Lack of such assets contributes to destructive pay-to-play dynamics in today's DAOs and blockchain games. Vitalik Buterin writes [\"ad nauseum\"](https://vitalik.ca/general/2022/01/26/soulbound.html) (his words) about this problem. EIP-888 seeks solutions via a token standard similar to EXP in games or Reddit Karma.  Existing proposals and discussions for non-tradable token standards (namely, [EIP-4671](https://github.com/OmarAflak/EIPs/blob/7e3a3c68d4fb1a19d4d1e4838381ffcd9668e0ff/EIPS/eip-4671.md) and [EIP-1238](https://github.com/ethereum/EIPs/issues/1238)) have been reviewed deeply. Both are optimizing for credentials or badges, which are very different use cases from EXP.   For more background information, please view the [discussion on Ethereum Magicians here](https://ethereum-magicians.org/t/8805) and [initial PR](https://github.com/ethereum/EIPs/pull/4968).       ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/4974",
                        "https://github.com/dtedesco1",
                        "https://github.com/ethereum/EIPs/pull/4974/files",
                        "https://github.com/ethereum/EIPs/pull/4974"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "5",
                    "likes": "1",
                    "time": "07/04/2022-20:07:15",
                    "content": "Why specify the mint function at all? Other token standards seem to leave it unspecified how tokens are created. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "6",
                    "likes": "0",
                    "time": "08/04/2022-01:53:28",
                    "content": " Summary @SamWilsn There\u2019s a bit of discussion on this in the PR. Essentially, we\u2019re questioning how much new terminology needs to be introduced, particularly for token transfers and approval/participation. I\u2019m on the fence about it.   @wschwab suggested using burn and moving away from approve.  @zhongeric and I then went a few extra steps to describe mint and burn, as they are more intuitive. I created reallocate and participate. The Transfer event is still aligned with other tokens.  (See below for side-by-side comparisons.)  Transfer The first iteration implemented transfer for minting and transferFrom for reallocating and burning. I was trying to align with ERC-20 and ERC-721. Here\u2019s the previous definition: `     /// @notice Transfers EXP from zero address to a participant.     /// @dev MUST throw unless msg.sender is operator.     ///  MUST throw unless _to address is participating.     function transfer(address _to, uint256 _amount) external;      /// @notice Reallocates EXP from one address to another, or burns to zero address.     /// @dev MUST throw unless msg.sender is operator.     ///  MUST throw unless _to address is participating.     ///  MAY throw if _from address is NOT participating.     function transferFrom(address _from, address _to, uint256 _amount) external;  And the mint, burn, allocate iteration: `     /// @notice Mints EXP from zero address to a participant.     /// @dev MUST throw unless `msg.sender` is `operator`.     ///  MUST throw unless `to` address is participating.     ///  MUST emit a `Transfer` event.     /// @param _to Address to receive the new tokens.     /// @param _amount Total EXP tokens to create.     function mint(address _to, uint256 _amount) external;      /// @notice Burns EXP from participant to the zero address.     /// @dev MUST throw unless `msg.sender` is `operator`.     ///  MUST emit a `Transfer` event.     ///  MAY throw if `from` address is NOT participating.     /// @param _from Address from which to destroy EXP tokens.     /// @param _amount Total EXP tokens to destroy.     function burn(address _from, uint256 _amount) external;      /// @notice Transfer EXP from one address to another.     /// @dev MUST throw unless `msg.sender` is `operator`.     ///  MUST throw unless `to` address is participating.     ///  MUST throw if either or both of `to` and `from` are the zero address.      ///  MAY throw if `from` address is NOT participating.     /// @param _from Address from which to reallocate EXP tokens.     /// @param _to Address to which EXP tokens at `from` address will transfer.     /// @param _amount Total EXP tokens to reallocate.     function reallocate(address _from, address _to, uint256 _amount) external;   Participation This is a similar issue to using the language of \u201capproval\u201d versus \u201cparticipation\u201d, here\u2019s a definition that would be aligned with ERC-721:     /// @dev This emits when operator is enabled or disabled for a participant.     ///  The operator can manage all EXP of the participant.     event ApprovalForAll(address indexed _participant, address indexed _operator, bool _approved);      /// @notice Activate or deactivate participation.     /// @dev MUST throw unless msg.sender is _participant.     ///  MUST throw if _participant is _operator or zero address.     ///  MUST emit a `Participation` event.     /// @param _participant Address opting in or out of participation.     /// @param _participation Approval status of _participant.     function approveForAll(address _participant, bool _approved) external;  And the \u201cparticipation\u201d iteration:     /// Emits when an address activates or deactivates its participation.     /// @dev MUST emit whenever participation status changes.     ///  `Transfer` events SHOULD NOT reset participation.     event Participation(address indexed _participant, bool _participation);      /// @notice Activate or deactivate participation.     /// @dev MUST throw unless `msg.sender` is `participant`.     ///  MUST throw if `participant` is `operator` or zero address.     ///  MUST emit a `Participation` event.     /// @param _participant Address opting in or out of participation.     /// @param _participation Participation status of _participant.     function setParticipation(address _participant, bool _participation) external;   My Perspective There are several reasons to be for or against this new terminology:  Good \u2013 More intuitive for EXP use cases, and perhaps more intuitive generally. Bad \u2013 Less aligned with existing token standards. Bad \u2013 Introduces new names.  My gut says EXP use cases are not sufficiently different to require new naming conventions, but I\u2019m open to being convinced and will somewhat accede to folks who have a longer history with the ETH ecosystem. ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/4974#discussion_r842952552",
                        "https://github.com/ethereum/EIPs/pull/4974#discussion_r842949155",
                        "https://github.com/ethereum/EIPs/pull/4974#discussion_r843389428"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0889099326599325
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "7",
                    "likes": "0",
                    "time": "08/04/2022-02:17:47",
                    "content": "My previous message focuses on naming more than functionality. Are you suggesting that the standard should not assume an operator can mint tokens? This is a reasonable consideration. For instance, an implementation might allow EXP only to be transferred from other EXP contracts. The argument can extend to a burn function as well. Maybe transfer is all that\u2019s needed in a standard\u2013what\u2019s critical is that only the operator can use such a function. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 5.226851851851851
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "8",
                    "likes": "1",
                    "time": "08/04/2022-03:07:14",
                    "content": "    dtedesco1:  Are you suggesting that the standard should not assume an operator can mint tokens?   This exactly! mint and burn are probably going to be fairly unique per implementation of this standard. I think you can likely get by with the transfer events, and a balance getter. Do keep in mind that I\u2019ve only taken a cursory view of the standard, and I might entirely be wrong! ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.0390625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/zhongeric",
                    "index": "9",
                    "likes": "1",
                    "time": "08/04/2022-14:49:19",
                    "content": "Keeping only a privileged transfer function would definitely make this standard more general-purpose, creating an \u201cissuer-only\u201d controllable ERC721 standard. Then the EXP nomenclature can be dropped from this standard, just leaving it as \u201cNon-tradable NFTs\u201d, as this can easily be adopted to serve other use cases besides EXP: POAPs, loyalty / community cards, etc\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.505208333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "10",
                    "likes": "0",
                    "time": "09/04/2022-01:17:42",
                    "content": "Agreed that keeping the privileged transfer function is a good option. Non-tradable NFTs are a great concept, but I think it\u2019s important to retain fungibility in this standard. Unique metadata for each token would actually inhibit EXP-like use cases. Proposals I know of for non-fungible and non-tradable token standards:  EIP-4671 and EIP-1238. Both are optimizing for credentials or badges, which are very different use cases from EXP. ",
                    "links": [
                        "https://github.com/ethereum/EIPs/issues/1238"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "11",
                    "likes": "1",
                    "time": "09/04/2022-09:41:40",
                    "content": "After further discussion Magicians and others, I\u2019ve come to several conclusions about the participation and transfer nomenclature and functionality. I propose the following solutions to these issues for EIP-4974.  Participation instead of Approval  In common parlance across the blockchain ecosystem today, approval tends to refer to approval for trading. EXP tokens are non-tradable. Further, three particular differences from existing standards justify the need for a new concept:  Airdrops do not require approval in many standards today. EIP-4974 requires address to opt-in before receiving tokens. In standards such as ERC-721, it is required that setApprovalForAll \u201cMUST allow multiple operators per owner.\u201d EIP-4974 requires that only one operating address has control over a contracts token at any time. Many standards require complicated acceptance mechanisms to ensure the propriety of trades. As EIP-4974 does not allow trading, setting a single participation is sufficient.  In this case, we can use the following function to control how non-operating wallets engage with EXP contracts. ` /// @notice Activate or deactivate participation. CALLER IS RESPONSIBLE TO ///  UNDERSTAND THE TERMS OF THEIR PARTICIPATION. /// @dev MUST throw unless `msg.sender` is `participant`. ///  MUST throw if `participant` is `operator` or zero address. ///  MUST emit a `Participation` event for status changes. /// @param _participant Address opting in or out of participation. /// @param _participation Participation status of _participant. function setParticipation(address _participant, bool _participation) external;   One transfer function instead of many component ones We should not assume how mints or burns occur, or even if they occur. Those decisions are not core to the functionality of the standard, and may be unique across implementations. What makes EIP-4974 unique in terms of transfers is that only the operator can conduct transfers. Secondly, using only a transfer function also allows for clean alignment with other standards\u2019 transfer functions, such as those of ERC-20 and ERC-721. ` /// @notice Transfer EXP from one address to a participating address. /// @dev MUST throw unless `msg.sender` is `operator`. ///  MUST throw unless `to` address is participating. ///  MUST throw if `to` and `from` are the same address. ///  MUST emit a Transfer event with each successful call. ///  SHOULD throw if `amount` is zero. ///  MAY allow minting from zero address, burning to the zero address,  ///  transferring between accounts, and transferring between contracts. ///  MAY limit interaction with non-participating `from` addresses. /// @param _from Address from which to transfer EXP tokens. /// @param _to Address to which EXP tokens at `from` address will transfer. /// @param _amount Total EXP tokens to reallocate. function transfer(address _from, address _to, uint256 _amount) external;  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.463430386817484
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/zhongeric",
                    "index": "12",
                    "likes": "1",
                    "time": "09/04/2022-14:14:33",
                    "content": "    dtedesco1:  Proposals I know of for non-fungible and non-tradable token standards: EIP-4671 and EIP-1238. Both are optimizing for credentials or badges, which are very different use cases from EXP.   Got it, I missed the fact that this would be for fungible tokens. Are there other use cases for fungible non-tradable tokens besides EXP? Still iffy on whether or not EXP should be explicitly defined in the EIP name. New _transfer function looks great though! ",
                    "links": [
                        "https://github.com/ethereum/EIPs/issues/1238"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 6.264204545454546
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dadabit",
                    "index": "13",
                    "likes": "1",
                    "time": "09/04/2022-15:26:27",
                    "content": "I agree with @fulldecent , a token that cannot be transferred is not a token imho. The function transfer is the very essence of tokens. I\u2019d rather define a kudos interface completely unrelated to erc20 or tokens. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/carlosdp",
                    "index": "14",
                    "likes": "2",
                    "time": "09/04/2022-16:37:06",
                    "content": "Read through this spec, as I\u2019m thinking about this kind of token too! I think after reading the spec and all the comments and revisions, I agree with @fulldecent 's original take on this, though. I think a restricted ERC-20 is probably the best way to go about this. My main reasoning is it seems at this point that the only thing that is really added to the diff between this and ERC-20 (other than mint and burn, which I agree with an earlier commenter that it doesn\u2019t make sense to put that into the spec. Reason being its very likely specific EXP implementations would need different function arguments for those functions, for things like signatures. This is why it\u2019s not in any of the ERC-20 specs or extensions) is the concept of \u201cParticipation.\u201d While I think the intention is good, I don\u2019t think it will achieve what you intend. Assuming the intention is that people won\u2019t randomly be assigned some of these \u201cpoints\u201d without their consent, it\u2019s easy to follow this spec while still violating this property. For example, someone could write an implementation that emits the Participation event with true when a mint function is first called for the user, regardless of whether they actually participated. This kind of thing is ultimately always going to be up to the specific implementations of a token, and it\u2019s going to be up to the clients displaying info to end users to counter abuse (as it already is today with token filters and such). If someone wants to create this opt-in participation in being able to transfer ERC-20s, that\u2019s fine. But the design surface area for the variety of ways to do that is so large, I\u2019m not sure it makes sense to standardize that. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.0155677655677655
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "15",
                    "likes": "0",
                    "time": "10/04/2022-09:46:00",
                    "content": "Thanks! Beyond actual game experience point implementations, we\u2019ve thought of a few potential ones:  Reddit-like Karma DAO delegation of authority levels Loyalty points from a business Ratings for contenders in sports or other competitive leagues. Credit scores (Ugh that feels dystopian, but at least it\u2019d be more transparent and trustworthy than current credit scoring systems around the world\u2026) Kudos given for contributions of some sort, i.e. for volunteer hours at a nonprofit  @dadabit also brought up the EXP name question recently. I think experience points is a more vivid description than the others considered, but I\u2019m open to changing it. Happy to discuss dropping \u201ctoken\u201d language altogether, but at this point I think that\u2019s a bit extreme. The Kudos Standard? Or more verbose, The Experience Points Standard? More synonyms for \u201ckudos\u201d. From the latest rationale section of the EIP:  EXP Word Choice EXP, or experience points, are common parlance in the video game industry and generally known among modern internet users. Allocated EXP typically confers to strength and accumulates as one progresses in a game. This serves as a fair analogy to what we aim to achieve with ERC-4974 by encouraging members of a community to have more strength in that community the more they contribute. Alternatives Considered:  Soulbound Tokens, Soulbounds, Fungible Soulbound Tokens, Non-tradable Fungible Tokens, Non-transferrable Fungible Tokens, Karma Points, Reputation Tokens  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.55316091954023
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "16",
                    "likes": "0",
                    "time": "10/04/2022-10:20:16",
                    "content": "Thanks for this feedback. I\u2019m also agreed that mint and burn are not sensible here. You brought up two other major topics:  EIP-4974 versus existing token standards Participation is definitely critical, but from my understanding there are two core, unique components of the 4974:   Only the operator can transfer EXP. Other accounts have no ability to obtain or dispose of EXP. An account must set themselves as participating before any tokens can be received.  Implementing ERC-20 or ERC-721 to allow for these two components is simply not implementing ERC-20 or ERC-721. I think that\u2019s the crux of @fulldecent 's post above, but please correct me if I\u2019m wrong.  Potential loopholes We can\u2019t control if someone writes a smart contract claiming to follow a standard while quietly not following the standard, but you\u2019re right we should be clear in the spec about what clients should expect and test for.     carlosdp:  someone could write an implementation that emits the Participation event with true when a mint function is first called for the user, regardless of whether they actually participated   Thanks for pointing this out. Simply emitting a Participation event in this way shouldn\u2019t have any impact on the operator\u2019s ability to transfer to an address, but it would certainly be confusing. I\u2019ll add a clause to make this explicit for each of the events, like so for Participation:  /// This event MUST ONLY be emitted by setParticipation.  I\u2019m keen to examine more examples like this. Do you see any other logical holes for implementers to abuse the spec? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.298611111111111
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/carlosdp",
                    "index": "17",
                    "likes": "1",
                    "time": "10/04/2022-15:00:39",
                    "content": "    dtedesco1:  Participation is definitely critical, but from my understanding there are two core, unique components of the 4974:   Only the operator can transfer EXP. Other accounts have no ability to obtain or dispose of EXP. An account must set themselves as participating before any tokens can be received.    Right, but like I explained in my post, you can\u2019t really enforce that with a specification. I think this is more appropriate as a token protocol (ie. tokens created from a base contract that can actually enforce these rules) than an EIP, in my opinion. Then, it\u2019s easy for clients and smart contracts to trust the child tokens, because it can be easily verified that Participation is enforced at the code level!     dtedesco1:  Implementing ERC-20 or ERC-721 to allow for these two components is simply not implementing ERC-20 or ERC-721. I think that\u2019s the crux of @fulldecent 's post above, but please correct me if I\u2019m wrong.   I think you misunderstood what he is saying, actually. He\u2019s saying that what you describe fits as a subset of the ERC-20 standard, so you can just go ahead and implement it without needing a new spec. Neither of those two points goes against the ERC-20 spec. The ERC-20 spec does not specify how tokens can be minted or burned. And as for restricted transfers, everyone considers USDC an ERC-20, and that has a blacklist for interactions. This is no different! I\u2019d say go with @fulldecent 's recommendation and just go for it, no need for an EIP!     dtedesco1:  I\u2019m keen to examine more examples like this. Do you see any other logical holes for implementers to abuse the spec?   Well what I\u2019m saying is, abusers don\u2019t tend to follow the rules . My point is, you can specify all the rules you want, the nature of smart contracts being self-sovereign and EIPs simply being agreed-on guidelines means they aren\u2019t really too useful for preventing abuse. If someone creates a token meant to harm people, clients with filters tend to hide them pretty quick, regardless of what EIPs they follow. I\u2019m not sure this adds enough to warrant an EIP, for that reason. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.553868174835916
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "19",
                    "likes": "2",
                    "time": "13/04/2022-15:26:00",
                    "content": "Thanks for these comments @carlosdp, and I really appreciate the discussion you and  @TimDaub had in the thread on EIP-4973. On @fulldecent\u2019s weekly community service hour livestream, I asked about EIPs. We didn\u2019t discuss his comment above specifically, but I\u2019m now convinced that your interpretation is right and mine was wrong. I was probably swept up in confirmation bias and excitement about my new idea. I don\u2019t want to create a standard that\u2019s meaningless and no one will use. I\u2019m genuinely unclear about what\u2019s useful, though.    EIP-4973 - Non-Transferrable Non-Fungible Tokens (Soulbound Tokens or \"Badges\")   there\u2019s a relevant difference between implementing a useful feature-detection mechanism (ERC4973) and naively disabling transfer functionality (revert in ERC721 transfer).   Where\u2019s the line? How reductionist should we be? At one extreme, we can argue every EIP should rather just be an optional extension to some other, more fundamental one. At the other extreme, I can envision every fly-by-night pet project getting its own ERC. Maybe this deserves another thread. I\u2019m confused. ",
                    "links": [
                        "https://ethereum-magicians.org/t/eip-4973-non-transferrable-non-fungible-tokens-soulbound-tokens-or-badges/8825/7"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.280519480519481
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "20",
                    "likes": "4",
                    "time": "13/04/2022-15:55:14",
                    "content": "Here is my overall guiding principle:  First build something. Then standardize it. And the \u201csomething\u201d should include some producer and some consumer of information.  And a second one:  The purpose of standardizing something is to invite more people to play in your sandbox. The best way to get more people in your sandbox is to already have some friends in the sandbox.  ERC-721 is an example of something that was build\u2013including multiple producers and consumers\u2013before standardizing. The producer is the NFT contract, like some token that represents artwork or identity on-chain. The consumer is something that wants to query that information like Etherscan or MetaMask. Only by considering the needs of people on BOTH sides of that producer/consumer fence were we able to make the biggest impact. The end result is Etherscan fully supports ERC-721 and MetaMask finally started (barely) supporting most of it four years later and after every newspaper on earth was talking about this technical standard on its front page [citation needed] at some point. You might say MetaMask was brought along kicking and screaming. Compare that to my recent experience in Estonia last week at NFT Tallinn. There were at least 5 companies focused on creating an NFT/fungible token for tracking carbon credits. (This is typical for an NFT event.) Few, if any, people are actually using their products. Standardizing any of that now would be a disaster. Four years from now barely anybody will have been attracted to connect onto their sandbox. And when they start connecting, they will learn some important thing they wish they know at the time of standardization. And the result will be\u2026 fragmentation with a new standard. That is the worst-case outcome for a standard. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.670314253647587
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "21",
                    "likes": "0",
                    "time": "21/04/2022-16:12:42",
                    "content": "Just as a tiny note, the standard could simply state exactly what happens if you call the disabled ERC-20 functions, and add a new ERC-165 interface for wallets to query to check if a token is an EXP. Edit: hm, actually you\u2019d probably want a whole new interface that defines ERC-20 compatible functions, but not advertise ERC-165 support for the ERC-20 interface. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.290404040404041
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/EricForgy",
                    "index": "22",
                    "likes": "1",
                    "time": "24/04/2022-00:04:41",
                    "content": "Hi @dtedesco1, I like the idea of a reputation token standard and have been thinking about it as well. Here are some of my thoughts:  Reputation tokens are hard to earn, but easy to burn. Reputation tokens cannot be transferred (period), but can be minted and staked. Reputation token supply is inflationary. Total supply of reputation tokens is constant increasing so that reputation loses value over time and must be continuously earned for an owner to maintain their share of reputation tokens.  There are lots of things to work out, but a real-world example has helped me think about this. I started life as a physicist, but switched to finance ages ago. My first job in asset management had an interesting flat culture. The management team rotated every year. My office was next to the founder\u2019s grandson and was the same modest size. No corner offices. Also, everyone in the investment team bent over backwards to help me. It was great. The way it was explained to me, everyone was enthusiastic about helping me because the sooner I got up to speed, the sooner I could help them. Sounded great. But when my first annual review came around, I learned there was a more pragmatic reason why everyone was trying so hard to help me. I received an odd email saying that I had 10 points that I could allocate to colleagues with a maximum of 5 points to any one person and could allocate to at most 10 people (1 pt each). I didn\u2019t have to allocate any if I didn\u2019t want to. The basis for allocation? We were to allocate points to colleagues who we felt had helped us do our jobs better the previous year. Bonuses were largely influenced by how many points you received. I always thought that was a great was to incentivize a helpful culture. Now, it seems like a total no-brainer to tokenize this concept. With this in mind, I am thinking that once someone has achieved a certain level of reputation, e.g. maybe owning 1 reputation token, they are periodically, e.g. once a month, allowed to mint (not transfer) a limited number of tokens to others who they feel have helped them or helped the project. The natural use case for reputation tokens would be DAO governance as means to combat the current plutocracy of purchased governance tokens. Rather than buying votes, you earn votes via reputation and you vote on initiatives by staking your reputation on them. The amount you can stake is tracked similarly to how allowance is currently tracked in ERC-20. Need to think about Sybil attacks. Maybe some kind of modified quadratic voting? Edit: Btw, if there is a non-transferrable token standard, I think it should also contain a consent mechanism, e.g.     Standards for a consent token Tokens       Hi everyone,  I did a cursory search and didn\u2019t find a discussion on this topic, but if I missed anything, references would be appreciated   I was inspired by Evin\u2019s ETHDenver talk:          [The Off Chain Internet: Decentralized Identity & Verifiable Credentials - Evin McMullen]      I\u2019ve been busy working on something else, but this has been running in the back of my head since ETHDenver.  ERC-20, ERC-721 and ERC-1155 all contain some form of approval in order to allow the transfer of to\u2026     ",
                    "links": [
                        "https://www.youtube.com/watch?v=EZ_Bb6j87mg"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.776159147869674
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "23",
                    "likes": "0",
                    "time": "29/06/2022-21:46:18",
                    "content": "  Reputation tokens cannot be transferred (period), but can be \u2026 staked.   This is contradictory. Staking implies transferring. Or more specifically, staking means not being able to transfer something that you were previously able to transfer. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "24",
                    "likes": "1",
                    "time": "29/06/2022-21:47:20",
                    "content": "Oh, nvm, I see you are talking about being able to burn. So this is like reputation points on StackOverflow. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "25",
                    "likes": "2",
                    "time": "11/10/2022-14:50:24",
                    "content": "As I regularly get approached by people about Soulbound tokens, and especially now at devcon, I\u2019ve pointed people here a couple of times already. I think the idea of fungible but non-transferrable points, aka experience points, resonated with many people. I\u2019d encourage you to pursue this @dtedesco1 further. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party giving entirely positive feedback on proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "26",
                    "likes": "1",
                    "time": "11/10/2022-15:08:59",
                    "content": "Thanks for the encouragement, Tim! I will take a fresh look at this soon. Some folks are overdue responses and I\u2019ve got to clean up the PR. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.527777777777778
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/0xThresh",
                    "index": "27",
                    "likes": "1",
                    "time": "25/10/2022-00:37:21",
                    "content": "Hey, just wanted to add that I\u2019m using this EIP as a starting point for social tokens that can actually be redeemed for prizes. This is for an NFT project who has a \u201cpoints\u201d system for people who buy an NFT from the collection, or buy physical art from the artist behind the project. The social points are then used to redeem prizes (like 10% off) on the artist\u2019s shop and burned. The concept of having an operator (the artist in this case) and non-transferable (between individuals), non-valued tokens is a perfect fit for what we\u2019re wanting to experiment with. I\u2019ll come back to post my implementation once I have it done, but just wanted to say that I really appreciate the thought put into this EIP, which gave me a much-needed starting point for this project. I look forward to seeing where it ends up! EDIT: Wanted to post what I\u2019ve put together in case anyone is curious to see a non-perfect implementation    GitHub    GitHub - 0xThresh/Social-Tokens: A smart contract for social tokens, based... A smart contract for social tokens, based loosely on EIP-4974. - GitHub - 0xThresh/Social-Tokens: A smart contract for social tokens, based loosely on EIP-4974.      ",
                    "links": [
                        "https://github.com/0xThresh/Social-Tokens"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party giving entirely positive feedback on proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.438919413919415
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/donnoh",
                    "index": "28",
                    "likes": "1",
                    "time": "15/01/2023-12:24:52",
                    "content": "I was looking to implement a karma-like system, no update on this? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "29",
                    "likes": "1",
                    "time": "15/01/2023-14:44:34",
                    "content": "We have gone through several iterations and just completed the Draft stage. Now we are moving the EIP into Review:  Update EIP-4974: Move to Review by dtedesco1 \u00b7 Pull Request #6334 \u00b7 ethereum/EIPs \u00b7 GitHub In addition to what @0xThresh is working on, it\u2019d be great to have more implementations during the Review stage. Do you want to share what your working on @donnoh and we can see if it\u2019s a good fit? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback",
                        "3rd party or author wants to collaborate on proposal"
                    ],
                    "Sentiment": 7.4
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/donnoh",
                    "index": "30",
                    "likes": "1",
                    "time": "15/01/2023-15:47:35",
                    "content": "I\u2019m trying to implement a DAO model focused on education where a teacher (or coordinator) gives access to others via non-fungible SBTs (credentials) and can grant voting rights using fungible SBTs (karma points) based on course votes or other virtuous behavior. The teacher has a fixed amount of karma (like 50% initially) so the DAO tends to decentralize over time. I already implemented non-fungible SBTs following ERC-5192 which is compatible with EIP-712, so I thought it would make sense to also have fungible SBTs to be compatible to ERC-20, what do you think? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.96875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "31",
                    "likes": "0",
                    "time": "16/01/2023-03:26:25",
                    "content": "This use case sounds compatible. EIP-4974 ratings are similar to fungible SBTs, but\u2013unlike ERC-20-like tokens\u2013ratings can be negative, in case you need to identify malicious or low reputation accounts. This may be useful in a highly decentralized environment. Happy to discuss more over DM/call, and even help write some code, if you want to try implementing. Let me know. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.042857142857143
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/neuralnuance",
                    "index": "32",
                    "likes": "0",
                    "time": "30/01/2023-17:21:00",
                    "content": "I don\u2019t believe there\u2019s a \u201cneed\u201d, as much as a \u201cdesire\u201d \u2014 \u201ca desire exists for\u2026\u201d. Maybe Reddit will integrate with ethereum so that you can carry over your social points from their centralized platform. This might open the door for China to integrate their social points system as well, which might be the motivation / desired purpose? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.333333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/neuralnuance",
                    "index": "33",
                    "likes": "0",
                    "time": "30/01/2023-17:36:16",
                    "content": "    dtedesco1:  Only the operator can transfer EXP. Other accounts have no ability to obtain or dispose of EXP.   I\u2019m sure the normies will love getting pegged with unwanted titles they didn\u2019t ask for. Especially ones that come from authorities they don\u2019t necessarily wish to associate with. \u201cDaddy government, I paid the bribe and served the time, can you please remove that title from my universal identity account?\u201d Maybe someone else is who you don\u2019t want the title from, and whom refuses to remove it. In that case does the target user demand to speak with the Ethereum department manager, or should they call you directly to complain about the ruining of Ethereum? Layer 1 doesn\u2019t \u201cneed\u201d a social credit system. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.560185185185185
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dtedesco1",
                    "index": "34",
                    "likes": "1",
                    "time": "01/02/2023-13:44:07",
                    "content": "It\u2019s important to consider potential nefarious use cases of any potential standard. The issues you raise are noted in the Drawbacks section of the latest version of this EIP:  Drawbacks One potential drawback of using this standard is that ratings are subjective and may not always accurately reflect the true value or quality of a contract or wallet. However, the standard provides mechanisms for updating and removing ratings, allowing for flexibility and evolution over time. Users identified in the motivation section have a strong need to identify how a contract or community evaluates another. While some users may be proud of ratings they receive, others may rightly or wrongly receive negative ratings from certain contracts. Negative ratings may allow for nefarious activities such as bullying and discrimination. We implore all implementers to be mindful of the consequences of any ratings systems they create with this standard.  As it\u2019s is still in review, feel free to make suggestions on how to improve this section or other parts of the EIP. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.568154761904762
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/donnoh",
                    "index": "36",
                    "likes": "1",
                    "time": "01/02/2023-21:45:39",
                    "content": "hey, I want to implement this very soon so i\u2019m available for DM or a call  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "37",
                    "likes": "1",
                    "time": "06/02/2023-23:14:36",
                    "content": "You are an anon edge lord, and IMO, your behavior to disturb the discussion isn\u2019t useful. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/donnoh",
                    "index": "38",
                    "likes": "0",
                    "time": "15/03/2023-08:01:25",
                    "content": "I discussed with my team and int8 seems too low for our purposes. Our app is meant to decentralize over time and it accomplishes this with inflation. int8 cannot inflate meaningfully over long periods of time. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.75
                }
            ]
        }
    ],
    "group_index": "1683"
}