{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip4906-erc-721-erc-1155-metadata-update-extension/8588",
            "title": "EIP4906: ERC-721/ERC-1155 Metadata Update Extension ",
            "index": 8588,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/0xanders",
                    "index": "1",
                    "likes": "1",
                    "time": "13/03/2022-16:03:44",
                    "content": "  eip: 4906 title: ERC-721/ERC-1155 Metadata Update Extension description: Standard interface extension for ERC-721/ERC-115 metadata update author: Anders (@0xanders) discussions-to: status: Draft type: Standards Track category: ERC created: 2022-03-13 requires: 721 or 1155  Abstract This specification defines standard metadata update event of ERC-721and ERC-1155. The proposal depends on and extends the existing ERC-721 and ERC-1155.  Motivation Many ERC-721 and ERC-1155 contracts emit their custom event when metadata changed.It is easy to update metadata of one NFT by specific event, but it is difficult for third-party platforms such as NFT marketplace to update metadata of many NFTs based on custom events. Having a standard MetadataUpdate event will make it easy for third-party platforms to timely update metadata of  many NFTs.  Specification The keywords \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d, \u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and \u201cOPTIONAL\u201d in this document are to be interpreted as described in RFC 2119. The metadata update extension is OPTIONAL for ERC-721/ERC-1155 contracts. /// @title ERC-721/ERC-1155 Metadata Update Extension interface IERC4906MetadataUpdate  {     /// @dev This event emits when the metadata of a token is changed.      /// So that the third-party platforms such as NFT market could     /// timely update the images and related attributes of the NFT     event MetadataUpdate(uint256 indexed _tokenId);    }  The MetadataUpdate event MUST be emitted when the metadata of a token is changed.  Rationale Different NFTs have different metadata, and metadata generally has multiple fields. bytes data could be used to represents the modified value of metadata.  It is difficult for third-party platforms to identify various types of bytes data, so there is only one parameter uint256 indexed _tokenId in MetadataUpdate event. After capturing the MetadataUpdate event, a third party can update the metadata with information returned from the tokenURI(uint256 _tokenId) of ERC721 or uri(uint256 _tokenId) of ERC1155.  Backwards Compatibility No issues.  Copyright Copyright and related rights waived via CC0. ",
                    "links": [],
                    "GPT-summary": "The post presents a proposal for a standard metadata update event for ERC-721 and ERC-1155 contracts. The proposal aims to make it easier for third-party platforms to update metadata of many NFTs based on custom events. The post explains the motivation, specification, and rationale behind the proposal. It also mentions that the proposal is optional for ERC-721/ERC-1155 contracts and that there are no issues with backward compatibility. The post does not advertise the proposal, nor does it suggest collaboration.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.321969696969697
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pizzarob",
                    "index": "2",
                    "likes": "3",
                    "time": "19/03/2022-03:06:50",
                    "content": "Hi. I think this makes a lot of sense. I would however suggest that the event accept a range of consecutive token IDs. See ERC2309. My rationale is that you can tell a platform to update and entire collection of metadata using one event rather than one at a time. Emitting a single event for a collection of 10,000 NFTs is not financially reasonable. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.714285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/aram",
                    "index": "3",
                    "likes": "1",
                    "time": "19/03/2022-06:49:42",
                    "content": "I agree with this. There must be a way to signal that a range or whole collection is updated. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/niftynathangang",
                    "index": "4",
                    "likes": "2",
                    "time": "01/06/2022-14:23:09",
                    "content": "I would like to propose the following two updates:  Make the token id a range of consecutive ids, as already suggested in this thread. Many dynamic NFTs are time-based, so a way to instruct a marketplace whether or not to repeat the metadata query and the repeating details would be handy.  event MetadataUpdate(uint256 beginTokenId, uint256 endTokenId, uint256 repeatInterval)  For updates of a single token id, set beginTokenId and endTokenId to the same value. A repeat interval of 0 means \u2018do not repeat, this is a one-time update only\u2019.  Otherwise, the repeat interval would be specified in seconds. Additionally, is there any reason to limit this to ERC-721 tokens?  I feel like this can be applicable to ERC-1155 tokens as well. Thoughts? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party extending to proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.857142857142858
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/niftynathangang",
                    "index": "5",
                    "likes": "0",
                    "time": "01/06/2022-17:40:56",
                    "content": "Draft PR for review, if you think these suggestions are reasonable.   github.com/ethereum/EIPs         Proposed changes in draft EIP-4906.  The proposal would add consecuti\u2026   ethereum:master \u2190 niftynathangang:proposed-updates-eip-4906            opened 05:39PM - 01 Jun 22 UTC               niftynathangang             +14 -6       \u2026ve token id ranges to the event and optional polling/refresh intervals.  When\u2026 opening a pull request to submit a new EIP, please use the suggested template: https://github.com/ethereum/EIPs/blob/master/eip-template.md  We have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:   - The PR edits only existing draft PRs.  - The build passes.  - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside <triangular brackets>.  - If matching on email address, the email address is the one publicly listed on your GitHub profile.       ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/5125",
                        "https://github.com/niftynathangang",
                        "https://github.com/ethereum/EIPs/pull/5125/files",
                        "https://github.com/ethereum/EIPs/pull/5125"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.55064935064935
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Christophe",
                    "index": "6",
                    "likes": "1",
                    "time": "04/07/2022-10:35:19",
                    "content": "I\u2019m the author of another draft EIP that is also about metadata \u201cupdates\u201d but with different scope & motivation. Check EIP-5185: NFT Updatable Metadata Extension EIP4906 proposal makes senses to help 3rd parties keep track of metadata URI, maybe the events should be named  MetadataURIUpdate and BatchMetadataURIUpdate to better differentiate with updates taking place inside the metadata themselves such as eip-5185 is about. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/0xG",
                    "index": "7",
                    "likes": "1",
                    "time": "19/07/2022-14:01:38",
                    "content": "How about interface IERCMetadataUpdate {   event MetadataUpdate(uint256[] tokenIds);   event MetadataUpdateRange(uint256 start, uint256 end); }  would work with both ERC721 and 1155. Passing an empty array could mean update all. Alternatively another method could be used to define ranges. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 3.96875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/sullof",
                    "index": "11",
                    "likes": "1",
                    "time": "26/08/2022-22:54:17",
                    "content": "@0xanders Sorry, I just realized that you talk about general updates. We need more something like @Christophe proposal. I will delete my comments, to avoid generating confusion. But, I agree with Christophe that MetadataURIUpdate would be definitely better. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.6875
                }
            ]
        }
    ],
    "group_index": "1648"
}