{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/state-of-opencl-vulkan-and-ethash/3734",
            "title": "State of OpenCL, Vulkan, and Ethash ",
            "index": 3734,
            "category": [
                "Working Groups",
                "Ethereum 1.x Ring"
            ],
            "tags": [
                "mining"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "1",
                    "likes": "1",
                    "time": "30/10/2019-15:48:19",
                    "content": "Hi! I seem to have fallen down a rabbit hole, and thought the Magicians might be a good place to find more information. This is a new topic for me, so there may be some gross misunderstandings. If there are, I\u2019d love to get set straight. The current Ethash miners seem to be using OpenCL or CUDA for mining. CUDA doesn\u2019t work on AMD, so for AMD the current option is only OpenCL. OpenCL on AMD means relying on AMD\u2019s drivers, which are, um, famously ungood. Mesa (open-source graphics suite on Linux) already performs at least as well as the proprietary drivers. The problem is that Mesa hasn\u2019t implemented OpenCL, only OpenGL (and Vulkan, see below). As in, Mesa has the graphics layer (OpenGL), but not the compute (which is what mining needs). Enter Vulkan. Vulkan has its own compute layer, though I don\u2019t think it has been integrated with OpenCL (yet). Searching vulkan compute turns up existing code leveraging Vulkan\u2019s compute, and there\u2019s even an existing XMR miner written for Vulkan. A Vulkan Ethash miner would allow miners to use a more robust open-source suite to power their GPUs, especially with regards to AMD hardware. This may allow entry to more hobbyist miners. Increased efficiency from GPUs (assuming Vulkan outperforms current CUDA and OpenCL implementations) should theoretically raise the difficulty of making a profitable ASIC. Should there be an initiative to try to persuade Ethash miners to incorporate Vulkan? Right now there isn\u2019t OpenCL - Vulkan interoperability, though I linked Google\u2019s project above. I\u2019m assuming that once there is OpenCL support, Ethash miners would all work with Vulkan out of the box. That may make it hard to incentivize work. Then again, OpenCL support hardly seems around the corner. The XMR Vulkan miner utilized Vulkan\u2019s own intermediate language to build their miner. I don\u2019t know how formidable a task it would be to write new ones, or port the XMR miner\u2019s. Perhaps the XMR team should be reached out to? Another thing to bear in mind is the looming presence of Proof-of-Stake. I do not know to what extent it has disincentivized Ethash miner development, but further work is almost certainly justified since 1) the Eth 1.x chain may yet live on inside of Eth 2, and 2) even if it doesn\u2019t , other blockchains use Ethash. So that\u2019s it for now. I wanted to get a conversation rolling on this, and I\u2019m interested in what the community thinks. Looking forward! ",
                    "links": [
                        "https://duckduckgo.com/?q=vulkan+compute",
                        "https://github.com/enerc/VulkanXMRMiner"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.807236050986051
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chfast",
                    "index": "2",
                    "likes": "1",
                    "time": "31/10/2019-08:29:31",
                    "content": "In practice for AMD GPUs assembly kernels compiled offline to binaries are used: https://github.com/ethereum-mining/ethminer/tree/master/libethash-cl/kernels. They have proved to be better than OpenCL compiled by any compiler. I don\u2019t think using Vulcan instead of OpenCL make any sense. Secondly, not many people are interested in developing mining software in open-source model. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.833333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "3",
                    "likes": "0",
                    "time": "31/10/2019-09:49:43",
                    "content": "    chfast:  In practice for AMD GPUs assembly kernels compiled offline to binaries are used   Do you mean that Ethminer is using the AMDGPU-PRO drivers for microcode, but not for their OpenCL implementation? I\u2019ll readily admit that I\u2019m more than a bit out of my depth here. I know that Ethminer relies on the proprietary AMD drivers (AMDGPU-PRO), and I know the library that you linked to is called libethash-cl, which leads me to assume that it has some kind of relationship with OpenCL. You have a better handle on the process than me, it seems - could you descibe the process in a bit more detail?     chfast:  Secondly, not many people are interested in developing mining software in open-source model.   It could be I didn\u2019t explain myself well. No one would need to completely open-source their miner. The drivers needed to make the miner work would be open-source. I gave some reasons why I think that\u2019s a good thing above. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.267045454545455
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chfast",
                    "index": "4",
                    "likes": "1",
                    "time": "31/10/2019-09:55:58",
                    "content": "    wschwab:  Do you mean that Ethminer is using the AMDGPU-PRO drivers for microcode, but not for their OpenCL implementation? I\u2019ll readily admit that I\u2019m more than a bit out of my depth here. I know that Ethminer relies on the proprietary AMD drivers (AMDGPU-PRO), and I know the library that you linked to is called libethash-cl , which leads me to assume that it has some kind of relationship with OpenCL. You have a better handle on the process than me, it seems - could you descibe the process in a bit more detail?   OpenCL is used to communicate with GPU, but the kernel is not compiled by the compiler from the GPU driver. Kernels are already precompiled and only binaries are loaded. And they are written in GPU assembly, not in OpenCL C. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.419642857142858
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "5",
                    "likes": "0",
                    "time": "31/10/2019-10:46:56",
                    "content": "    chfast:  OpenCL is used to communicate with GPU   So my question is,I would\u2019ve thought that introducing a library for using Vulkan (SPIR-V) to communicate with the GPU would be beneficial. Is there some merit to that? If so, how might such a thing be accomplished? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chfast",
                    "index": "6",
                    "likes": "1",
                    "time": "31/10/2019-11:03:11",
                    "content": "    wschwab:  So my question is,I would\u2019ve thought that introducing a library for using Vulkan (SPIR-V) to communicate with the GPU would be beneficial. Is there some merit to that?   No. We already have assembly code for kernels. Using SPIR-V is a step backward. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "7",
                    "likes": "0",
                    "time": "31/10/2019-11:48:34",
                    "content": "Ah! I think I\u2019m getting it now. SPIR-V is the layer for what is actually running on the GPU, which Ethminer is already doing in assembly. OpenCL is the layer which bridges between the computer and the GPU. Is that right? (Looking back, I probably should\u2019ve figured that out earlier.) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.357142857142857
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chfast",
                    "index": "8",
                    "likes": "1",
                    "time": "31/10/2019-11:57:32",
                    "content": "    wschwab:  Ah! I think I\u2019m getting it now. SPIR-V is the layer for what is actually running on the GPU, which Ethminer is already doing in assembly. OpenCL is the layer which bridges between the computer and the GPU. Is that right?   SPIR-V is a language (actually is Intermediate Representation, IR) that is later \u201ccompiled\u201d by the GPU driver to assembly that runs directly on GPU. In Ethminer, we already have this end assembly representation (they are different for different GPU series). SPIR-V would be useful providing that the compiler included in the GPU driver is good enough to produce the final representation that performs the same as the assembly kernels from Ethminer. Then using SPIR-V (or any other language) would be better because you can target newer GPUs which we don\u2019t have assembly kernels for. Still, I believe not many people are interested in this work. That\u2019s what I meant by the \u201copen-source\u201d comment. I don\u2019t mean the open-source licenses. The Ethminer project stopped being developed because there was not interest nor support in continuing working on it. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.430059523809524
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/wschwab",
                    "index": "9",
                    "likes": "0",
                    "time": "31/10/2019-12:04:31",
                    "content": "Thanks a bunch, @chfast! Your posts have helped me understand the situation much better. One last comment, a bit more off-topic:     chfast:  The Ethminer project stopped being developed because there was not interest nor support in continuing working on it.   While this is a shame, I\u2019m not entirely certain that this is about open-source. Claymore doesn\u2019t seem to have updated since roughly the same time as Ethminer, and I\u2019m none too certain that any of the other closed-source miners are being developed in a meaningful way. It\u2019s hard for me to prove that, but it is certainly the feeling I\u2019ve gotten. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.6267006802721085
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ecclesias",
                    "index": "10",
                    "likes": "1",
                    "time": "05/11/2019-03:48:55",
                    "content": "I\u2019d personally like to see something developed with Vulkan\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.25
                }
            ]
        }
    ],
    "group_index": "941"
}