{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-1898-add-blockhash-option-to-json-rpc-methods-that-currently-support-defaultblock-parameter/11757",
            "title": "EIP-1898: Add `blockHash` option to JSON-RPC methods that currently support defaultBlock parameter ",
            "index": 11757,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/macfarla",
                    "index": "1",
                    "likes": "0",
                    "time": "16/11/2022-05:10:57",
                    "content": "Raising EIP-1898 - basically adding the option to query by blockHash in JSON-RPC methods that currently support defaultBlock parameter - so you can specify block number, tag, or blockHash. This enables querying irrespective of the canonical chain. This EIP has fallen into stagnant status but it is already supported by at least Geth and Besu:  Geth 1.9.6 (PR 19491) Besu 20.10.4 (PR 1784)  PR changing status from stagnant to draft EIP-1898 - change back to draft by macfarla \u00b7 Pull Request #5980 \u00b7 ethereum/EIPs \u00b7 GitHub and adding relevant parts to the execution-apis spec add option for blockHash per EIP-1898 by macfarla \u00b7 Pull Request #326 \u00b7 ethereum/execution-apis \u00b7 GitHub Feedback welcome! ",
                    "links": [
                        "https://github.com/ethereum/execution-apis/pull/326"
                    ],
                    "GPT-summary": "The author is proposing EIP-1898, which adds the option to query by blockHash in JSON-RPC methods that currently support defaultBlock parameter. The proposal has fallen into stagnant status but is already supported by at least Geth and Besu. The author is seeking feedback on the proposal and has provided relevant links to the proposal and execution-apis spec.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.916666666666667
                }
            ]
        }
    ],
    "group_index": "221"
}