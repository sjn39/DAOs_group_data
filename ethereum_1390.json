{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/permissionless-sybil-resistant-dtype-tagging-system/6687",
            "title": "Permissionless, Sybil-Resistant dType/Tagging system ",
            "index": 6687,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "1",
                    "likes": "0",
                    "time": "19/07/2021-11:39:27",
                    "content": "Hello Friends, I am looking for some decentralized type system, maybe similar to dType developed by @loredanacirstea (?). It should\u2026:  be permissionless be sybill resistant not assume for any of the actors to have indisputable right to set the truth. provide game-theoretical incentives\u2026 a) to collapse semantically identical types into the single one b) to split one type into two and more semantically different types.  Any ideas? ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.678571428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/loredanacirstea",
                    "index": "2",
                    "likes": "0",
                    "time": "20/07/2021-19:52:16",
                    "content": "@Ethernian 1, 2 and 3 are solved by continuous voting: https://youtu.be/9ljWZgQT2q4 This is a better version of dType than the one described in the EIPs: https://youtu.be/XMCgL99noYY?t=499. And now we are working on a 3-rd version. So I don\u2019t know yet what will suit you best. In what ways do you want to use dType on-chain, and in what ways off-chain? Regarding a) we had already a version where types were defined by structure, hence collapsible if the structure was the same. Regarding b) we also had a version where you could create two different names for types with the same structure. We could probably have a mix. When do you expect to use dType? ",
                    "links": [
                        "https://youtu.be/XMCgL99noYY?t=499"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Ethernian",
                    "index": "3",
                    "likes": "0",
                    "time": "20/07/2021-22:13:14",
                    "content": "Hello @loredanacirstea, thank you for your prompt reply! We need to adopt some decentralized type system ASAP, but I need to spend diving dType few days more to understand how (and if) it could fit our requirements. Our UseCase is to tag the off-chain data with type information and request data records based on the attached type info. We need to determine if one type is assignable to another one, but I see no further on-chain operations. Maybe even this operation can be defined off-chain, then we don\u2019t need on-chain processing at all. We see two challenges:  type system should allow building efficient indexes in the swarm network to retrieve the data (swarm uses decentralized KV storage). preventing the creation of different types with identical semantic. Preventing spam.  I need to check if our domains are close enough\u2026 anyway a lot of thanks for prompt reply! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.791666666666666
                }
            ]
        }
    ],
    "group_index": "1390"
}