{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-599-valid-until-block-field-for-transactions/3440",
            "title": "EIP-599: Valid-until block field for transactions ",
            "index": 3440,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/kevinsimper",
                    "index": "1",
                    "likes": "1",
                    "time": "04/07/2019-06:21:24",
                    "content": "Simple Summary This EIP adds a new field to transactions, valid_until_block. Transactions containing this field may only be included in blocks with numbers less than or equal to the value in this field. Motivation Presently, transaction eviction is a significant problem for nodes; if a node\u2019s transaction pool fills up, resulting in the eviction of a transaction, it may receive the same transaction from another node immediately afterwards. Without tracking evicted transactions, nodes cannot determine that they\u2019ve seen the transaction before, and if they do track evicted transactions, an attacker can compel them to waste space keeping track of them. The result of this is that even legitimate transactions may stick around in a busy pool indefinitely, while an attacker can deliberately seek to bloat the network\u2019s transaction pools. Further, in cases where the network is busy, or a transaction is published with a low gas price, or with a nonce gap or other problem that prevents it from being mined immediately, the transaction may be executed at any time in the future. This can cause trouble for users, where an effect can take place much later than intended, with no clean way to cancel it. This proposal addresses both of these issues by allowing nodes to place a hard limit on how long they will retain and propagate transactions, limiting the impact of transaction pool bloat and allowing smarter eviction strategies, while also providing users with a way to submit transactions that self-destruct if not mined within a fixed time period.   github.com/ethereum/EIPs       'Valid until block' field for transactions     by Arachnid   on 03:48PM - 10 Apr 17 UTC   10 commits   changed 1 files   with 61 additions   and 0 deletions.       ",
                    "links": [
                        "https://github.com/Arachnid",
                        "https://github.com/ethereum/EIPs/pull/599",
                        "https://github.com/Arachnid",
                        "https://github.com/ethereum/EIPs/pull/599"
                    ],
                    "GPT-summary": "The post is an explanation of a new proposal, EIP-599, which adds a new field to transactions called valid_until_block. The proposal aims to address the problem of transaction eviction and bloat in the network's transaction pools. The author explains the motivation behind the proposal and how it works. A 3rd party could give constructive criticism or ask questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Privacy, Security and risk management",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 4.903499278499279
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "2",
                    "likes": "0",
                    "time": "04/05/2022-00:19:38",
                    "content": "Hello from 2022 Looking at this proposal from 2022 and its relevant proposals  EIP 2711, it\u2019s withdrawn, and EIP 2718 diverted from the purpose of expiring transactions. EIP 1681 stagnant and I don\u2019t think there is a reliable way to use clock/ timestamp  Is anyone still looking at a way to ensure block-number expiration? @Arachnid @kevinsimper, @MicahZoltu  would consider revive this proposal? If you are not at capacity, I am interested in following up on this. Because I think the possibility to protect against replay attack on a signed message is as critical as what #155 was trying to do, if not even more critical. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "3rd party extending to proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.958333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "3",
                    "likes": "0",
                    "time": "04/05/2022-04:20:09",
                    "content": "Expiring transactions run into the problem of opening up an attack vector against the chain because someone can submit a transaction (which results in it being propagated around the network, which is not free) and then they end up not having to pay anything in the end.  In general, we want every transaction that is propagated to result in a non-trivial cost to the sender. One option to work around this is to have an expired transaction still be includable, but it would just cost 21,000 gas and otherwise do nothing.  The 21,000 gas is to cover signature validation, cold account loading, balance read, and balance write.  Maybe it could be a little less, since there is guaranteed to be no second account loaded (recipient). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.079861111111111
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "4",
                    "likes": "0",
                    "time": "09/05/2022-00:34:27",
                    "content": "I started a [EIP-5081] to continue pursuing this idea Create eip-5081.md Expirable Transaction by xinbenlv \u00b7 Pull Request #5081 \u00b7 ethereum/EIPs \u00b7 GitHub. Feedback is welcomed! ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "873"
}