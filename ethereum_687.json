{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-1052-extcodehash-opcode/262",
            "title": "EIP-1052: 'EXTCODEHASH' opcode ",
            "index": 262,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "1",
                    "likes": "4",
                    "time": "02/05/2018-18:24:58",
                    "content": "I\u2019ve written an EIP proposing a new \u2018EXTCODEHASH\u2019 opcode here. Feedback appreciated! ",
                    "links": [],
                    "GPT-summary": "The author has written an EIP proposing a new 'EXTCODEHASH' opcode and is asking for feedback on the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "None",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.965909090909091
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "2",
                    "likes": "0",
                    "time": "03/05/2018-08:38:15",
                    "content": "I think that one has been suggested before, and I\u2019m all for it. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "3",
                    "likes": "1",
                    "time": "03/05/2018-13:15:54",
                    "content": "I think this is a no brainier. Would it be a constant gas operation? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/veox",
                    "index": "4",
                    "likes": "0",
                    "time": "17/05/2018-08:27:56",
                    "content": "Sounds quite useful! Need clarification in EIP: what should happen if the argument taken from the stack (assumed to be address):  is over (or: is not exactly) 20 bytes long? EDIT: Perhaps: \"same answer as for BALANCE\"? is a precompile address (a non-bytecode one like 0x01..0x04)? EDIT: Perhaps: \"if it does have EVM bytecode in the state, then a hash of that; if nothing, then 0x, i.e. nothing, - not a hash of 0x\"?  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/veox",
                    "index": "5",
                    "likes": "0",
                    "time": "17/05/2018-08:31:18",
                    "content": "    holiman:  I think that one has been suggested before   For ref: AFAIU it was issue 139. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chfast",
                    "index": "6",
                    "likes": "0",
                    "time": "17/07/2018-10:19:03",
                    "content": "Update: https://github.com/ethereum/EIPs/pull/1226 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/karalabe",
                    "index": "7",
                    "likes": "0",
                    "time": "19/07/2018-08:37:12",
                    "content": "The 0x3d opcode slot is already taken by RETURNDATASIZE (and 0x3e is taken by RETURNDATACOPY). Please bump the opcode number to 0x3f. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fulldecent",
                    "index": "8",
                    "likes": "0",
                    "time": "26/01/2019-22:19:09",
                    "content": "Posting here for completeness:  Here is my issue with EIP-1052 (the version as of 80b8f80). I believe this test case:  \u201cThe EXTCODEHASH of an precompiled contract is either c5d246\u2026 or 0.\u201d  is ambiguous and could lead to multiple, conflicting implementations. That of course would lead to a network split and cost billions of dollars. The solution is to provide more explicit test cases, one that returns c5d246\u2026 and one that returns 0.  This issue may be resolved and it is also discussed here https://github.com/ethereum/EIPs/issues/1699#issuecomment-457867195 but I am cross posting here and sorry I should have posted here first then crossposted elsewhere. ",
                    "links": [
                        "https://github.com/ethereum/EIPs/issues/1699#issuecomment-457867195"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ajsutton",
                    "index": "9",
                    "likes": "0",
                    "time": "27/01/2019-07:44:02",
                    "content": "This is covered by the ethereum reference tests for EXTCODEHASH, specifically https://github.com/ethereum/tests/blob/develop/src/GeneralStateTestsFiller/stExtCodeHash/extCodeHashDynamicArgumentFiller.json (and probably others) which checks both precompile 0x01 and 0x02 where 0x01 does not exist in state and 0x02 does.  Basically precompiles have no code and whether they are present or not is determined by whether they exist in the actual world state or not like any other contract. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 4.791666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/howardpen9",
                    "index": "10",
                    "likes": "0",
                    "time": "11/09/2020-04:31:40",
                    "content": "Nice, interesting. But why EXTCODECOPY  ( 0x3c ) opcode, but this is expensive is mor expensive! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.96875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/CryptoKiddies",
                    "index": "11",
                    "likes": "1",
                    "time": "10/03/2022-17:44:39",
                    "content": "Great feature for validating code integrity. Its usage does force redesigns for factory-spawned or standardized contracts when immutable vars are in use, given that their initialized values end up in the deployed bytecode. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 9.0
                }
            ]
        }
    ],
    "group_index": "687"
}