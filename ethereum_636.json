{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/standardizing-output-from-rpcs-across-nodes/2392",
            "title": "Standardizing output from RPC's across nodes ",
            "index": 2392,
            "category": [
                "Working Groups",
                "Data Ring"
            ],
            "tags": [
                "json-rpc"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/ankitchiplunkar",
                    "index": "1",
                    "likes": "1",
                    "time": "11/01/2019-09:27:48",
                    "content": "Hi all, I am Ankit Chiplunkar I currently work at https://www.tokenanalyst.io/ and earlier developed https://github.com/analyseether/ether_sql. Posting here on the suggestion of @tjayrush . We collect, clean and format all types of data gathered from Ethereum clients, and regularly fall into problems where different nodes return different types. We have written a few blogs and opened several PR\u2019s on the issue, but I think this ring can be a good place to standardize the data returned from Ethereum clients. What do you guys think? References: Blogs:    Medium \u2013 18 Dec 18    Weird quirks we found in Ethereum nodes At TokenAnalyst we are experts at hosting, running, and extracting valuable information from blockchain nodes. Through our time working\u2026 Reading time: 3 min read           Medium \u2013 9 Jan 19    Towards production grade open-source Ethereum nodes At TokenAnalyst we provide core on-chain infrastructure that is used by \u00d0app\u2019s, researchers, and investors. From our past experience of\u2026 Reading time: 2 min read        PR\u2019s  https://github.com/paritytech/parity-ethereum/issues?q=is%3Aissue+author%3Aankitchiplunkar https://github.com/ethereum/go-ethereum/issues/created_by/ankitchiplunkar  ",
                    "links": [
                        "https://github.com/analyseether/ether_sql",
                        "https://medium.com/tokenanalyst/weird-quirks-we-found-in-ethereum-nodes-d5dcbad0c86",
                        "https://medium.com/tokenanalyst/weird-quirks-we-found-in-ethereum-nodes-d5dcbad0c86",
                        "https://medium.com/tokenanalyst/towards-production-grade-open-source-ethereum-nodes-6ef2e9458fb4",
                        "https://medium.com/tokenanalyst/towards-production-grade-open-source-ethereum-nodes-6ef2e9458fb4",
                        "https://github.com/paritytech/parity-ethereum/issues?q=is%3Aissue+author%3Aankitchiplunkar",
                        "https://github.com/ethereum/go-ethereum/issues/created_by/ankitchiplunkar"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.2756410256410255
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "2",
                    "likes": "0",
                    "time": "13/01/2019-18:16:42",
                    "content": "Hey Ankit. Thanks for posting this. Summary of findings from the above article [with my comments]:  Use an SSD. [Confirmed]  Parity RPC responds even while syncing, Geth does not. [Not confirmed]  There is no standard error reporting from the nodes. Different nodes report errors in different ways. [Confirmed] \u2018r\u2019, \u2018s\u2019, and \u2018v\u2019 fields differ between clients. [Not confirmed]  Parity syncs faster than Geth. [Believed to be true]  JSON-RPC interface is not type-safe. [Is any JSON type safe?]  Tracing and state diff appear only in Parity (not Geth) and then with some inconsistancies. [Not confirmed]  RPC and Web socket interfaces handle block re-orgs. There\u2019s a question if they are correctly handled. [Not confirmed]  Small differences between Geth and Parity: [Not confirmed]  Uncle size is null in Parity, but does exist in Geth. Filter IDs on Geth and Parity are different. Geth assigns random IDs, and Parity uses an incremental counter.   The consensus rules among clients have to match in order to make Ethereum work, but everything else, e.g. the exposed API, or RPC interface can be totally different. [Should be the same but are possibly different]  Take each client with a grain of salt. [Confirmed]   ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.945652173913044
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpzk",
                    "index": "3",
                    "likes": "0",
                    "time": "14/01/2019-16:11:47",
                    "content": "Hey tjayrush, Thanks for checking on the findings, when you write \u201cNot confirmed\u201d do you mean a) you are going to evaluate it or b) you evaluated it and you did confirm that this issue exists. Best, Jendrik ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.859375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tjayrush",
                    "index": "4",
                    "likes": "0",
                    "time": "08/02/2019-16:08:58",
                    "content": "@jpzk When I say \u2018not confirmed\u2019 above I meant that I did not independently test the claim made by Ankit. In other words, I don\u2019t know if it right or wrong. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.550595238095238
                }
            ]
        }
    ],
    "group_index": "636"
}