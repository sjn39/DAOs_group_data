{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip1705-an-account-bound-token-with-permission-based-minting/10526",
            "title": "EIP1705 - An account bound token with permission based minting ",
            "index": 10526,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft",
                "eip"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/arjn",
                    "index": "1",
                    "likes": "0",
                    "time": "26/08/2022-10:36:07",
                    "content": "NFTs are becoming widely adopted for their use as collectable, profile avatars, etc. But NFTs have much more use cases apart from just buying and selling ape jpegs. Problem Statement :  NFTs today are used for their financial value rather than their use cases which include event passes, identities, degrees, etc. The ERC721 and ERC1155 NFT standards are not capable of serving these use cases since their ownership can be transferred which makes it unusable to be used for identity or degree, etc We need a standard which does not permit the users to transfer the ownership of their NFTs. These tokens have to be attached to the address it is minted to.  The solution is an Address Bound Token.  The inherent problem with ERC20/ERC721/ERC1155 or any ERC token standard is that bad actor can target the users with fake/thrashy/spam NFTs or Fungible Tokens. The user does not have a way to prevent anyone from doing so. In order to get rid of these spam tokens, they will have to transfer the tokens to someone else or burn it by transferring it to the null address.  The downside to this is that the users need to call the transfer() function which takes up gas, ultimately having the users pay for something which they never intended to have in their wallet in the first place. The solution is to have a contract which requires the signature of the user for anyone to transfer an NFT to their address. Solutioning :   Create a contract which is an extension of ERC721 which does not have a transfer() or transferFrom() function.   When this contract wants to mint an SBT for some address, it will require the user\u2019s EIP721 signature.   Once the user\u2019s signature is available, the contract can mint tokens for the user.   When the user provides the signature, the user can specify if the signature provided is for one time or forever. If the signature provided is forever, then the contract address will be whitelisted for the user.   The mint function in the contract can check the validity of the signature before minting any tokens in the future.   ",
                    "links": [],
                    "GPT-summary": "The post proposes a new token standard, Address Bound Token, to solve the problem of NFTs being used only for their financial value. The proposed standard does not allow the transfer of ownership and requires the user's signature for anyone to transfer an NFT to their address. The post also suggests that the proposed standard can be an extension of ERC721. The post explains the problem statement, solution, and solutioning in detail. The post also invites feedback and questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Token economics",
                        "Smart contract updates",
                        "Privacy, Security and risk management",
                        "Law and regulations",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.346153846153846
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/arjn",
                    "index": "2",
                    "likes": "0",
                    "time": "26/08/2022-10:38:37",
                    "content": "I am proposing something on this forum for the first time. I am hoping to get some feedback from the experts and see this proposal to its finality\u2026 Cheers\u2026!!  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 6.953125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "3",
                    "likes": "1",
                    "time": "26/08/2022-20:19:52",
                    "content": "FYI - this wouldn\u2019t be assigned EIP-1705 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "4",
                    "likes": "1",
                    "time": "26/08/2022-20:33:44",
                    "content": "Also, there are a lot of soulbound EIPs:   Ethereum Improvement Proposals   EIP-5484: Consensual Soulbound Tokens Interface for special NFTS with immutable ownership and pre-determined immutable burn authorization        Ethereum Improvement Proposals   EIP-5192: Minimal Soulbound NFTs Minimal interface for soulbinding EIP-721 NFTs        Ethereum Improvement Proposals   EIP-5114: Soulbound Badge A badge that is attached to a \"soul\" at mint time and cannot be transferred after that.        Ethereum Improvement Proposals   EIP-5516: Soulbound Multi-Owned Tokens An interface for non-transferrable, Multi-owned NFTs binding to Ethereum accounts        Ethereum Improvement Proposals   EIP-4973: Account-bound Tokens An interface for non-transferrable NFTs binding to an Ethereum account like a legendary World of Warcraft item binds to a character.        Ethereum Improvement Proposals   EIP-4671: Non-Tradable Tokens Standard A standard interface for non-tradable tokens, aka badges or souldbound NFTs.      I would highly recommend waiting for one of those to become the most commonly-used standard and then extend that. ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-5484",
                        "https://eips.ethereum.org/EIPS/eip-5192",
                        "https://eips.ethereum.org/EIPS/eip-5192",
                        "https://eips.ethereum.org/EIPS/eip-5114",
                        "https://eips.ethereum.org/EIPS/eip-5114",
                        "https://eips.ethereum.org/EIPS/eip-5516",
                        "https://eips.ethereum.org/EIPS/eip-5516",
                        "https://eips.ethereum.org/EIPS/eip-4973",
                        "https://eips.ethereum.org/EIPS/eip-4973",
                        "https://eips.ethereum.org/EIPS/eip-4671",
                        "https://eips.ethereum.org/EIPS/eip-4671"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.0095238095238095
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/arjn",
                    "index": "5",
                    "likes": "2",
                    "time": "28/08/2022-02:41:35",
                    "content": "@Pandapip1 Yes, you are right. But I was looking from the PoV of having a standard where the receiver has some control over the SBTs minted to their account. I am talking about Permission based token minting and am currently working on the base contract. Will keep this thread active by posting about the updates. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.352380952380952
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/toledoroy",
                    "index": "6",
                    "likes": "0",
                    "time": "03/09/2022-17:11:37",
                    "content": "I\u2019d suggest that for the sake of composibility and standartization, which is IMHO what we should be aspiring to, we\u2019d try to come up with a standard that\u2019s as similar as possible to ERC1155 & 721. Also, since both of these can have a non-transferable version, it would probably be best to just make modifications to them (something like ERC721_SOUL) that would still be compatible with other token. We\u2019ve had lots of success just blocking the transfer functions and adding a reverse mapping (tokenByAddress) which seems to be important for SBTs You can take a look here: ERC1155Tracker/Soul.sol at main \u00b7 VirtualBlock/ERC1155Tracker \u00b7 GitHub ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.088541666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "7",
                    "likes": "0",
                    "time": "04/09/2022-09:57:17",
                    "content": "First post: What you are describing in steps 1.-5. is pretty much what we have described in EIP-4973 where both sender and receiver consent for a token to be minted. A reference implementation was made available by us: GitHub - rugpullindex/ERC4973: Reference Implementation of EIP-4973 \"Account-bound tokens\" ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.375
                }
            ]
        }
    ],
    "group_index": "69"
}