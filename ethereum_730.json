{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-1062-formalize-ipfs-hash-into-ens-ethereum-name-service-resolver/281",
            "title": "EIP-1062: Formalize IPFS hash into ENS(Ethereum Name Service) resolver ",
            "index": 281,
            "category": [
                "EIPs"
            ],
            "tags": [
                "ens",
                "ipfs"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/PhyrexTsai",
                    "index": "1",
                    "likes": "3",
                    "time": "05/05/2018-14:56:09",
                    "content": "I\u2019ve written an EIP proposing Formalize IPFS hash into ENS(Ethereum Name Service) resolver. Any discuss and feedback are appreciated! ",
                    "links": [
                        "https://ethereum-magicians.org/t/eip-1577-multiaddr-support-for-ens/1969"
                    ],
                    "GPT-summary": "The author has written an EIP proposing to formalize IPFS hash into ENS resolver. The author is asking for feedback and discussion on the proposal. Additionally, the post may attract constructive criticism and questions from third parties.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "2",
                    "likes": "0",
                    "time": "07/05/2018-06:49:32",
                    "content": "Thanks for putting this together. It\u2019s been something I\u2019ve been meaning to do for a long time, and I think it\u2019s sorely needed! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.34375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "3",
                    "likes": "1",
                    "time": "22/05/2018-17:28:38",
                    "content": "For the http://dappnode.io project, I have been solving this by adding a text record with key dnslink and a NURI for example: /ipfs/QmXpSwxdmgWaYrgMUzuDWCnjsZo5RxphE3oW7VhTMSCoKK This has the advantages:  We don\u2019t have to create a new resolver. It is compatible and predictable with the current ipfs implementation. We don\u2019t have to deal with base58 onchain. We can specify other protocols like ipns, swarm or any protocol.  ( I know that this is not strictly necessary, but it is very convenient for real applications, if no, you will end up testing many protocols\u2026 )  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.39520202020202
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "4",
                    "likes": "0",
                    "time": "22/05/2018-20:32:18",
                    "content": "    jbaylina:  We don\u2019t have to deal with base58 onchain.   To be clear, this isn\u2019t necessary here, either. Multihashes are stored in binary form, and encoded and decoded offchain. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "5",
                    "likes": "0",
                    "time": "23/05/2018-03:24:29",
                    "content": "Ah, ok, I see. I want to note, that saving the multihash in binary (compared to string) does not improve the storage cost.  In most of the cases this is going to take two 256bit words of storage + the lenght. In the other hand, if you use the binary format you will need specialised tools to manage this field. If it\u2019s a string, you can use regular tools to check, set, cut and paste, etc\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.09375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "6",
                    "likes": "1",
                    "time": "23/05/2018-07:07:51",
                    "content": "Most multihash tools I\u2019m aware of support binary representation natively. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "7",
                    "likes": "0",
                    "time": "23/05/2018-08:25:00",
                    "content": "Yes, sure. I\u2019m talking more about generic tools like block explorers, generic smart contract interfaces, blockchain data analysers, etc. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.214285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "8",
                    "likes": "2",
                    "time": "20/08/2018-09:48:48",
                    "content": "Guys,  right now we have 3 different ways to do this (as far as I know): 1.- Metamask:  Put in the content field the SHA256 value of the content (32bytes) 2.- DAappNode:  Use text field in the resolver with the key dnslink and a string like \u201c/ipfs/QmXpSwxdmgWaYrgMUzuDWCnjsZo5RxphE3oW7VhTMSCoKK\u201d 3.- EIP1062:  Use a new field called \u201cmultihash\u201d that puts the full multihash in binary (>32bytes). It would be good to chose one for the standard. My vote is for 2 (I\u2019m biased)  but this are the arguments: 1.- It is compatible in how this is solved in a regular DNS system 2.- It adds options for different providers:  /ipfs/xxx   /ipns/xxxxx  /swarm/xxxxx   (and it\u2019s open to other providers). 3.- You can use the actual ENS resolvers. 4.- Defining a new multihash function for the resolver and storing it in binary it will not save any blockchain storage, as it will take always two 256bit-words. 5.- It is readable from a generic blockchain explorer.  (You can easily do a cut and paste). 6.- You don\u2019t need any special tool to generate the link and to convert. 7.- In case of an automatic import of a dns zone to ENS, the system will continue work. So because of this, I would like to strongly push for this option. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.779791967291967
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "9",
                    "likes": "0",
                    "time": "22/08/2018-23:43:36",
                    "content": "Since @PhyrexTsai implemented MetaMask\u2019s support, I thought it would surely be compatible with his EIP, 1062, is it not? I\u2019m happy with revising it if needed, we should try to stay on the same page about this. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 7.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/eduadiez",
                    "index": "10",
                    "likes": "0",
                    "time": "25/08/2018-16:52:54",
                    "content": "If I\u2019m not wrong the @PhyrexTsai MetaMask support implementation uses the public resolver from: https://etherscan.io/address/0x1da022710df5002339274aadee8d58218e9d6ab5. This public resolver doesn\u2019t implement setMultihash and multihash so I don\u2019t think it\u2019s compatible with this EIP. Note: According to manager.ens the default public resolver should be 0x5ffc014343cd971b7eb70732021e26c35b744cc4. I don\u2019t know why 0x1da022710df5002339274aadee8d58218e9d6ab5 is tagged as ENS-PublicResolver on Etherscan. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.3125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chris-remus",
                    "index": "11",
                    "likes": "0",
                    "time": "28/08/2018-17:12:38",
                    "content": "FWIW, I won the ipfshash.eth auction. Let me know if the name could be useful here. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/rachelhamlin",
                    "index": "12",
                    "likes": "2",
                    "time": "29/08/2018-07:45:23",
                    "content": "Hey @jbaylina @danfinlay, Rachel from Status here. We touched base briefly with @alexvandesande and Bobby (MetaMask) about this. We\u2019re starting on ENS support for our browser now and were planning to follow the EIP directly with multihash and setMultihash. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "13",
                    "likes": "1",
                    "time": "29/08/2018-20:13:48",
                    "content": "    eduadiez:  If I\u2019m not wrong the @PhyrexTsai MetaMask support implementation uses the public resolver from: https://etherscan.io/address/0x1da022710df5002339274aadee8d58218e9d6ab5. This public resolver doesn\u2019t implement setMultihash and multihash so I don\u2019t think it\u2019s compatible with this EIP.   If that\u2019s the case, MetaMask will probably update its support to resemble the EIP more closely, especially now that other clients are following that. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.446428571428571
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/portal-chris",
                    "index": "14",
                    "likes": "3",
                    "time": "31/08/2018-15:11:48",
                    "content": "@danfinlay @rachelhamlin This version of public resolver contract (0x1da022710dF5002339274AaDEe8D58218e9D6AB5) which has been widely used right now, does not support the multihash method, so we decided to use the SHA256 hash in content method to set mappings of IPFS/swarm. For the EIP-1062, we use the supportInterface method to determine whether or not the public resolver support multihash. We are currently developing a new feature that\u2019ll detect whether the ENS is using the old/new resolver; and it\u2019s compatible with SHA256 content and multiash. After testing, we\u2019ll make a pull request to MetaMask. chris@portal.network phyrex@portal.network (kaizen.portal.network) ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.268398268398268
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "15",
                    "likes": "0",
                    "time": "31/08/2018-17:07:17",
                    "content": "Great, sounds good, thank you! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 9.1875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "17",
                    "likes": "3",
                    "time": "03/09/2018-18:00:55",
                    "content": "In my opinion, the standard MUST define a way to specify the protocol:  \u201cipfs\u201d, \u201cswarm\u201d, \u201cutorrent\u201d, \u201cstorej\u201d, \u201cfilecoin\u201d or what ever. If not, the browser (or any user using the entry) will have to query all possible providers in order to resolve the hash.  This is not efficient and can generate a lot of confusion in case that new protocols are defined. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.227272727272727
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/rachelhamlin",
                    "index": "18",
                    "likes": "0",
                    "time": "08/09/2018-13:07:43",
                    "content": "@jbaylina agreed. We\u2019ve discussed this a bit further and now I understand that multihash doesn\u2019t actually specify the protocol. Add to that the complication of working with a library for binary storage\u2026 it seems like your option #2 above is more straightforward and comprehensive. @danfinlay @portal-chris being agnostic about the storage we support is probably our number one priority. What are your thoughts? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "19",
                    "likes": "0",
                    "time": "09/09/2018-22:13:49",
                    "content": "I\u2019m all for staying transport agnostic, but we should start with transports we\u2019re ready to support. IPFS first makes a lot of sense because we already have gateways for it. Swarm isn\u2019t quite as web friendly yet, so I would leave it for the future.  In my opinion, the standard MUST define a way to specify the protocol: \u201cipfs\u201d, \u201cswarm\u201d, \u201cutorrent\u201d, \u201cstorej\u201d, \u201cfilecoin\u201d or what ever. If not, the browser (or any user using the entry) will have to query all possible providers in order to resolve the hash. This is not efficient and can generate a lot of confusion in case that new protocols are defined.  Or we follow the path of MIME and support fallback protocols within an ENS resolver type. It could say \u201cI prefer Swarm, but here\u2019s an IPFS hash, and here\u2019s a URL if you don\u2019t have either of those.\u201d ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.686688311688312
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/portal-chris",
                    "index": "20",
                    "likes": "2",
                    "time": "10/09/2018-04:33:58",
                    "content": "@jbaylina @rachelhamlin The multihash could have stored with a map structure which the resolver can identify with a specific protocol (IPFS, swarm, storj, and etc.). We will update EIP-1062 and add the specify protocol. Rationale function setMultihash(bytes32 node, string protocol, bytes hash) public only_owner(node); function multihash(string protocol, bytes32 node) public view returns (bytes); Our team has commented the EIP-1062 for the above issue on May 18, and I think we can upgrade the EIP1062 and public resolver contract. Link:   github.com/ethereum/EIPs       Formalize IPFS hash into ENS(Ethereum Name Service) resolver     by PhyrexTsai   on 06:33AM - 04 May 18 UTC   9 commits   changed 1 files   with 84 additions   and 0 deletions.        ",
                    "links": [
                        "https://github.com/PhyrexTsai",
                        "https://github.com/ethereum/EIPs/pull/1062",
                        "https://github.com/PhyrexTsai",
                        "https://github.com/ethereum/EIPs/pull/1062"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/rachelhamlin",
                    "index": "21",
                    "likes": "0",
                    "time": "11/09/2018-12:37:43",
                    "content": "@portal-chris nice, simple enough. That would suit us fine. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.270833333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "22",
                    "likes": "0",
                    "time": "12/09/2018-16:04:37",
                    "content": "    portal-chris:  We are currently developing a new feature that\u2019ll detect whether the ENS is using the old/new resolver; and it\u2019s compatible with SHA256 content and multiash. After testing, we\u2019ll make a pull request to MetaMask.   Note that you can deploy your own resolver any time you like, and use that. ENS doesn\u2019t have a system-wide resolver; the public one is only provided for convenience! If a feature you want isn\u2019t yet deployed, you can deploy your own resolver and use that instead.     jbaylina:  In my opinion, the standard MUST define a way to specify the protocol: \u201cipfs\u201d, \u201cswarm\u201d, \u201cutorrent\u201d, \u201cstorej\u201d, \u201cfilecoin\u201d or what ever. If not, the browser (or any user using the entry) will have to query all possible providers in order to resolve the hash. This is not efficient and can generate a lot of confusion in case that new protocols are defined.   Think of it like DNS; it doesn\u2019t specify the protocol for an A record, only the IP address. The protocol is either contextual (eg, default to HTTP) or supplied by the user in the URI. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.736363636363636
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "23",
                    "likes": "0",
                    "time": "14/09/2018-08:00:57",
                    "content": "@portal-chris : This would work for us too!. @Arachnid :  In old DNS you don\u2019t generally resolve a name by a content.  When you do it, then the protocol is specified.  See the \u2018dnslink\u2019  in ipfs example. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "24",
                    "likes": "0",
                    "time": "14/09/2018-08:30:42",
                    "content": "    jbaylina:  In old DNS you don\u2019t generally resolve a name by a content. When you do it, then the protocol is specified. See the \u2018dnslink\u2019 in ipfs example.   You resolve a name to an IP; it specifies the content locator (the IP) but not the protocol to use to talk to it. That\u2019s effectively the same as this situation. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 5.9375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "25",
                    "likes": "2",
                    "time": "10/11/2018-02:15:23",
                    "content": "After a conversation with @jbaylina and others at DevCon, I\u2019m fairly convinced that some kind of protocol hinting, or outright specification, would be helpful here - for permitting IPFS and Swarm (and possibly other) resource identifiers to be distinguished without additional context. I can see two options here:  Add a \u2018protocol\u2019 hint to the return value of multihash, which specifies the protocol to try to find the content with Instead of storing multihashes, store a multiaddr, which permits specifying the protocol (eg, IPFS or Swarm) as part of the field.  Thoughts? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.958333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/decanus",
                    "index": "26",
                    "likes": "0",
                    "time": "10/11/2018-02:52:11",
                    "content": "I would go for the former or:   Add a \u2018protocol\u2019 hint to the return value of multihash, which specifies the protocol to try to find the content with   This would allow us to easily standardize the the protocol to hash as an enum which is added to the bytes. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 6.083333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jbaylina",
                    "index": "27",
                    "likes": "0",
                    "time": "10/11/2018-12:58:08",
                    "content": "Peronally I like much more the second one. It is more similar to the one we have now, and it allows the option to define various protocols.  So you can push content in Swarm and IPFS and say it\u2019s in both places\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/decanus",
                    "index": "28",
                    "likes": "2",
                    "time": "10/11/2018-23:46:10",
                    "content": "@jbaylina let us do it like that then. Is EIP-1062 inline with that decision @Arachnid, if not we should probably draft something new and then talk to the guys at Metamask and other tools that support ENS resolving in browsers to start switching over to the new standard. Better we do it asap cause if we wait too long everyone will have implemented something else and standardization will take forever. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.4981060606060606
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Arachnid",
                    "index": "29",
                    "likes": "0",
                    "time": "11/11/2018-08:26:47",
                    "content": "We\u2019d need a new or revised EIP that specifies multiaddr, instead of multihash. We\u2019d also want to send a PR to the multiaddr repository to add a type for Swarm content hashes. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.681818181818182
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/decanus",
                    "index": "30",
                    "likes": "0",
                    "time": "11/11/2018-11:50:23",
                    "content": "    Arachnid:  We\u2019d need a new or revised EIP that specifies multiaddr, instead of multihash. We\u2019d also want to send a PR to the multiaddr repository to add a type for Swarm content hashes.   Let\u2019s do it, I say a new EIP. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.681818181818182
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Amxx",
                    "index": "31",
                    "likes": "0",
                    "time": "12/11/2018-09:27:09",
                    "content": "I\u2019ve been quiet until now but following the discussion. My guess is that what we need is a standardized representation of mutliaddr for ethereum. This would benefit the ecosystem beyound just the ENS (I\u2019m thinking of Oracles pointing to offchain ressources). Once this is done, it would naturally become part of the ENS addressing mechanisms. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/decanus",
                    "index": "32",
                    "likes": "2",
                    "time": "13/11/2018-01:59:14",
                    "content": "@Arachnid and I just published EIP-1577 to try and better define a system of mapping names to network and content addresses. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/rachelhamlin",
                    "index": "33",
                    "likes": "3",
                    "time": "21/11/2018-13:46:57",
                    "content": "Nice work. Calling for Ethereum Provider ring members to implement EIP1577 here. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 8.0
                }
            ]
        }
    ],
    "group_index": "730"
}