{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/final-eip-6147-guard-of-nft-sbt-an-extension-of-erc-721/12052",
            "title": "FINAL EIP-6147: Guard of NFT/SBT, an Extension of ERC-721 ",
            "index": 12052,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft",
                "final"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "1",
                    "likes": "0",
                    "time": "07/12/2022-16:10:58",
                    "content": "Title: Guard of NFT/SBT, an Extension of ERC-721 Description: A new management role with an expiration date of NFT/SBT is defined, achieving the separation of transfer right and holding right. Author: 5660.eth,Wizard Wang Requirements: 165, 721 Created: 2022-12-07  Abstract This standard is an extension of ERC-721. It separates the holding right and transfer right of non-fungible tokens (NFTs) and Soulbound Tokens (SBTs) and defines a new role, guard with expires. The flexibility of the guard setting enables the design of NFT anti-theft, NFT lending, NFT leasing, SBT, etc.  Motivation NFTs are assets that have both use and financial value. Many cases of NFT theft currently exist, and current NFT anti-theft schemes, such as transferring NFTs to cold wallets, make NFTs inconvenient to be used. In current NFT lending, the NFT owner needs to transfer the NFT to the NFT lending contract, and the NFT owner no longer has the right to use the NFT while he or she has obtained the loan. In the real world, for example, if a person takes out a mortgage on his own house, he still has the right to use that house. For SBT, the current mainstream view is that an SBT is not transferable, which makes an SBT bound to an Ether address. However, when the private key of the user address is leaked or lost, retrieving SBT will become a complicated task and there is no corresponding specification. The SBTs essentially realizes the separation of NFT holding right and transfer right. When the wallet where SBT is located is stolen or unavailable, SBT should be able to be recoverable. In addition, SBTs still need to be managed in use. For example, if a university issues diploma SBTs to its graduates, and if the university later finds that a graduate has committed academic misconduct or jeopardized the reputation of the university, it should have the ability to retrieve the diploma SBT.  The standard has more than the following use cases: SBTs. The SBTs issuer can assign a uniform role of guard to the SBTs before they are minted, so that the SBTs cannot be transferred by the corresponding holders and can be managed by the SBTs issuer through the guard. NFT anti-theft. If an NFT holder sets a guard address of an NFT as his or her own cold wallet address, the NFT can still be used by the NFT holder, but the risk of theft is greatly reduced. NFT lending. The borrower sets the guard of his or her own NFT as the lender\u2019s address, the borrower still has the right to use the NFT while obtaining the loan, but at the same time cannot transfer or sell the NFT. If the borrower defaults on the loan, the lender can transfer and sell the NFT. Additionally, by setting an expires for the guard, the scalability of the protocol is further enhanced, as demonstrated in the following examples: More flexible NFT issuance. During NFT minting, discounts can be offered for NFTs that are locked for a certain period of time, without affecting the NFTs\u2019 usability. More secure NFT management. Even if the guard address becomes inaccessible due to lost private keys, the owner can still retrieve the NFT after the guard has expired. Valid SBTs. Some SBTs have a period of use. More effective management can be achieved through guard and expires.   github.com   ethereum/EIPs/blob/master/EIPS/eip-6147.md --- eip: 6147 title: Guard of NFT/SBT, an Extension of ERC-721 description: A new management role with an expiration date of NFT/SBT is defined, achieving the separation of transfer right and holding right. author: 5660-eth (@5660-eth), Wizard Wang discussions-to: https://ethereum-magicians.org/t/guard-of-nft-sbt-an-extension-of-eip-721/12052 status: Final type: Standards Track category: ERC created: 2022-12-07 requires: 165, 721 ---  ## Abstract  This standard is an extension of [ERC-721](./eip-721.md). It separates the holding right and transfer right of non-fungible tokens (NFTs) and Soulbound Tokens (SBTs) and defines a new role, `guard` with `expires`. The flexibility of the `guard` setting enables the design of NFT anti-theft, NFT lending, NFT leasing, SBT, etc.  ## Motivation  NFTs are assets that possess both use and financial value.       This file has been truncated. show original      ",
                    "links": [
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6147.md",
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6147.md",
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6147.md"
                    ],
                    "GPT-summary": "The post introduces a new standard, EIP-6147, which is an extension of ERC-721. The standard defines a new management role, guard, with an expiration date for non-fungible tokens (NFTs) and Soulbound Tokens (SBTs). The post explains the motivation behind the proposal, which is to separate the holding right and transfer right of NFTs and SBTs, and enable the design of NFT anti-theft, NFT lending, NFT leasing, SBT, etc. The post does not advertise the proposal, but rather explains its purpose and potential use cases.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Privacy, Security and risk management",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.781697116442879
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "3",
                    "likes": "0",
                    "time": "08/12/2022-10:48:27",
                    "content": "mapping(uint256 => address) private token_guard_map;  => mapping(uint256 => address) internal token_guard_map;  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "4",
                    "likes": "0",
                    "time": "17/12/2022-04:14:35",
                    "content": "update  require(_isApprovedOrOwner(_msgSender(), tokenId),\"ERC721QS: caller is not owner nor approved\") Both the owner and the operator can set up guards to be more compatible with subsequent application protocols and application scenarios add  ///@dev When burning, delete `token_guard_map[tokenId]`     function _burn(uint256 tokenId) internal virtual override {         address guard=guardOf(tokenId);         super._burn(tokenId);         delete token_guard_map[tokenId];         emit UpdateGuardLog(tokenId, address(0), guard);     }  When burning, delete  the guard. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.833333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "5",
                    "likes": "1",
                    "time": "07/02/2023-15:18:16",
                    "content": "As part of our process to encourage peer review, we assign a volunteer peer reviewer to read through your proposal and post any feedback here. Your peer reviewer is @ThunderDeliverer! Please note that this review is NOT required to move your EIP through the process. When you\u2014the authors\u2014feel ready, just open a pull request. If any of this EIP\u2019s authors would like to participate in the volunteer peer review process, shoot me a message!  @ThunderDeliverer please take a look through EIP-6147 and comment here with any feedback or questions. Thanks! ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-6147"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party auditing and reviewing proposal"
                    ],
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "6",
                    "likes": "0",
                    "time": "18/02/2023-19:05:55",
                    "content": "We have discussed for six months and finally decided to define a new management role with a time limit. The introduction of expires for guard is very significant.     5cent-AI:  Additionally, by setting an expires for the guard, the scalability of the protocol is further enhanced, as demonstrated in the following examples: More flexible NFT issuance. During NFT minting, discounts can be offered for NFTs that are locked for a certain period of time, without affecting the NFTs\u2019 usability. More secure NFT management. Even if the guard address becomes inaccessible due to lost private keys, the owner can still retrieve the NFT after the guard has expired. Valid SBTs. Some SBTs have a period of use. More effective management can be achieved through guard and expires.   ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.235826673326673
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/zt1991666",
                    "index": "7",
                    "likes": "0",
                    "time": "19/02/2023-08:30:28",
                    "content": "    5cent-AI:  For SBT, the current mainstream view is that an SBT is not transferable, which makes an SBT bound to an Ether address. However, when the private key of the user address is leaked or lost, retrieving SBT will become a complicated task and there is no corresponding specification. The SBTs essentially realizes the separation of NFT holding right and transfer right. When the wallet where SBT is located is stolen or unavailable, SBT should be able to be recoverable.   it is hard to define a address was been stolen ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.15542328042328
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/zt1991666",
                    "index": "8",
                    "likes": "0",
                    "time": "19/02/2023-08:43:46",
                    "content": "    5cent-AI:  NFT anti-theft. If an NFT holder sets a guard address of an NFT as his or her own cold wallet address, the NFT can still be used by the NFT holder, but the risk of theft is greatly reduced.   Is this address write in the contract ? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 6.333333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "9",
                    "likes": "0",
                    "time": "19/02/2023-09:54:18",
                    "content": "    zt1991666:  it is hard to define a address was been stolen   If an address is stolen, the SBT holder should report it to the SBT issuer for judgment. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 3.541666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "10",
                    "likes": "0",
                    "time": "19/02/2023-10:01:49",
                    "content": "If an address is stolen, the SBT holder should report it to the SBT issuer for judgment. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "11",
                    "likes": "0",
                    "time": "19/02/2023-10:05:59",
                    "content": "    zt1991666:  Is this address write in the contract ?   Yes, for example, you can set the address of \u201cguard\u201d as a cold wallet address to prevent theft. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 2.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/william1293",
                    "index": "12",
                    "likes": "0",
                    "time": "22/02/2023-01:12:37",
                    "content": "Recoverable, manageable, and valid SBT is an amazing idea. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 8.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "13",
                    "likes": "0",
                    "time": "23/02/2023-13:39:28",
                    "content": "Yes, I think we should make deeper considerations and improvements on what SBT is and how to manage SBT, including exploring underlying protocols. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "254"
}