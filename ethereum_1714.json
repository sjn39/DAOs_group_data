{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-5299-layer3-scaling-standard/9039",
            "title": "EIP 5299 - Layer3 scaling standard ",
            "index": 9039,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/v9hstk",
                    "index": "1",
                    "likes": "1",
                    "time": "25/04/2022-11:23:35",
                    "content": "Ethereum Improvement Proposals EIP 5299 - Layer3 scaling standard   github.com/ethereum/EIPs         EIP: 5299: Layer3 scaling pattern   ethereum:master \u2190 0xHashstack:Layer3-scaling-standard            opened 11:22AM - 20 Jul 22 UTC               v9hstk             +2837 -0       When opening a pull request to submit a new EIP, please use the suggested templa\u2026te: https://github.com/ethereum/EIPs/blob/master/eip-template.md  We have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:   - The PR edits only existing draft PRs.  - The build passes.  - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside <triangular brackets>.  - If matching on email address, the email address is the one publicly listed on your GitHub profile.       A primitive standard facilitating eternal upgradeability of smart contracts, by making storage slots dynamic; mitigating the need for redeployment of the proxy in case the storage structure changes. ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/5299",
                        "https://github.com/v9hstk",
                        "https://github.com/ethereum/EIPs/pull/5299/files",
                        "https://github.com/ethereum/EIPs/pull/5299",
                        "https://ethereum-magicians.org/t/how-do-eip-numbers-get-assigned/9079/4",
                        "https://ethereum-magicians.org/t/how-do-eip-numbers-get-assigned/9079"
                    ],
                    "GPT-summary": "The post is an explanation of Ethereum Improvement Proposals EIP 5299, which is a Layer3 scaling standard. The author provides a link to the EIP template and explains the criteria for automatic merging of pull requests. The proposal itself is described as a primitive standard that facilitates eternal upgradeability of smart contracts by making storage slots dynamic, mitigating the need for redeployment of the proxy in case the storage structure changes. A 3rd party could provide constructive criticism or audit and review the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.313852813852814
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/mudgen",
                    "index": "3",
                    "likes": "1",
                    "time": "19/05/2022-13:38:10",
                    "content": "From what I see here, it seems to me that this standard or pattern is the idea to combine the old Eternal Storage pattern with EIP-2535 Diamonds. While the Eternal Storage pattern only works with Solidity data types,  diamond storage works with structs.  So instead of only dealing with setInt, setString,  getInt, getString type functions EIP9000 can deal in custom structs,  so setSomeDataInStructA, setSomeDataInStructB,  getSomeDataFromStructA,  getSomeDataFromStructB etc.   Dealing with structs can add a layer of data organization.   Also,  new functions and state variables and structs can be added to an EIP9000 diamond. It would be great to see a useful application of this standard. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.8352272727272725
                }
            ]
        }
    ],
    "group_index": "1714"
}