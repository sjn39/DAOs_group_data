{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/standardize-url-format-for-web3-browsers/2422",
            "title": "Standardize URL Format for Web3 Browsers ",
            "index": 2422,
            "category": [
                "Working Groups",
                "Mobile Ring"
            ],
            "tags": [
                "deep-linking",
                "mobile",
                "web3-browser"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/brunobar79",
                    "index": "1",
                    "likes": "3",
                    "time": "14/01/2019-23:27:48",
                    "content": "Hello everyone! During the weekend I wrote an initial EIP draft attempting to standardize the URL structure to link into a web3 browser (like Status, TrustWallet, Coinbase Wallet, imToken, MetaMask. etc\u2026). I\u2019ve seen dApps detecting mobile browsers and asking you to download X browser and sometimes using deferred deeplinking (which is great) but I feel like we\u2019re gonna get into a lot of vendor specific url schemes soon and that sucks. In order to make the experience more seamless, dApps should still be able to recommend a specific mobile web3 browser via deferred deeplinking but by having a standard url format, if the user already has a web3 browser installed that implements this standard, it will be automatically linked to it. Additional context: I\u2019ve tried to keep this compatible with EIP-831 using ethereum: and the dapp prefix, which is making the urls a somehow ugly  or complex. For ex. in order to link here:  https://peepeth.com/brunobar79?utm_source=twitter the url would look like this: ethereum:dapp-https/peepeth.com/brunobar79?chain_id=1&utm_source=twitter There\u2019s a couple of problems with that:   Mobile wallets that don\u2019t have a browser and registered the ethereum: scheme might be chosen by the OS to handle those links and they won\u2019t be able to do anything with it.   ENS conflicts as pointed by @ligi here   In my opinion I think it would be much better if we just agree on the dapp:// protocol and we shouldn\u2019t have to deal with any of those issues I\u2019ve mentioned before, so let\u2019s discuss what\u2019s the best solution! Here\u2019s the draft: https://github.com/brunobar79/EIPs/blob/master/url-format-web3-browsers.md Tagging some people  to get feedback and primarily to discuss the viability of choosing the dapp:// url scheme. @drwasho @pedrouid @pete @mandrigin @DmitryBespalov If you guys know anyone else that should be involved please ping them! Thanks! ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/831#discussion_r161777745",
                        "https://github.com/brunobar79/EIPs/blob/master/url-format-web3-browsers.md"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.985294117647059
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "2",
                    "likes": "0",
                    "time": "15/01/2019-18:24:10",
                    "content": "Thanks for the initiative! Really like this. Just fear we will have a hen and egg problem here. A bit like you hinted in #1 - that said in this case I do not see #2 as a problem as this one will always have a prefix then - when the whole thing has a prefix we do not run into the collision with ens. So I would fully support this EIP - just fear we might run into adoption problems as for the hen and egg situation. Would be really happy about ideas on how to mitigate this. On android we might be able to work with fallback urls (then pointing to a neutral app that offers apps that fulfill this standard - e.g. with information from: https://github.com/ethereum-wallets/ethereum-wallet-list But I do not really know how this can work on desktop or iOS. Perhaps a library that spits out different links depending on the platform. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.083333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/brunobar79",
                    "index": "3",
                    "likes": "0",
                    "time": "15/01/2019-19:11:21",
                    "content": "@ligi Thanks for the input! #1 is a tough one and  AFAIK there\u2019s nothing you can do on iOS. As you can see in the docs it says: \" Note:  If more than one third-party app registers to handle the same URL scheme, there is currently no process for determining which app will be given that scheme.\" Regarding #2 If the ENS name gets a prefix it shouldn\u2019t be a problem but dapp-*.eth is still a valid ENS name (as well as pay-*.eth)  and ERC-681 doesn\u2019t specify a prefix yet. On a separate note, What are your thoughts on using dapp:// for this specific purpose? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.300925925925926
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/mandrigin",
                    "index": "4",
                    "likes": "0",
                    "time": "17/01/2019-14:12:09",
                    "content": "yeah, I\u2019m not sure that two apps with the same prefix will pass Apple Review as well. if you look at the browsers, each one of these registers it\u2019s own prefix: opera-http, opera-https, chrome-http, chrome-https. so, maybe we can come up with something like status-dapp:, metamask-dapp:, etc for iOS specifically? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.583333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/brunobar79",
                    "index": "5",
                    "likes": "0",
                    "time": "17/01/2019-18:10:28",
                    "content": "@mandrigin I don\u2019t think having more than one protocol a problem with Apple (I\u2019ve done it before) Regarding having one prefix it per browser it\u2019s exactly what I\u2019m trying to avoid: vendor specific prefixes. And it would be great if we have the same one also for both iOS and Android. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.550000000000001
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/mandrigin",
                    "index": "6",
                    "likes": "0",
                    "time": "17/01/2019-19:18:42",
                    "content": "Yeah, but unpredictably opening a wallet isn\u2019t a great idea and iOS has no mechanics on how to choose this. Unless that is fixed (maybe iOS 13?) I would prefer to just make a JS lib that multiplexes a deeplink into many vendor-specific ones and try to promote it to DApps users. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.541666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/brunobar79",
                    "index": "7",
                    "likes": "1",
                    "time": "17/01/2019-20:27:48",
                    "content": " unpredictably opening  a  wallet isn\u2019t a great idea  That\u2019s what\u2019s already happening with the ethereum: url scheme,   And you\u2019re right. Even U-port that\u2019s not a wallet is opening links like that. Also, that\u2019s one of the reasons why I propose to register dapp:// instead so we\u2019re not randomly falling into any wallet but only those who have a browser included and implemented this ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.169047619047619
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ligi",
                    "index": "8",
                    "likes": "1",
                    "time": "18/01/2019-01:52:22",
                    "content": "I think using \u201cdapp://\u201d is a good idea. Btw just triggered registration of ethereum schema for IANA here; https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml - there is bitcoin and bitcoin cash registered but no ethereum - needs to be changed. When dapp:// gets some usage we can also get this registered there. That was also why I was looking at this site - wanted to check if dapp:// is already used. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 8.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/brunobar79",
                    "index": "9",
                    "likes": "1",
                    "time": "18/01/2019-06:11:44",
                    "content": "@ligi good call and great to know that the dapp uri scheme is \u201cformally\u201d available. I\u2019ve updated the EIP draft to use dapp: instead: https://github.com/ethereum/EIPs/pull/1710 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 8.166666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pedrouid",
                    "index": "10",
                    "likes": "1",
                    "time": "19/01/2019-15:02:44",
                    "content": "What about making this URI format compatible with ERC-831?   Ethereum Improvement Proposals   URI Format for Ethereum Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.      Suggestion 1: request       = \"ethereum\" \":\" [ \"dapp\" ]  [ \"@\" chainId ][ \"?\" parameters ] chainId       = 1*DIGIT parameters    = parameter *( \"&\" parameter ) parameter     = key \"=\" value key           = \"url\"  value         = STRING  Suggestion 2: request       = \"ethereum\" \":\" [ \"dapp-\" ] dappName [ \"@\" chainId ][ \"?\" parameters ] dappName      = STRING chainId       = 1*DIGIT parameters    = parameter *( \"&\" parameter ) parameter     = key \"=\" value key           = \"url\"  value         = STRING  ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-831"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pedrouid",
                    "index": "11",
                    "likes": "1",
                    "time": "19/01/2019-15:07:29",
                    "content": "However no matter if the schema is dapp: or ethereum:, there is still the issue with iOS where the user has two apps that subscribe/register/listen to the schema and iOS will pick the \u201clast modified\u201d (aka last updated). In order to prevent this the Dapp would have to change the schema to target a specific wallet / web3 browser. Example: replacing the previous schema with the specific app schema ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.833333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/brunobar79",
                    "index": "12",
                    "likes": "1",
                    "time": "19/01/2019-20:29:26",
                    "content": "@pedrouid Thanks for sharing your opinion! The first draft I made was compatible with  EIP-831 and very similar to what you proposed. The reason I think it\u2019s better to have a different url scheme is because lots of wallets and ethereum related apps that don\u2019t have a browser already registered the ethereum protocol, so if a user has let say a multi-coin wallet (BTC, ETH, etc.)  and a web3 browser, it could end up getting opened in the wallet app that doesn\u2019t have a browser and that\u2019s not great. Regarding your second comment, dApps can do that already since most mobile web3 browser already have their own scheme: Status has status-im, Trust Wallet has trust, etc. Ideally dApps would be browser agnostic and their only requirement would be to use a web3 browser, which is what I\u2019m trying to promote through this EIP. In the scenario where a user has two or more web3 browsers installed, the link will still be open by an app that can handle it correctly, (which again, it might not be the case if we go with an ERC-831 compatible scheme) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.107142857142858
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pedrouid",
                    "index": "13",
                    "likes": "1",
                    "time": "19/01/2019-20:42:01",
                    "content": "This makes sense, we\u2019ve found the same issue with WalletConnect and discussed to make a similar change on the ERC-1328 to use a specific WalletConnect schema such as wc: ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/DmitryBespalov",
                    "index": "14",
                    "likes": "2",
                    "time": "24/01/2019-17:40:57",
                    "content": "Hi everyone! TL;DR: for the Web3 browsers, the dapp:// or other scheme that would be used only by browsers is preferrable to the more generic ethereum://. Maybe, the ethbrowser://, web3:// or similar would be a better scheme name.  note: due to me being a new user on this website, I can\u2019t link to more than 2 sites in the post.  I was thinking what are the different options available to link into native apps on iOS and here are my two cents. Generally, there are 2 ways to link into an app in iOS: using a custom URL (search for \u201cios Defining a custom url scheme for your app\u201d) or using a universal link (https scheme). On Android, the deep linking has a similar mechanism. The universal link is a preferred way that Apple recommends. How this works is that app vendor puts a JSON file on a server and registers the server\u2019s url with Apple. In that file, app developer puts mapping from URL paths to specific apps. So if peepeth would build their own app, they could put the association JSON file on the peepeth-dot-com and then all the URL links associated with their domain (for specific paths mentioned in the JSON file) will open in the peepeth app, if it\u2019s installed, or in Safari as a fallback. Another option, the custom URL, is not as user-friendly as a universal link, but it also allows to directly open an app, if it is installed, provided that the custom URL\u2019s scheme is unique across all apps installed on the device. Here we have the problem that many already mentioned - if multiple apps register with the same custom URL scheme, then it is undefined which app will open. From user\u2019s point of view, if the link is directing to a dapp, then it should open in a compatible browser. Now, if it is a universal link, then the app developer decides which mobile app to associate to open the link. If it is a \u201ccommon\u201d custom URL scheme, and there is only one app that is defined for that scheme, then the link will open there. To me, there is a problem with using the same custom URL scheme (ethereum://) for all kinds of applications. As was mentioned, Uport app opening a dapp website is a no-go. As a workaround, we could agree on several kinds of dapps that would have mobile clients, for example, browser, wallet, identity, game, what-not (will  look like ethereum-browser://, ethereum-wallet://, ethereum-dapp://, ethereum-game://). Then, the URL scheme would address not the protocol, but the kind of an app. That doesn\u2019t solve problem when there are more than one app of the same kind, though, because the custom URL scheme is supposed to lead to a specific app, not to a selection of compatible apps, as it happens when you are trying to open a PDF file and then you can select to open it in \u2026 . Either way, there is no possibility for a user to set a preference in which app to open this or that kind of link, moreover, most of the users won\u2019t care about the technical details. So, for the Web3 browsers, it totally makes sense to have a separate scheme, and there is no way at the moment on iOS to set a user preference which app to use when opening a deep link. ",
                    "links": [
                        "https://developer.android.com/training/app-links/deep-linking"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5521799628942485
                }
            ]
        }
    ],
    "group_index": "644"
}