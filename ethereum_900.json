{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/hardfork-meta-eip-2070-berlin-discussion/3561",
            "title": "Hardfork Meta EIP-2070: Berlin discussion ",
            "index": 3561,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "hardfork"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "1",
                    "likes": "1",
                    "time": "19/08/2019-15:14:40",
                    "content": "I am adding this as the discussion URL for the Berlin hardfork meta and propose this thread to be dedicated for discussing proposed EIPs and to judge the sentiment when to move them between the stages.   Ethereum Improvement Proposals   Hardfork Meta: Berlin Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.      ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-2070",
                        "https://ethereum-magicians.org/t/hardfork-meta-eip-1679-istanbul-discussion/3207/52"
                    ],
                    "GPT-summary": "The author of the post is proposing a discussion thread for the Berlin hardfork meta and inviting feedback on the proposed Ethereum Improvement Proposals (EIPs) and suggestions on when to move them between stages. The post also provides a brief description of EIPs and their purpose. The post invites constructive criticism, questions, and reviews of the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Token economics",
                        "Law and regulations",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/adamluc",
                    "index": "2",
                    "likes": "2",
                    "time": "28/10/2019-14:33:36",
                    "content": "There has been a lot of discussion around EIP1559, is this something we can include in Berlin?   Ethereum Improvement Proposals   Fee market change for ETH 1.0 chain Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.       ",
                    "links": [
                        "https://eips.ethereum.org/EIPS/eip-1559"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tvanepps",
                    "index": "3",
                    "likes": "0",
                    "time": "30/10/2019-14:39:36",
                    "content": "exploratory work has been done, now waiting on funding to come through, things are happening behind the scenes. it\u2019s a significant change and requires a lot of work, including a wallet PoC and experimental Geth implementation. also economic studies. hopefully some news on this soon (i\u2019m not part of any of the teams, just following it closely) ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None",
                        "None",
                        "None",
                        "None",
                        "3rd party extending to proposal"
                    ],
                    "Sentiment": 5.2749999999999995
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jochem-brouwer",
                    "index": "4",
                    "likes": "1",
                    "time": "28/06/2020-14:19:15",
                    "content": "Can we have a discussion here about the meta-process where we accept EIPs into a hardfork? It apparently seems to be OK to accept EIPs who are still in Draft status. The current BLS EIP (2537) is in Draft. How is it possible that an EIP which can change in the future get accepted in a call? Also, why is it not a mandatory requirement to have a complete test suite available at the point where the EIP gets accepted? I find this process extremely dangerous and very error prone. If we have to make cross-client implementations for an EIP, I do not think we can do so if we do not have official, complete test vectors. The CSV files in the EIP, which are not in official state test format, are not complete: they miss a few error cases and also the gas usage is not included. How can we make cross-client implementations if we do not have a testbed for them to work on? My points:   Make it mandatory for an EIP to be Final/Accepted status if it wants to be included in a hard fork.   Make it mandatory for hard fork EIPs to have a complete test suite.   I think as extension for point (2) reviewers of the EIP should explicitly check that the test cases are \u201ccomplete\u201d. That is, if error cases are listed in the EIP, at least one of these error cases (but more is of course better) should be added as state test. Also the tests should be in state tests format and a PR of this should be open in the ethereum/tests repository. Another thing which I find very weird is that it seems that no developer of any client has raised these points. I do not understand how you can implement an EIP without a complete testbed. How can we be confident that the implementation matches the intended spec if a complete test suite is missing? I find this very confusing. Maybe someone can enlighten me on this point. CC @shamatar @MariusVanDerWijden @tkstanczak @holiman @axic @karalabe ",
                    "links": [
                        "https://github.com/matter-labs/eip1962/tree/master/src/test/test_vectors/eip2537",
                        "https://github.com/ethereum/tests"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.072435897435898
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/tkstanczak",
                    "index": "5",
                    "likes": "0",
                    "time": "28/06/2020-16:00:41",
                    "content": "I would like to upvote it 100x. The first hard fork that we were implementing when we already had a functional system was Byzantium. Byzanitum went through without even official list of accepted EIPs, without public test cases and with all the EIPs marked as Draft or so. It barely improved since then. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party auditing and reviewing proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.108333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "6",
                    "likes": "0",
                    "time": "30/06/2020-19:13:15",
                    "content": "    jochem-brouwer:  Another thing which I find very weird is that it seems that no developer of any client has raised these points. I do not understand how you can implement an EIP without a complete testbed. How can we be confident that the implementation matches the intended spec if a complete test suite is missing? I find this very confusing. Maybe someone can enlighten me on this point.   I think this all stems from a misconception about how the fork process used to be, and how it is now. We used to schedule a fork, then decide that EIP X, Y and Z went into it. The change now is that we \u201cAccept\u201d early on, but in a more vague fashion. We say, \u201cIt\u2019s eligible for inclusion, at some point in the future, if it meets the expectations\u201d. The expectations at that future point, are among other things,  That testcases exist, and test coverage is good (happy-paths, cornercases etc) That PRs are merged in all clients, That sufficient security-testing has been performed, That the EIP is finalized.  So the initial accept is basically a signal for the EIP-author whether it\u2019s worth spending all the effort on pursuing this. If we say \u201cEligible\u201d, that means client developers will be open to accepting PRs. Now, ok, let\u2019s talk about BLS. Is it ready to be included in a HF?  No official testcases exist, so no on that front (although it would be easy to fix them from the existing vectors) PRs merged in all clients: No, Sufficient security testing: No, it hasn\u2019t been possible to fuzz it via statetests, since only geth exposed it for state-tests, Finalized EIP: No, it\u2019s been changed since the Yolo-spec. The implementations do not match with what\u2019s in the EIP right now (unless it\u2019s changed again).  So now we have a more iterative process. And iterative processes are probably better. It\u2019s very difficult to actually produce the statetests unless you have a client which has it implemented. Whereas if you iterate on, and feed back through Implemenation <-> Testcases <-> EIP , then it\u2019s easier to make all these three components mature and good, without placing the burden on any single one of these different roles to carry all the burden. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.4730030721966205
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "7",
                    "likes": "0",
                    "time": "30/06/2020-19:14:42",
                    "content": "Some more context around EIP-centric forking: https://notes.ethereum.org/JcsYSdDnSSClUM0ohPykfw ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.5
                }
            ]
        }
    ],
    "group_index": "900"
}