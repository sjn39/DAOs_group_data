{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/technical-tasks-included-in-the-october-29th-executive/11284",
            "title": "Technical Tasks Included in the October 29th Executive ",
            "index": 11284,
            "category": [
                "Updates"
            ],
            "tags": [
                "pe-001"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#1",
                    "likes": "5",
                    "time": "29/10/2021-10:14:33",
                    "content": "The Protocol Engineering Core Unit is including the following technical smart contract tasks in this week\u2019s executive spell. These help manage existing modules and the deployment of future modules and do not change any protocol risk parameters.  LERP_FAB: A factory contract for deploying and managing linear interpolation modules. This allows Maker governance to set up a process that modifies system variables in a linear way over time. The factory contract also provides functions for the tracking and management of existing modules.  address constant LERP_FAB = 0x9175561733D138326FDeA86CdFdF53e92b588276;  JOIN_FAB: A factory contract for deploying standardized Gem Join adapters using checkpointed code and compiler versions. This is a tool for collateral onboarding that complements existing tools such as the CLIP_FAB and CALC_FAB.  address constant JOIN_FAB = 0xf1738d22140783707Ca71CB3746e0dc7Bf2b0264;  ",
                    "links": [
                        "https://forum.makerdao.com/t/maker-relay-ep-69-en-espanol/11439",
                        "https://forum.makerdao.com/t/maker-relay-ep-69/11345"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.153061224489796
                },
                {
                    "author_link": "https://forum.makerdao.com/u/wouter",
                    "index": "#2",
                    "likes": "2",
                    "time": "29/10/2021-10:52:18",
                    "content": "Thanks @Derek for the update. Can you clarify which permissions these modules need on the system? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/lollike",
                    "index": "#3",
                    "likes": "3",
                    "time": "29/10/2021-11:11:27",
                    "content": "To save Derek some time, I am pretty sure these modules have no authorization on the Maker Protocol. The reason they are in the spell is to be added the the onchain Chainlog, which can be seen here: spells-mainnet/DssSpell.sol at PE-718 \u00b7 makerdao/spells-mainnet \u00b7 GitHub ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.875
                },
                {
                    "author_link": "https://forum.makerdao.com/u/Derek",
                    "index": "#4",
                    "likes": "4",
                    "time": "29/10/2021-11:13:34",
                    "content": "@lollike is correct  . I can confirm that these factories are just convenience tools being added to the Chainlog and do not have any system permissions. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://forum.makerdao.com/u/wouter",
                    "index": "#5",
                    "likes": "2",
                    "time": "29/10/2021-11:45:26",
                    "content": "That clarifies it, thanks. In light of the structure we\u2019re creating as a result from the Sandbox Project, I think it would be good to start explicitly listing the permissions that are needed to execute a spell action (in this case: adding an entry to chainlog), and the permissions that the module will get afterwards (in this case: none). This will help people to develop the right mental model and it\u2019s a good step to improve the auditability of the spells. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.63265306122449
                },
                {
                    "author_link": "https://forum.makerdao.com/u/LongForWisdom",
                    "index": "#6",
                    "likes": "1",
                    "time": "29/10/2021-11:47:38",
                    "content": "Do we have a syntax / naming convention for contract permissions? They are all all-or-nothing-per-contract, right? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.428571428571428
                },
                {
                    "author_link": "https://forum.makerdao.com/u/wouter",
                    "index": "#7",
                    "likes": "2",
                    "time": "29/10/2021-11:52:45",
                    "content": "For now, yes. So we could document the contract name, indicate that the permission is full, and the function name that will actually be used. Something like this:  Contract: DSS_VEST_SAS  Permission: MCD_VAT.*  Usage: MCD_VAT.suck()   Later this can be extended by adding restrictions that would be enforced by a gateway contract. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.583333333333334
                },
                {
                    "author_link": "https://forum.makerdao.com/u/LongForWisdom",
                    "index": "#8",
                    "likes": "1",
                    "time": "29/10/2021-11:58:47",
                    "content": "Three lines is pretty wordy. Would be nice to get it on a single line so I can list it below the relevant section in the copy (assuming this isn\u2019t automated by @dux-core-unit) ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.4732142857142865
                },
                {
                    "author_link": "https://forum.makerdao.com/u/wouter",
                    "index": "#9",
                    "likes": "4",
                    "time": "29/10/2021-12:00:17",
                    "content": "Yeah, I didn\u2019t mean it as the literal way of displaying the info. Just indicating the elements that can be included. And yes, manual process first and then having it as part of the UI would be wonderful. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5625
                },
                {
                    "author_link": "https://forum.makerdao.com/u/system",
                    "index": "#10",
                    "likes": "0",
                    "time": "12/11/2021-12:00:26",
                    "content": "This topic was automatically closed 14 days after the last reply. New replies are no longer allowed. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0606060606060606
                }
            ]
        }
    ]
}