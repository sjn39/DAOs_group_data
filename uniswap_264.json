{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148",
            "title": "Cross-Chain Bridge Assessment Process ",
            "index": 20148,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://gov.uniswap.org/u/devinwalsh",
                    "index": "1",
                    "likes": "11",
                    "time": "28/01/2023-15:09:14",
                    "content": "The tentative deadline to provide feedback on the process below is Friday, February 17th. This date may be pushed back further, if required for further feedback and iteration. (Date updated from a previous version of this proposal) Hi all, as I mentioned in the BSC Deployment Proposal comments, it is clear that cross-chain proposals, and specifically the choice of which bridge to use, can be improved for all governance stakeholders. We also note that the BSC Deployment process will continue to move forward with the steps stated in that comment. There is a Snapshot Poll to select a bridge going on now that will end on Tuesday Jan. 31. The final BSC Governance vote will kick off after that, with the selected bridge. As for the Assessment Process and Team, our proposal is as follows. Note we are seeking feedback on the process, as well as nominations for team members, and applications from bridge providers. The outputs and process below aim to:  Support delegates and community members in making informed decisions related to cross-chain deployments. Provide process clarity to bridge providers. Remove inefficiency in the governance process moving forward for all governance stakeholders.   Deliverables We believe the deliverables below would be beneficial to the Uniswap community as a whole. The UF will support a process that will generate the following:  An extensive review of bridge providers which: a. Verifies key information about the bridge (template below) b. Identifies risk vectors to Uniswap governance, assigning them a risk level (Green, Yellow, Red) Recommendation of one or multiple approaches in which to select bridge providers (and/or agnostic solution(s)) per deployment moving forward. This approach, or approaches, should be actionable in the short term in order to cater to cross-chain proposals put forth prior to the BSL expiry on April 1st, or shortly thereafter. This could take a number of forms, including for example diversifying deployments across a set of trusted bridges (on a 1/n basis, or otherwise). Recommendation of one or multiple ways in which this team, or others, may continue to monitor bridge risk and support the community in the governance process on an ongoing basis. Recommendation of one or multiple ways in Uniswap governance may approach bridging over a longer-term timeframe.   Process To create the deliverables above, we propose the following process: Selection of a team of 4 engineers and 1 project manager  These individuals should be available for 10-15 hours per week over the next few weeks to participate in the assessment process, and to write up their findings in a report to share with the community. Each engineer will be compensated $300/hour. The PM will be compensated $200/hour. These individuals should not be on a bridge team or have a vested interest in any bridge. If there are any remaining conflicts of interest, outside of being on a bridge team or having a vested interest in a bridge team, those should be disclosed. The UF will do the best it can to select a team with no conflicts of interest whatsoever. However, we note that it is likely that those who are most adept at inspecting bridges and similar solutions may now or in the past have worked with a bridge or related team in some fashion in the past (I.e., bridge aggregator teams). If an otherwise fantastic candidate has some conflict, that will be disclosed upon the announcement of the team.  The UF plans to select the engineers who will be participating in the group. Selection criteria for the engineers will include the following: relevant technical experience, understanding of bridge architectures and potential risk vectors, and alignment with Uniswap\u2019s interests. For the PM role, selection criteria will include organizational skills, experience with technical writing, context into bridge architectures and potential risk vectors, and alignment with Uniswap\u2019s interests. The UF has a shortlist of candidates already, and we would love for additional candidates to be proposed in the forum below. For those who wish to nominate themselves, please post the following information in the forum below: a. Name, affiliation, Twitter handle b. Qualifications as they relate to the criteria stated above, stated briefly c. Explanation of why you are interested in becoming a member of this team We will wait to finalize the team selection process until community feedback has been provided and incorporated through at least February 17th. In the interim we are excited for candidates to raise their hands and introduce themselves.  Selection of a set of bridges to review. This list should include, to start, deBridge, Celer, Wormhole, LayerZero, and the bridge-agnostic solutions which have been proposed thus far (for example, Kydo\u2019s MMA design and Celer\u2019s Multi bridge implementation) To be included in the assessment, a bridge must:  Be launched on mainnet, and have audits completed by at least two audit firms Answer the questions listed below in the forum. Please post responses to the question directly, do not alter the format of your response from Q&A. (We ask deBridge, Celer, Wormhole, LayerZero, and the developers of agnostic solutions to provide answers below to consolidate information for the assessment team - previous responses from BSC forum post may be used if relevant.)  Pay $5,000 in USDC to the Uniswap Foundation, to cover part of the payment to the assessment team, prior to the assessment beginning. The intention of this fee is to test a compensation model for this team to provide governance support on an ongoing basis. Alternative solutions such as the agnostic solutions cited above will be included in the assessment.  An assessment process: engineers should review the answers to the questions on the bridges in the comments below, then take steps to verify that information through a review of developer documentation, audits, smart contracts directly, and discussions with the bridge team. Further diligence into other risk vectors which may not be directly addressed in the questions below should be conducted by the team as well. Previous discussions in the forum  (for instance, the chain on Other Internet\u2019s UGM process) may also be reviewed for added context. A report, published to the community. This report should include the 3 deliverables listed above.  Timeframe We propose the following timeframe for the process described above: Through Friday, Feb. 17 (or further into the future, as mentioned above)   Community provides feedback on the proposal suggested above.  Bridges submit their interest in being considered by answering the questions below in the forum.  Assessment team candidates respond in the forum below with the information required (Name, affiliation, Twitter handle, fulfillment of criteria, interest). We have proposed steps below by which applicants will be chosen for the final team, though we may receive community feedback to adjust this process prior to February 17th.  Wednesday, Feb. 23  Announce the final process to be used, incorporating community feedback (this may include adjustments to the team selection process) Announce the list of bridges to be considered Announce the list of assessment team members  Monday, March 20 Initial reviews of all bridges conducted. Monday, March 27 Final report published with community recommendations.  Team Member Application  Phase 1 Please provide the following information in the comments below. a. Name, affiliation, Twitter handle b. Qualifications as they relate to the criteria stated above, stated briefly c. Explanation of why you are interested in becoming a member of this team  Phase 2 We propose that final team members should be chosen in the following manner. We are open to receiving feedback on this approach, and welcome that feedback in the comments below.  Each applicant (without any disqualifying characteristics, for instance close association to a bridge team) has a 30 minute interview with the Uniswap Foundation team. Each applicant provides a referral to vouch to the applicant\u2019s ability to effectively fulfill this role. UF confirms applicant\u2019s independence, to the extent possible. UF selects final team members. UF provides an explanation as to why each team member was chosen.   Bridge Questions Please answer all these questions for the current deployed version of your bridge in a comment below. Your response should directly answer these questions in Q&A format - please do not alter the format of your response.  List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance. How long has the system been running on mainnet? How much value has the system secured? (Current TVL, total transaction volume) Provide a background on your team. Please link your developer documentation. Does the bridge support arbitrary message passing? Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? Is there a bug bounty program? List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. Do any contracts have an owner or owner-like entity? If so, what can the owner do? What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. Provide any additional information you would like here.  ",
                    "links": [
                        "https://snapshot.org/#/uniswap/proposal/0x6b8df360fdf73085b21fdf5eef9f85916fbde95621a3d454cb20fbe545ffc852",
                        "https://gov.uniswap.org/t/rfc-uniswap-universal-governance-module/16829",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/86",
                        "https://gov.uniswap.org/t/temperature-check-accountability-committee-proposal/20579",
                        "https://gov.uniswap.org/t/rfc-accountability-committee-proposal/20316/11",
                        "https://gov.uniswap.org/t/deploy-uniswap-v3-on-avalanche/20587/16",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/92",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/77",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/93",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/98",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/99",
                        "https://gov.uniswap.org/t/rfc-ammended-deployment-proposal-process/20777",
                        "https://gov.uniswap.org/t/deploy-uniswap-v3-on-avalanche/20587/7",
                        "https://gov.uniswap.org/t/deploy-uniswap-v3-on-avalanche/20587",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/88",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/85"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.369777628032345
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Kydo",
                    "index": "2",
                    "likes": "8",
                    "time": "28/01/2023-20:11:04",
                    "content": " Multi-Message-Aggregation (MMA) A General Design for Multi-Bridge Governance.  Abstract Multi-Message-Aggregation (MMA) is a message aggregation method for Uniswap to securely relay governance instructions from Ethereum to another chain. Instead of making one bridge provider the default message relayer, MMA relies on multiple bridge providers and a group of signers. This design offers more security than any one bridge and is designed for governance-related tasks. Moreover, this design is relatively engineering-lite and can be implemented in a reasonable time.  Compared to the existing design Compared to the Universal Governance Model by @AlexSmirnov @modong , this design does not rely on an algorithmically onchain selecting function. We believe this mechanism should be reserved for future implementation due to 1) its potentially long engineering time, 2) new attack surface/bugs due to increased code complexity, and 3) the difficulty to standardize messaging formats across bridge providers. Instead, we delegate this algorithmic function to a 11/15 multisig. The multisig will select the message which will be executed. This way, we believe while keeping the contract complexity and engineering time low, we can still achieve high-security guarantees.  MMA Design  1102\u00d7742 46.3 KB  The MMA design can be split into three parts. Ethereum, the destination chain, and the off-chain world. On Ethereum, it is made up of the Uniswap Governance Complex (refers to the smart contracts that Uniswap relies on to issue governance actions) and individual bridge endpoints. In the off-chain world, there are bridge providers and multisig signers. On the destination chain, there are bridge endpoints, a message selection contract, and Uniswap contracts. On Ethereum, once a governance proposal is approved and is related to deployments on other chains, the governance complex will send messages to each individual bridge endpoints for relaying to the destination chain(s). For simplicity, we will assume we are only sending governance message to one destination chain, but the concept is the same when sending to multiple chains. This design will not change the current voting process but would require the governance payload to be modified if cross-chain governance is involved. Once the message reached the endpoint on the Ethereum side, each bridge provider will handle relaying the message to the destination chain independently. Once the bridge provider relayed the message to the destination chain\u2019s endpoint, the endpoint will send the message into the Message Selection Contract. The multisig will then select which message to execute and submit a transaction executing the message on the destination chain. We are recommending an 11/15 Safe multisig. The rough implementation of the Message Selection Contract can be found here.  723\u00d7590 86.8 KB   Security Two kinds of malicious activities could surface: 1) fradulent governance message and 2) withholding attack. A fradulent governance message is a governance message that got executed on the destination chain but was not approved by the Ethereum Uniswap Governance Complex. This can happen if and only if an adversary took control of one or more of the bridge providers AND more than 11 of the multisig signers. The adversary would first need to use the bridge provider to pass in a fradulent governance message into the Message Selection Contract and then use the 11 of the signers to approve the transaction to be executed. We believe this is unlikely to happen because hacking 11 independent signers and a bridge provider is not economically profitable to attack the governance bridge. A withholding attack is when more than 4 of the multisig signers or all of the bridge providers refuse to sign or relay the message. Bridge\u2019s withholding attack would be a concern if Uniswap has only one bridge provider; however, given we have three in this example, simultaneous withholding attacks from the bridge providers would be extremely unlikely. Multisig signers\u2019 withholding attack could be more likely given the small subset of the participants involved. To address this problem, we should have a governance process to elect only the reputable governance delegate for this multisig role; alternatively, we could increase the total multisig size to make a withholding attack harder to coordinate.  Summary We proposed a cross-chain governance mechanism, Multi-Message-Aggregation (MMA). This design aggregates messages relayed by bridge providers and a group of multisig signers select which message from the set to execute. MMA aims to be an intermediary solution for cross-chain governance between relying on one bridge provider and algorithmically aggregating multiple bridge providers. The security guarantee of MMA is also higher when compared to a single bridge provider. We would love to hear thoughts from other technical members within the Uniswap ecosystem on MMA and the potential security vulnerability or engineering difficulties involved. ",
                    "links": [
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/3/38697865663a409f93424a094934098dfcc12e08.png",
                        "https://hackmd.io/@kydo/r1eWSpZnj",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/2/2b1433e078cf200cb50ed88641cfc38d27ce1717.png",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/86",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/92"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.303631553631554
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Kydo",
                    "index": "3",
                    "likes": "2",
                    "time": "28/01/2023-20:15:57",
                    "content": "After discussion with some members of the community, we also realized that the Safe multisig module and its corresponding front-end might not be available on some chains and could seriously limit the security assumption of this model. Therefore, we would love to see if there is an alternative approach to address this vulnerability. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.333333333333333
                },
                {
                    "author_link": "https://gov.uniswap.org/u/modong",
                    "index": "4",
                    "likes": "7",
                    "time": "31/01/2023-15:10:44",
                    "content": " A Multi-bridge Implementation for Uniswap Governance is Now Available This post includes the implementation of a multi-bridge Uniswap governance solution that is vendor-lock-in-free for Uniswap community to consider. This solution is strictly better than choosing a single bridge in terms of security and availability. In addition, it also retains the strongest bargaining power in the hands of Uniswap community to always receive the best services. See this for more context. The implementation combines both Celer and Wormhole and is open-sourced here   github.com   sgn-v2-contracts/contracts/message/apps/multibridge at multibridge \u00b7... multibridge/contracts/message/apps/multibridge Smart Contracts for Celer State Guardian Network (SGN) V2 and cBridge V2 - sgn-v2-contracts/contracts/message/apps/multibridge at multibridge \u00b7 celer-network/sgn-v2-contracts      All other bridges/cross-chain solutions such as LayerZero can be added easily via adapters. A testnet deployment is done. Setup:  Source Chain: Avalanche Fuji testnet Destination Chain: BSC testnet  The reason we did not use Ethereum Goeril is that there is no available generic relayer from @Wormhole on Goeril and Wormhole team has not responded to us in assisting things.  Cross-chain solutions used: Celer, Wormhole Contract addresses: \u2013 MultiBridgeSender Fuji 0x5a5F095183241f4B23a7Aa7f8949fd02D06CaeCf \u2013 CelerSenderAdapter fuji 0x243b40e96c6bF21511E53d85c86F6Ec982f9a879 \u2013 WormholeSenderAdapter fuji 0x0cb93b5c42437FE78b3697740D15b46707f97361 \u2013 MultiBridgeReceiver bsctest 0x207fF5290Bb518D963CF0a62B371B5B2dB6943A2 \u2013 CelerReceiverAdapter bsctest 0x37D2F4DCb5986ce2639bd66B022dcb9e3879156c \u2013 WormholeReceiverAdapter bsctest 0xa5711D74780527484Be167bA3052eD3700d52B1D \u2013 UniswapV3Factory bsctest 0x0bEC2a9E08658eAA15935C25cfF953caB2934C85   Test results:  Source chain transaction: Avalanche Transaction Hash (Txhash) Details | SnowTrace  Destination Chain tx1: message from wormhole: Binance Transaction Hash (Txhash) Details | BscScan  Destination Chain tx2: message from celer and execute the governance call: Binance Transaction Hash (Txhash) Details | BscScan   Now let\u2019s get to the solution specification.  Send Cross-Chain Messages through Multiple Bridges This is a solution for cross-chain message passing without vendor lock-in and with enhanced security beyond any single bridge. A message with multiple copies are sent through different bridges to the destination chains, and will only be executed at the destination chain when the same message has been delivered by a quorum of different bridges. The current solution are designed for messages being sent from one source chain to multiple destination chains. It also requires that there is only one permitted sender on the source chain. This would be the use case for Uniswap governance contract on Ethereum calling remote functions of contracts on other EVM chains.  Workflow  Send message on source chain To send a message to execute a remote call on the destintion chain, sender on the source chain should call remoteCall() of MultiBridgeSender, which invokes sendMessage() of every bridge sender apdater to send messages via different message bridges. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Source chain                                                                                            \u2502 \u2502                                                                                                         \u2502 \u2502                                                             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502                                                         \u250c\u2500\u2500\u25ba\u2502 Bridge1 Adapter \u251c\u2500\u2500\u25ba\u2502 Bridge1 Contracts \u2502 \u2502 \u2502                                                         \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                                         \u2502                                               \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510remoteCall()\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510sendMessage()\u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Caller \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 MultiBridgeSender \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u25ba\u2502 Bridge2 Adapter \u251c\u2500\u2500\u25ba\u2502 Bridge2 Contracts \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                                         \u2502                                               \u2502 \u2502                                                         \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502                                                         \u2514\u2500\u2500\u25ba\u2502 Bridge3 Adapter \u251c\u2500\u2500\u25ba\u2502 Bridge3 Contracts \u2502 \u2502 \u2502                                                             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                                                                                         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   Receive message on destination chain On the destination chain, MultiBridgeReceiver receives messages from every bridge receiver adapter. Each receiver adapter gets encoded message data from its bridge contracts, and then decode the message and call receiveMessage() of MultiBrideReceiver. MultiBridgeReceiver maintains a map from bridge adapter address to its power. Only adapter with non-zero power has access to receiveMessage() function. If the accumulated power of a message has reached the a threshold, which means enough number of different bridges have delivered a same message, the message will be executed by the MultiBrideReceiver contract. The message execution will invoke a function call according to the message content, which will either call functions of other contracts, or call the param adjustment functions of the MultiBridgeReceiver itself. Note that the only legit message sender is the trusted dApp contract on the source chain, which means only that single dApp contract has the ability to execute functions calls through the MultiBridgeReceiver contracts on different other chains. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Destination chain                                                                                          \u2502 \u2502                                                                                                            \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                \u2502 \u2502 \u2502 Bridge1 Contracts \u251c\u2500\u2500\u25ba\u2502 Bridge1 Adapter \u251c\u2500\u2500\u2510                                                             \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502                                                             \u2502 \u2502                                              \u2502                                                             \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502receiveMessage()\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 call()  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Bridge1 Contracts \u251c\u2500\u2500\u25ba\u2502 Bridge2 Adapter \u251c\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 MultiBridgeReceiver \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Receiver \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                              \u2502                                                             \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502                                                             \u2502 \u2502 \u2502 Bridge2 Contracts \u251c\u2500\u2500\u25ba\u2502 Bridge3 Adapter \u251c\u2500\u2500\u2518                                                             \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                \u2502 \u2502                                                                                                            \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   Add new bridge and update threshold Below are steps to add a new bridge (e.g. Bridge4) by the dApp community.  Bridge4 provider should implement and deploy Bridge4 adapters on source chain and all destination chains. The adapter contracts should meet the following requirements.  On the source chain, the sender adapter should only accept sendMessage() call from MultiBridgeSender. On the destination chain, the receiver adapter should only accept messages sent from the Bridge4 sender adapter on the source chain, and then call receiveMessage() of MultiBridgeReceiver for each valid message. Renounce any ownership or special roles of the adapter contracts after inital parameter setup.   Bridge4 provider deploy and open source the adapter contracts. dApp community should review the code and check if the requirements above are met. dApp contract (Caller) on the source chain adds the new Bridge4 sender adapter to MultiBridgeSender on the source chain by calling the addSenderAdapters() function of MultiBridgeSender. dApp contract (Caller) on the source chain adds the new Bridge4 receiver adapter to MultiBridgeReceiver on the destination chain by calling the remoteCall() function of MultiBridgeSender, with arguments to call updateReceiverAdapter() of the MultiBridgeReceiver on the destination chain.  Updating quorum threshold is similar to configure a new bridge receiver adapter on destination chain. It requires a remoteCall() from the source chain Caller with calldata calling updateQuorumThreshold() of the MultiBridgeReceiver on the destination chain.  Example Use case: contract A on Goerli send message to contract B on BSC Testnet in order to call enableFeeAmount() for state change. Apply a 2-of-3 messages governance model with message bridge C, D and E.  Deployment and initialization  Deploy MultiBridgeSender on Goerli, set address of A as allowed caller. Deploy MultiBridgeReceiver on BSC Testnet. Each message bridge provider prepare their own SenderAdapter and ReceiverAdapter, named with a prefix of their bridge name. Take preparation of CSenderAdapter and CReceiverAdapter as an example.  Deploy CSenderAdapter on Goerli, set address of MultiBridgeSender as multiBridgeSender. Deploy CReceiverAdapter on BSC Testnet, set address of MultiBridgeReceiver as multiBridgeReceiver. Call updateReceiverAdapter() of CSenderAdapter, set address of CReceiverAdapter on BSC Testnet(chain id 97) as a valid ReceiverAdapter. Call updateSenderAdapter() of CReceiverAdapter, set address of CSenderAdapter on Goerli(chain id 5) as a valid SenderAdapter. Transfer ownership of CSenderAdapter and CReceiverAdapter to address(0).   Once all message bridges are ready, somehow let contract A call addSenderAdapters() of MultiBridgeSender with an address array of CSenderAdapter, DSenderAdapter and ESenderAdapter. Call initialize() of MultiBridgeReceiver, with an address array of CReceiverAdapter, DReceiverAdapter and EReceiverAdapter, and power threshold 2.   Sending your message Prepare a calldata for contract B for calling enableFeeAmount(), then somehow let contract A call remoteCall() of MultiBridgeSender with _dstChainId = 97, _target = <address of contract B> and _callData = <calldata you prepared>.  Result Imagine that the messages sent via C, D and E received by MultiBridgeReceiver on BSC Testnet in an order of 1.C 2.D 3.E. During receiving message sent via D, accumulated power reaches power threshold 2, which result in message execution(the calldata will be sent to contract B).  Notes to the community We are more than happy to answer any questions, help with tests, collaborate with similar-minded builders like @AlexSmirnov, iterate based on feedbacks and provide audits from community selected firms. Although Celer, being a 2018-vintage project, does not have the backing of large UNI-holding investors at this moment, we do trust the integrity and intelligence of all the Uniswap delegates to choose this positive-sum path that ensures the highest level of security and service quality for Uniswap\u2019s multi-blockchain expansion. ",
                    "links": [
                        "https://github.com/celer-network/sgn-v2-contracts/tree/multibridge/contracts/message/apps/multibridge",
                        "https://github.com/celer-network/sgn-v2-contracts/tree/multibridge/contracts/message/apps/multibridge",
                        "https://github.com/celer-network/sgn-v2-contracts/tree/multibridge/contracts/message/apps/multibridge",
                        "https://testnet.snowtrace.io/address/0x5a5F095183241f4B23a7Aa7f8949fd02D06CaeCf",
                        "https://testnet.snowtrace.io/address/0x243b40e96c6bF21511E53d85c86F6Ec982f9a879",
                        "https://testnet.snowtrace.io/address/0x0cb93b5c42437FE78b3697740D15b46707f97361",
                        "https://testnet.bscscan.com/address/0x207fF5290Bb518D963CF0a62B371B5B2dB6943A2",
                        "https://testnet.bscscan.com/address/0x37D2F4DCb5986ce2639bd66B022dcb9e3879156c",
                        "https://testnet.bscscan.com/address/0xa5711D74780527484Be167bA3052eD3700d52B1D",
                        "https://testnet.bscscan.com/address/0x0bec2a9e08658eaa15935c25cff953cab2934c85",
                        "https://testnet.snowtrace.io/tx/0xa6f2b3af99773f6d03b5b31b37e95732366fbe6d25a5c2dc6358ab88860047a0",
                        "https://testnet.bscscan.com/tx/0x2db8178ce5130945fee24fc7da3d5273921234dd6fa10655f5baaea6f90cb2f5",
                        "https://testnet.bscscan.com/tx/0xfbb0680033a841cadf197cf6b85f5794f764f2edeb27192353edd3cf668987fe",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/261fe55b320393a1336156b5771867a36db43198/contracts/message/apps/multibridge/MultiBridgeSender.sol#L28-L40",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/261fe55b320393a1336156b5771867a36db43198/contracts/message/apps/multibridge/MultiBridgeSender.sol#L28-L40",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/60706f4eb6a179a9518bccf8408299f42a44f988/contracts/message/apps/multibridge/MultiBridgeReceiver.sol#L78-L88",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/60706f4eb6a179a9518bccf8408299f42a44f988/contracts/message/apps/multibridge/MultiBridgeReceiver.sol#L90-L99",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/1cbc2a3038463e7569b1a459c3519c7fcfeaaa4a/contracts/message/apps/multibridge/MultiBridgeSender.sol#L12",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/1cbc2a3038463e7569b1a459c3519c7fcfeaaa4a/contracts/message/apps/multibridge/adapters/CelerSenderAdapter.sol#L12",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/1cbc2a3038463e7569b1a459c3519c7fcfeaaa4a/contracts/message/apps/multibridge/adapters/CelerReceiverAdapter.sol#L34",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/1cbc2a3038463e7569b1a459c3519c7fcfeaaa4a/contracts/message/apps/multibridge/adapters/CelerSenderAdapter.sol#L42",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/1cbc2a3038463e7569b1a459c3519c7fcfeaaa4a/contracts/message/apps/multibridge/adapters/CelerReceiverAdapter.sol#L60",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/1cbc2a3038463e7569b1a459c3519c7fcfeaaa4a/contracts/message/apps/multibridge/MultiBridgeSender.sol#L74",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/86"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5083250083250075
                },
                {
                    "author_link": "https://gov.uniswap.org/u/modong",
                    "index": "5",
                    "likes": "5",
                    "time": "01/02/2023-04:39:43",
                    "content": "A testnet deployment is done. Setup:  Source Chain: Avalanche Fuji testnet Destination Chain: BSC testnet  The reason we did not use Ethereum Goeril is that there is no available generic relayer from @Wormhole on Goeril and Wormhole team has not responded to us in assisting things.  Cross-chain solutions used: Celer, Wormhole Contract addresses: \u2013 MultiBridgeSender Fuji 0x5a5F095183241f4B23a7Aa7f8949fd02D06CaeCf \u2013 CelerSenderAdapter fuji 0x243b40e96c6bF21511E53d85c86F6Ec982f9a879 \u2013 WormholeSenderAdapter fuji 0x0cb93b5c42437FE78b3697740D15b46707f97361 \u2013 MultiBridgeReceiver bsctest 0x207fF5290Bb518D963CF0a62B371B5B2dB6943A2 \u2013 CelerReceiverAdapter bsctest 0x37D2F4DCb5986ce2639bd66B022dcb9e3879156c \u2013 WormholeReceiverAdapter bsctest 0xa5711D74780527484Be167bA3052eD3700d52B1D \u2013 UniswapV3Factory bsctest 0x0bEC2a9E08658eAA15935C25cfF953caB2934C85   Test results:  Source chain transaction: Avalanche Transaction Hash (Txhash) Details | SnowTrace  Destination Chain tx1: message from wormhole: Binance Transaction Hash (Txhash) Details | BscScan  Destination Chain tx2: message from celer and execute the governance call: Binance Transaction Hash (Txhash) Details | BscScan   Happy to answer any questions! ",
                    "links": [
                        "https://testnet.snowtrace.io/address/0x243b40e96c6bF21511E53d85c86F6Ec982f9a879",
                        "https://testnet.snowtrace.io/address/0x0cb93b5c42437FE78b3697740D15b46707f97361",
                        "https://testnet.bscscan.com/address/0x207fF5290Bb518D963CF0a62B371B5B2dB6943A2",
                        "https://testnet.bscscan.com/address/0x37D2F4DCb5986ce2639bd66B022dcb9e3879156c",
                        "https://testnet.bscscan.com/address/0xa5711D74780527484Be167bA3052eD3700d52B1D",
                        "https://testnet.bscscan.com/address/0x0bec2a9e08658eaa15935c25cff953cab2934c85",
                        "https://testnet.snowtrace.io/tx/0xa6f2b3af99773f6d03b5b31b37e95732366fbe6d25a5c2dc6358ab88860047a0",
                        "https://testnet.bscscan.com/tx/0x2db8178ce5130945fee24fc7da3d5273921234dd6fa10655f5baaea6f90cb2f5",
                        "https://testnet.bscscan.com/tx/0xfbb0680033a841cadf197cf6b85f5794f764f2edeb27192353edd3cf668987fe"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.333333333333333
                },
                {
                    "author_link": "https://gov.uniswap.org/u/AlexSmirnov",
                    "index": "6",
                    "likes": "4",
                    "time": "01/02/2023-09:47:38",
                    "content": "Hi Mo, great job by the Celer team on developing the implementation! In deBridge, we reviewed the developed code, and it looks good and fits the design that we proposed earlier. We will prepare a PR with an adapter for the deBridge infrastructure by tomorrow and will ask our security audit partner Halborn to perform a security audit of the developed code ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.8999999999999995
                },
                {
                    "author_link": "https://gov.uniswap.org/u/asselstine",
                    "index": "7",
                    "likes": "12",
                    "time": "01/02/2023-16:51:46",
                    "content": "Hi all! I\u2019m Brendan from PoolTogether. We also had a need for a chain-agnostic bridging standard. We didn\u2019t want to write bespoke code for every single bridge, so we worked with others to design an ERC to standardize the call structure. ERC-5164: Cross-Chain Execution was developed in partnership with Hop Protocol and others. This ERC is designed to be a bridge-agnostic standard for communicating with smart contracts across bridges. PoolTogether has written ERC-5164 wrappers for:  Optimism Arbitrum Polygon  The implementation was audited by C4. Check out pooltogether/ERC5164 on Github. Hop Protocol V2 will be launching soon and will include ERC-5164 messaging. I believe V2 will support messaging between 15 different chains. Binance Smart Chain may be one of them; but I don\u2019t know. Edit: I\u2019ll ping the team No matter what cross-chain execution solution Uniswap opts for, it would be great for us to rally around ERC-5164 so that we can leverage each other\u2019s efforts and avoid vendor lock-in. Ideally the Uniswap engineers or bridges can build ERC-5164 adapters. ",
                    "links": [
                        "https://github.com/pooltogether/ERC5164",
                        "https://twitter.com/hop_intern/status/1620303967086604289",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/92"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.016071428571429
                },
                {
                    "author_link": "https://gov.uniswap.org/u/cwhinfrey",
                    "index": "8",
                    "likes": "6",
                    "time": "01/02/2023-19:05:52",
                    "content": "Hi all, we\u2019d love to see ERC-5164 used here and it\u2019s been a pleasure working with Brendan, Pierrick, and the rest of the PoolTogether folks on this. We hope ERC-5164 facilitates greater composability and competition amongst bridges and prevents bridge lock-in. Ultimately, this is healthy for the space and we think Hop can succeed on its own merits. We\u2019re really excited about Hop v2 and the Hop Core Messenger. We believe it\u2019s currently the only bridge that provides users and LPs with the full economic security of the network they\u2019re on. As much as we\u2019d love to see Hop used by Uniswap for Ethereum <> BSC messaging, it\u2019s likely not a good fit right now. Hop currently has the same dependency as Uniswap and relies on an existing message bridge with Ethereum for a network to be supported. If Hop were to add BSC support, we\u2019d have the same discussion and analyze the same solutions discussed above. The chosen solution would act as a replacement for the native message bridge typically seen in rollup designs which Hop was built for. I do think the solutions discussed above are good enough for Uniswap\u2019s use case given Uniswap\u2019s tightly-scoped governance controls but likely have not achieved the level of trustlessness needed for Hop\u2019s use case which involves the full custody of Hop-controlled assets on the spoke network. Down the road, if Uniswap has a need for sending trustless spoke-to-spoke messages, spoke-to-Ethereum messages, or synchronizing state across all networks, this is where the Hop Core Messenger and various messaging systems built on top can add the most value. In the meantime, we\u2019ll be releasing some open-source contract libraries that may be useful, will continue to support the ERC-5164 initiative, and are eager to help here where we can. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.949756784434204
                },
                {
                    "author_link": "https://gov.uniswap.org/u/AlexSmirnov",
                    "index": "9",
                    "likes": "4",
                    "time": "02/02/2023-19:51:47",
                    "content": " Integration of deBridge Adapter into Multi-Bridge Implementation In deBridge, we\u2019d like to express our support for a multi-bridge Implementation developed by Celer team. We made a pull request (PR) where developed an adapter that adds support for deBridge infrastructure into the proposed multi-bridge framework. To test out integration, we performed a mainnet deployment of all smart contracts in BNB and Polygon Chains and made a test updateQuorumThreshold() operation initiated in the MultiBridgeSender contract in BNB Chain and successfully settled in the MultiBridgeReceiver Polygon. Transaction details can be found in deBridge explorer. The source code and additional details are available here:  github.com/celer-network/sgn-v2-contracts         Added deBridge adapters   celer-network:multibridge \u2190 debridge-finance:multibridge              opened 04:19PM - 02 Feb 23 UTC                 artyukh               +752 -0       # Added deBridge adapters  - DeBridgeSenderAdapter - DeBridgeReceiverAdapter \u2026  MockCaller with AccessControl was added. This contract allows auth wallets to call remoteCall and is needed only for test env.  # Added deploy script  - 000_mock_caller (Not use for prod) - 001_multi_bridge_sender (Need to set real caller for prod) - 002_multi_bridge_receiver - 003_debridge_sender - 004_debridge_receiver - 005_multibridge_setup (configured for deBridge adapters)  ## Deployment dev env Contracts deployed in BNB, Polygon chain and configured to send message on two way. BNB=>Polygon, Polygon=>BNB # Addresses  | Smart Contract  | BNB Chain | Polygon Chain | -- | -- |-- | |MockCaller| [0x51Ac7715b912B7ed1A0aB7897581b242F612501f](https://bscscan.com/address/0x51Ac7715b912B7ed1A0aB7897581b242F612501f#code) |[0x51Ac7715b912B7ed1A0aB7897581b242F612501f](https://polygonscan.com/address/0x51Ac7715b912B7ed1A0aB7897581b242F612501f#code) | |MultiBridgeSender| [0x60b72b6b18D9E7a1054E12045D6759491f29583d](https://bscscan.com/address/0x60b72b6b18D9E7a1054E12045D6759491f29583d#code)|[0x60b72b6b18D9E7a1054E12045D6759491f29583d](https://polygonscan.com/address/0x60b72b6b18D9E7a1054E12045D6759491f29583d#code)| |MultiBridgeReceiver| [0x164fb25a73f4FF03d96E86Aa2501BF86aE801f6a](https://bscscan.com/address/0x164fb25a73f4FF03d96E86Aa2501BF86aE801f6a#code) |[0x164fb25a73f4FF03d96E86Aa2501BF86aE801f6a](https://polygonscan.com/address/0x164fb25a73f4FF03d96E86Aa2501BF86aE801f6a#code) | | DeBridgeSenderAdapter | [0xA151bFc6cb938A98A5BfADa67856f0Ed503E9A73](https://bscscan.com/address/0xA151bFc6cb938A98A5BfADa67856f0Ed503E9A73#code) |[0xA151bFc6cb938A98A5BfADa67856f0Ed503E9A73](https://polygonscan.com/address/0xA151bFc6cb938A98A5BfADa67856f0Ed503E9A73#code) | | DeBridgeReceiverAdapter | [0x6fFb8E52A5775c51fc6E6E0678C815B93B068B71](https://bscscan.com/address/0x6fFb8E52A5775c51fc6E6E0678C815B93B068B71#code) |[0x6fFb8E52A5775c51fc6E6E0678C815B93B068B71](https://polygonscan.com/address/0x6fFb8E52A5775c51fc6E6E0678C815B93B068B71#code) |  # Chains - BNB Chain [56] - Polygon Chain [137]  Deployed smart contracts are configured only with deBridge adapters now, but any other bridges can be easily added to the same deployment.  # Test The test transaction performs an update of the quorum threshold in the destination chain.  Caller make a call to `remoteCall()` of `MultiBridgeSender` with calldata calling `updateQuorumThreshold()` of `MultiBridgeReceiver`, in order to initiate update of quorum threshold in Polygon chain from BNB Chain:  Transfered message  ``` { \"bridgeName\":\"deBridge\" \"callData\":\"0x6e8b48190000000000000000000000000000000000000000000000000000000000000046\" \"dstChainId\":137 \"nonce\":0 \"srcChainId\":56 \"target\":\"0x164fb25a73f4ff03d96e86aa2501bf86ae801f6a\" } ``` [Cross-chain message in deExplorer](https://app.debridge.finance/transaction?tx=0x33ecebfe8592d3879a1e48cb734dd61ceee450e5556180cf9c851643741c01de&chainId=56) [Initiate update of the Quorum from BNB Chain](https://bscscan.com/tx/0x33ecebfe8592d3879a1e48cb734dd61ceee450e5556180cf9c851643741c01de) [Execute message and update Quorum in Polygon](https://polygonscan.com/tx/0x37c39387c549831b80fe2c1dff30b8151f1bab198bc927c6198080270b5fa7ff) ![](https://i.imgur.com/M1Fbf7g.png)       We would like to encourage all bridge teams that support multi-bridge Implementation to make similar pull requests, adding their bridge adapter to the framework  Advantages of multi-bridge implementation Beyond what was previously mentioned by @modong, there are a few more benefits to the multi-bridge approach:  In order to add an adapter, every bridge team will have to perform a code review of the developed implementation. This helps to improve security by having more pairs of eyes on the code. Each bridge team should perform the integration and develop the adapter before the start of the assessment process, that allows the assessment team to use the source code and deployed implementation of the adapter to better understand the design of the bridge and review how integration will work in practice. The multi-bridge solution is versatile and can increase security, even for blockchain ecosystems with a canonical bridge, which is just one of the bridges participating in the framework. In the event of a problem or vulnerability in the canonical bridge, malicious messages or proposals can be prevented as confirmations from non-canonical bridges are still required.   Community feedback I also wanted to comment on the following points which @Kydo raised above:     Kydo:   its potentially long engineering time, 2) new attack surface/bugs due to increased code complexity, and 3) the difficulty to standardize messaging formats across bridge providers     The multi-bridge solution turned out to be relatively simple and not much different from vendor-locked integration. Complexities of each specific bridge integration are abstracted into adapters that are developed by each bridge team who wants to join the framework. Like with a single bridge integration, the code should undergo thorough testing by the community and pass security audits. The advantage of the proposed solution is that standardization is achieved through adapters developed by each bridge team, providing a standardized approach across all bridges.  We\u2019d love to hear feedback from @kydo and other community members on potential risks and problems of proposed implementation as well as ideas of what can be improved.  Request for Code Reviews and Security Audits Code reviews and security audits for the solution would help to assess security risks of the developed implementation. If no significant issues or requests for improvements are identified within next 7 days, we will be ready to initiate and cover the cost of a security audit by Halborn. ",
                    "links": [
                        "https://github.com/celer-network/sgn-v2-contracts/pull/232",
                        "https://github.com/celer-network/sgn-v2-contracts/pull/232",
                        "https://github.com/artyukh",
                        "https://github.com/celer-network/sgn-v2-contracts/pull/232/files",
                        "https://github.com/celer-network/sgn-v2-contracts/pull/232"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.578456265956266
                },
                {
                    "author_link": "https://gov.uniswap.org/u/jkol",
                    "index": "10",
                    "likes": "0",
                    "time": "02/02/2023-20:28:58",
                    "content": "Hey all, Asa and Jon from Hyperlane here. We believe that Uniswap\u2019s governance bridge selection criteria should prioritize safety and lack of vendor lock-in. Since this is a governance based use-case, the clear parameter to optimize for in this case is safety, while others such as speed or cost are irrelevant. Given this we are in clear support for the Multi Message Aggregator (MMA) design proposed by @Kydo , and previously by others such as @blockchaincolumbia and several bridge providers. Below, we make the case for support for the MMA, and how the MMA design can be implemented with Hyperlane.  Safety via defense-in-depth With respect to safety, believe the most important principle is defense-in-depth, a principle championed by the proposals from Kydo, Blockchain@Columbia, and others. In our opinion, the best approach to defense-in-depth is to aggregate the security models of multiple bridge providers as proposed by the MMA, as well as to optionally include security provided by elected members of the Uniswap community (e.g. via a Gnosis Safe). As far as we can tell (and we are very biased), Hyperlane is the only platform that is able to provide this aggregation natively.  Bridge aggregation with Hyperlane Interchain Security Modules With Hyperlane, users such as Uniswap can specify custom Interchain Security Modules (ISMs), smart contracts which contain the logic to verify their interchain messages. This allows Uniswap to, for example, specify an ISM that requires the following:  Verification of the message by Wormhole Verification of the message by Axelar 4/6 signatures from Hyperlane validators unaffiliated with Uniswap (including well known entities such as Staked, Blockdaemon, Everstake, ZeePrime, and ZK Validator) n/m signatures from Hyperlane validators run by designated members of the Uniswap community*  It\u2019s worth noting that Hyperlane is the only interoperability provider that currently has this type of modular security architecture already in production. The Multisig ISM can be used today, without any additional development required. Additionally the required infrastructure has been open-sourced and there are comprehensive guides and documentation for its operation. Work on the Aggregation ISM has already begun irrespective of Uniswap\u2019s assessment process, as the system was designed to allow for the simple and fast implementation of new security modules. An example for the interface can be seen here: /**  * @notice Manages an ownable set of ISMs that must all verify an interchain  * message before it is accepted.  */ contract AggregationISM is IInterchainSecurityModule, Ownable {   using AggregationIsmMetadata for bytes;   using EnumerableSet for EnumerableSet.AddressSet;      EnumerableSet.AddressSet private _isms;    function addIsm(address _ism) public onlyOwner {     require(_isms.add(_ism));   }    function removeIsm(address _ism) public onlyOwner {     require(_isms.remove(_ism));   }    function verify(bytes calldata _metadata, bytes calldata _message)     public     view     returns (bool)   {     for (uint256 i = 0; i < _isms.length(); i++) {       IInterchainSecurityModule _ism = IInterchainSecurityModule(_isms.at(i));       require(_ism.verify(_metadata.at(i), _message);     }     return true;   } }  Uniswap governance would be able to modify this ISM\u2019s configuration over time (or change ISMs entirely). Potential changes to the ISM config include but are not limited to:  Require a message to pass through an optimistic security model Add additional bridge providers to the aggregation Require particular messages to also be approved by a Gnosis safe** Modify the unaffiliated-with-Uniswap and/or affiliated-with-Uniswap validator sets  *Running a Hyperlane validator simply requires an AWS account, and RPC connection, and a machine to run on, and can be set up in ~30 minutes without any capital expenditures. **This is, in-effect, similar to adding an additional Hyperlane validator set, but with fully offline keys  Vendor lock-in If Uniswap were to use Hyperlane for interchain governance, our recommendation would be to use the Interchain Accounts API, an interchain application built on top of Hyperlane\u2019s core messaging layer. Interchain Accounts extend the control of an account on a local chain (e.g. Ethereum), allowing it to make arbitrary function calls on remote chains. Because Interchain Accounts allow for arbitrary function calls, choosing Hyperlane today to implement the MMA would not prevent Uniswap from migrating to a different solution tomorrow, and it provides the easiest way for Uniswap to incorporate new security options as they materialize, as they each can be expressed as a new ISM. To avoid confusion, we will make a separate post answering the 13 questions submitted by the Foundation. ",
                    "links": [
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/99"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.570116054158607
                },
                {
                    "author_link": "https://gov.uniswap.org/u/drinkcoffee",
                    "index": "11",
                    "likes": "1",
                    "time": "03/02/2023-04:42:23",
                    "content": "Ermyas Abebe, Arjun Chand, and I (Peter Robinson) think that the assessment process should use the Crosschain Risk Framework. For me, when I try to put a link in I get an error saying \u201clinks aren\u2019t allowed\u201d. The Crosschain Risk Framework is available at this website: crosschainriskframework dot github dot io Anyone can contribute to the website by submitting a pull request to the associated github repo. Using github means that the discussions about issues with the framework are open and transparent. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://gov.uniswap.org/u/ermyas",
                    "index": "12",
                    "likes": "1",
                    "time": "03/02/2023-07:08:53",
                    "content": "Hi all, Adding to Peter\u2019s post above: The Crosschain Risk Framework is a document that aims to provide a high-level systematic overview of the security risks in crosschain protocols by identifying, classifying, and analyzing risks inherent in their design, implementation, and operation. In addition, it offers a set of risk controls and best practices to mitigate the likelihood and severity of such risks. The document doesn\u2019t directly analyze individual protocols but offers a general toolkit for reasoning about crosschain protocols. Hence, we think it could be very helpful to the efforts of the working group that will be tasked with assessing and recommending paths forward for Uniswap. The document builds on a lot of excellent prior work by numerous folks and is still a work in progress. We\u2019d highly value community contribution and feedback. ",
                    "links": [
                        "https://crosschainriskframework.github.io/reference/ref/"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.042307692307692
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Zellic",
                    "index": "13",
                    "likes": "3",
                    "time": "05/02/2023-10:11:38",
                    "content": "Dear Uniswap community, I\u2019d like to put forth Zellic as a strong candidate as a technical expert in the selection of a cross-chain solution for Uniswap governance. Our experience with two of the largest bridges, LayerZero and Wormhole makes us a valuable asset to the team. Beyond just that, we have a deep understanding of cross-chain technology in general.  Introducing Zellic Zellic is a smart contract auditing firm with extensive experience in the blockchain security industry. We have consulted and audited both Wormhole and LayerZero, two of the largest bridge contenders. We\u2019ve worked with them in-depth, from war rooms to pull requests. In February 2022, we reverse-engineered a large cross-chain security incident with samczsun. Apart from Wormhole and LayerZero, Zellic has worked with a range of clients, including Aptos Labs, Mysten Labs, SushiSwap, and the Solana Foundation, among others. Our commitment to security is reflected in our wide range of clients, who trust us to secure their code.  Our Team Jasraj \u201cJazzy\u201d Bedi, Zellic\u2019s CTO, will be the engineer representing Zellic. Jazzy is a renowned blockchain security expert and the founder of the world\u2019s former #1 CTF (competitive hacking) team Perfect Blue. Jazzy has expertise in general bridge architecture. As he led the audits for both Wormhole and LayerZero, Jazzy already has a deep understanding of both codebases. If selected, Jazzy will also immediately ramp up on the rest of the contenders. Jazzy\u2019s socials:  Twitter: ret2jazzy  GitHub: ret2jazzy   Zellic socials:  Twitter: zellic_io  GitHub: zellic  Website  We are happy to work pro bono, as our mission at Zellic is to protect as much TVL as possible. The choice of bridge provider by Uniswap is significant for the entire crypto industry.  Conflicts of Interest Ethics are our pillar. As previously mentioned, we work with both Wormhole and LayerZero. Nonetheless, we are committed to impartiality, objectivity, and fairness. Before all else, we are a security audit provider. Our job is to provide objective assessments. We will work to ensure the best solution for Uniswap governance is selected, regardless of individual bridge(s). We believe that Zellic is the right choice for this job, and we\u2019re excited to participate in the assessment process. We look forward to hearing back from the community and contributing to the best of our abilities. ",
                    "links": [
                        "https://ctftime.org/team/53802",
                        "https://twitter.com/ret2jazzy",
                        "https://github.com/ret2jazzy",
                        "https://twitter.com/zellic_io",
                        "https://github.com/zellic",
                        "https://zellic.io"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.059098639455782
                },
                {
                    "author_link": "https://gov.uniswap.org/u/modong",
                    "index": "14",
                    "likes": "4",
                    "time": "06/02/2023-03:18:22",
                    "content": "    AlexSmirnov:  In deBridge, we\u2019d like to express our support for a multi-bridge Implementation developed by Celer team. We made a pull request (PR) where developed an adapter that adds support for deBridge infrastructure into the proposed multi-bridge framework.   PR from @AlexSmirnov at deBridge is now merged. This is yet another proof that a multi-bridge solution is simple to integrate and extend. Given the current discussion and voting on the proposal, we think it is an optimal time to revisit this multi-bridge solution. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://gov.uniswap.org/u/philippzentner",
                    "index": "15",
                    "likes": "10",
                    "time": "06/02/2023-10:57:53",
                    "content": " Proposed Implementation of a Multi-Bridge, Agnostic Solution Over the past few months, LI.FI (a bridge aggregator supporting 13 bridges) has been closely monitoring the development in Uniswap\u2019s Forum related to the BNB Chain Deployment Proposal, its subsequent Snapshot Poll which ended on Jan 31, and the current on-chain vote in favor of implementing Wormhole. While we applaud the interest shown by key stakeholders of the crypto ecosystem in finding a suitable bridging solution for Uniswap\u2019s Cross-Chain Governance, we strongly recommend that Uniswap not select one bridge provider for its BNB Chain Deployment Proposal. Specifically, we do not believe the BNB Chain Deployment Proposal should move forward before more research can be done, even if this may come as a letdown to many community members \u2013 be it bridge builders or other individuals. Instead, we urge the Uniswap Foundation and the Uniswap community to fully immerse themselves in the Cross-Chain Assessment Process outlined by @devinwalsh. While the sprint to move to BNB Chain before the business license expires is important, we believe finding a long-term solution for cross-chain governance to be far more important than the short-term win of deploying V3 code first. There will be new chains, new versions of Uniswap, but there will never be another chance to expand governance safely and securely on the first try. Uniswap is a market leader in design (AMMs), token structure (airdrops), and overall competency, and LI.FI believes that the model Uniswap chooses for cross-chain governance has a high chance of becoming industry standard. We \u2013 as members of the crypto industry \u2013 want to see this done the correct way, and from the start. Bridges, specifically arbitrary messaging bridges (AMBs), are in the nascent stages of development. Short-term, Wormhole, LayerZero, Celer, Axelar and deBridge are certainly viable solutions for cross-chain governance and have received substantial traction in terms of volume at the liquidity layer and development by dApps at the messaging layer. That being said, we at LI.FI have done the research on AMBs (Navigating Arbitrary Messaging Bridges) and have delved deeply into the pros and cons of eight different AMB solutions. Our conclusion is simple: no single AMB is tested enough to be considered a robust and secure solution that a project of Uniswap\u2019s size can solely rely on at this point. If there was a single, obvious AMB solution that could be trusted by Uniswap, then this forum post would not be necessary. Lest it be forgotten, two major AMBs were exploited in the past twelve months (Nomad and Wormhole), while LayerZero has also come under fire recently for its security model (Prestwich, L2Beat). We do not say this as condemnation, rather, we point this out to highlight just how difficult it is to build secure AMBs and the subsequent risks a dApp is exposed to by choosing a single bridging solution. In addition to this sentiment, we believe AMBs like Axelar, Synapse, Hyperlane, Multichain, Connext Amarok, and Hop deserve to be considered by Uniswap and the deadline of two and half weeks is too short for them to be formally introduced, debated, and voted upon again. To summarize, LI.FI stands staunchly behind the concerns previously raised by @Kydo, @AlexSmirnov, and @modong. LI.FI believes that a multi-bridge, agnostic approach is best suited for Uniswap cross-chain governance because of the following reasons:  By picking one bridging solution, Uniswap will be selecting a winner in a niche that is perhaps yet to find the most optimal solution, resulting in a lack of innovation going forward and a dominance by the AMB that will not help the space move forward in the right direction. With bridges, trust is a spectrum, and all the AMBs make different trade-offs resulting in unique strengths and weaknesses. However, when it comes to Uniswap\u2019s use case of cross-chain governance, security can never be a trade-off. This is where a multi-bridge solution comes in to overcome these trust trade-offs, offering better security than any one bridging solution. Aggregating the best, most trusted AMBs will be in the best interest of the Uniswap community as, irrespective of shortcomings in any individual bridge, Uniswap will always receive the best services required for cross-chain governance.  So, where do we go from here? More research is in order, which we believe should be two-pronged. 1. Cross-Chain Bridge Assessment Framework We would like to add our own feedback to Devin\u2019s framework and add an additional step to the process. The MMA solution or any other multi-bridge solution is built on the idea of Uniswap choosing multiple bridges as \u201cadapters.\u201d The first thing to do, therefore, is to determine which bridges meet Uniswap standards, as outlined by @devinwalsh. We believe that Uniswap should first build a unique framework to both quantitatively and qualitatively measure and allow for the ranking of different bridge solutions by the engineering team. This would decrease the workload of the engineering team by letting them focus on stress-testing bridge solutions without having to create the parameters of such a test themselves. As one of the largest players in DeFi, Uniswap has the chance to create the de facto bridge assessment criterion. By our estimation, there are four bridge framework solutions currently in the ether.   Crosschain Risk Framework \u2013 created by ConsenSys & LI.FI   L2 Beat Bridge Risk Framework \u2013 created by L2Beat  Assessing Blockchain Bridges \u2013 created by Joel John  With Bridges, Trust Is a Spectrum: A Quantified Framework \u2013 created by LI.FI and CryptoStats  Uniswap has the chance to build upon, combine, and quantify the works of four major research pieces without having to start from scratch. With that in mind, we recommend that Devin\u2019s initial Cross Chain Bridge Assessment make room for four researchers, who can help build this framework to assist the engineering team, who can then test out different bridging solutions based on the criteria mentioned in the framework and select which bridges make the cut to become a part of the multi-bridge solution. The researchers will then explain the decision of the team through easy to digest articles, which can be used by other builders to assess bridges for their own dApps and by users to expand their knowledge of bridges and make more informed decisions when it comes to choosing a bridging solution for their needs. To this end, collaborations with other public good infrastructure projects like L2BEAT, Ethereum.org, among others, should also be considered to spread awareness and educate the public about bridges. As Devin laid out, these individuals should be available for 10-15 hours per week over the next few weeks to participate in the assessment process, and to write up their findings in a report to share with the community. To this end, we recommend Peter Robinson, Arjun Chand, Ermyas Abebe, and Bartek Kiepuszewski (though we believe Uniswap should have the final call here). We believe the current timeframe is aggressive but doable. However, if the list of bridges were to expand, we would recommend pushing back the March 27th date.  826\u00d7445 22.2 KB  2. Consideration of Making the Universal Governance Model an EIP Uniswap pushing for a cross-chain governance EIP would be net positive for the industry, in our opinion, specifically in the context of a multi-bridge solution. Such an EIP would give dApps a shared template for creating safe, secure governance modules, while also giving flexibility for dApps to choose different bridging solutions based on their security, time, and cost preferences. To that end, we believe that Uniswap should create and propose a new cross-chain EIP based on the design outlined by Mo Dong from Celer and Alex from deBridge (with, of course, any tweaks recommended by the engineering and research team).  1035\u00d7540 116 KB  Additionally, there are two EIPs and one forum post that Uniswap should consider learning from and building upon in addition to the framework above.   EIP 5164, as explained by Brendan Asseltine, is a PoolTogether and Hop-backed EIP looking to standardize governance message passing. While EIP 5164 is not a perfect fit for Uniswap \u2013 it proposes that all bridges provide the same interface to apps so that apps can just build against this interface and choose one bridge later \u2013 it does provide insight into the difficulties that EIP writers will have in coming up with a single design.  EIP 6170, is a common smart contract interface for interacting with messaging protocols.  Principled approach to bridges, proposes block header based bridges.  In our estimation, none of these solutions have captured enough mindshare to become industry standard. However, they have all pushed the envelope in what can be done in standardizing messaging, and Uniswap could learn much from it. We recommend that Uniswap employ the same four-engineering team to standardize the MMA solution as an EVM-compatible EIP. Given Uniswap\u2019s position and influence in the ecosystem, it has the power to push an EIP that can potentially become the de-facto solution for any project indulging in cross-chain governance. Conclusion A multi-bridge, agnostic solution that the community invests resources into is a win-win-win for all the parties involved (Uniswap, bridging solutions, and the dApps that will implement this solution for cross-chain governance in the future). As Devin said, the developments as a result of the proposed deployment on BNB Chain are net-positive for the ecosystem. Open discussions about bridge designs and frameworks for assessing security risks associated with them are exactly what we need to fast-forward the maturity of the bridging solutions and enable development of secure bridges. We look forward to the feedback of the UF and the community on our proposal. ",
                    "links": [
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/44",
                        "https://snapshot.org/#/uniswap/proposal/0x6b8df360fdf73085b21fdf5eef9f85916fbde95621a3d454cb20fbe545ffc852",
                        "https://www.tally.xyz/gov/uniswap/proposal/31",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148",
                        "https://gov.uniswap.org/u/devinwalsh",
                        "http://LI.FI",
                        "http://LI.FI",
                        "https://blog.li.fi/navigating-arbitrary-messaging-bridges-a-comparison-framework-8720f302e2aa",
                        "https://twitter.com/_prestwich/status/1620089892087947264",
                        "https://twitter.com/l2beat/status/1611008135086411779",
                        "http://LI.FI",
                        "https://gov.uniswap.org/u/kydo",
                        "https://gov.uniswap.org/u/alexsmirnov",
                        "https://gov.uniswap.org/u/modong",
                        "http://LI.FI",
                        "https://blog.li.fi/li-fi-with-bridges-trust-is-a-spectrum-354cd5a1a6d8",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/2",
                        "https://gov.uniswap.org/u/devinwalsh",
                        "https://crosschainriskframework.github.io/",
                        "http://LI.FI",
                        "https://gov.l2beat.com/t/l2bridge-risk-framework/31",
                        "https://mirror.xyz/0xD4977DF3e967ddb604bB4f4D0d263f69B6c8A3e4/uPhBOMcQQ-TeY2n0naf3M8aLQnb04X2YcO41eaWpFN4",
                        "https://blog.li.fi/with-bridges-trust-is-a-spectrum-a-quantified-framework-57d2dd622cfd",
                        "http://LI.FI",
                        "http://Ethereum.org",
                        "https://www.linkedin.com/in/peter-robinson-98a0061?miniProfileUrn=urn%3Ali%3Afs_miniProfile%3AACoAAAAtvfoBDEiaZmLtfUzOG5LyjH8NYmT1G2A&lipi=urn%3Ali%3Apage%3Ad_flagship3_detail_base%3BszigyC2jTjOJxfERcQ5eNA%3D%3D",
                        "https://twitter.com/arjunnchand",
                        "https://www.linkedin.com/in/ermyas-abebe/",
                        "https://twitter.com/bkiepuszewski",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/7/737e19eb5417af767e1bf3424d0d4b661124413d.png",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/48",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/9/946426899f4f9820404a30c98b116a793bf9df65.jpeg",
                        "https://ethereum-magicians.org/t/eip-5164-cross-chain-execution/9658",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/7",
                        "https://eips.ethereum.org/EIPS/eip-6170",
                        "https://ethresear.ch/t/a-principled-approach-to-bridges/14725"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.762626576322228
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Multichain",
                    "index": "16",
                    "likes": "2",
                    "time": "16/02/2023-11:04:10",
                    "content": "Hi everyone, Multichain here. Multichain is an infrastructure developed for arbitrary cross-chain interactions. We are secured by MPC and ZKP, and we are envisioned to be the ultimate router for Web3. We sincerely hope that we can help and contribute to the Uniswap community by working together with you. And here are the answers to the 15 questions from us: 1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance. a. The most significant reason for Multichain\u2019s superior security is its foundation in Secure Multi-Party Computation (SMPC), a theory developed and validated by some of the world\u2019s most renowned cryptographers. The key algorithm implemented at the heart of Multichain\u2019s cross-chain bridge and router is the Threshold Signature Scheme (TSS). These nodes are independent entities that can collectively sign transactions. Using a Distributed Key Generation algorithm, each node independently owns part of the private key shards. The complete set of private keys will never appear, let alone the possibility of being revealed. This can avoid single points of failure, and enhance decentralization and security. The underlying MPC structure design, combined with a wealth of experience in building cross-chain bridges and an abundant supply of liquidity, allows us to offer the cheapest cross-chain fees as well. b. We are proud to have created the largest cross-chain infrastructure ecosystem, with over 3000 bridges built for our partners and support for more than 80 networks, including both well-known EVM chains and non-EVM chains. Our platform has an excellent number of daily active users, especially on BNB chain. We believe that our strong presence in the BNB community will greatly benefit Uniswap users who are looking to expand their network reach. c. Innovation is at the core of Multichain\u2019s mission, and we are proud to be the pioneers in cross-chain technology. We were the first to establish a bridge in the crypto space, and we continue to innovate with the launch of RouterV3, which enables native asset bridging. We also led the way in NFT bridging and developed the cross-chain message protocol, anyCall. Most recently, we launched zkRouter, which offers users the option to utilize ZK technology, in addition to our MPC option. Our commitment to innovation and exploration means that the Uniswap community can expect even more exciting developments from Multichain in the future. 2. How long has the system been running on mainnet? Multichain was born on July 20th, 2020, under the name Anyswap. We have been running on the mainnet for 2 years, 6 months. Our focus has always been on addressing the need for distinct and diverse blockchains to communicate with each other seamlessly. From the outset, our main product has been the asset cross-chain bridge, which has undergone several iterations and was later upgraded to become the core cross-chain solution, Router. We also developed an NFT cross-chain solution, which further expanded the capabilities of our platform. At Multichain, we are committed to building and improving our cross-chain infrastructure to provide the best possible experience for our users. In addition to promoting interoperability across different networks and facilitating smooth asset and value transfers, Multichain also enables seamless data and message transmission across chains. In April 2022, Multichain launched anyCall, a general cross-chain messaging protocol that allows for arbitrary cross-chain messaging. Multichain has been running successfully for almost three years now. Earlier this year, we released the zkRouter whitepaper, which is an important component of Multichain\u2019s inter-chain trust layer public infrastructure. In the near future, applications (such as cross-chain bridges) built on zkRouter will be available to the public. 3. How much value has the system secured? (Current TVL, total transaction volume) a. Bridge & Router TVL\uff1a$1.78 B b. Total transaction volume: $ 97.73 B 4. Provide a background on your team. As an exceptional international team, the members of Multichain share a common vision and contribute their unique skills to the project. Established in 2020, Multichain comprises experts from diverse backgrounds in engineering, cryptography, economics, and mathematics. The team is united in their pursuit of becoming the ultimate Web3 router. The technical members have extensive experience in the blockchain industry and have collaborated for over a decade. Notably, Andre Cronje serves as the architecture advisor of Multichain and is widely recognized as a pioneer in the field of decentralized finance (DeFi). In 2020, Cronje created yearn.finance and Keep3rV1, in addition to contributing to other notable DeFi projects. Moreover, he has played a critical role in shaping Multichain\u2019s technical architecture designs. Multichain has also garnered numerous contributors from MultiDAO. The DAO is dedicated to achieving the Multichainverse and supporting Multichain in its mission. 5. Please link your developer documentation. a. https://docs.multichain.org/getting-started/introduction b. https://multidao.gitbook.io/anycall/the-latest-version/v7/how-to-integrate-anycall-v7 6. Does the bridge support arbitrary message passing? Yes. We do offer a cross-chain messaging protocol called anyCall, which has been operating reliably for over a year. Our esteemed partners, such as Curve, have leveraged anyCall to enhance their cross-chain LP rewards distribution governance.  Under the hood, anyCall is powered by the MPC network, and its security is fortified by MPC cryptography. In addition, we have recently introduced zkRouter testnet, which allows messages to be transmitted in a trustless and decentralized manner. By incorporating ZK technology with advanced cryptography and mathematics, zkRouter has eliminated the dependence on trust in the cross-chain process. Compared to other cross-chain bridges in the space, zkRouter provides a new level of security that\u2019s unparalleled. 7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? Multichain has completed comprehensive audits on all of our products, and we are pleased to make the audit reports available to the public. Audit reports can be seen here: GitHub - anyswap/Anyswap-Audit. Our audit report repository contains a total of 13 third-party audits, including those conducted by esteemed companies in web3 such as TrailOfBits, CertiK, SlowMist, and BlockSec. The audits identified primarily contract issues, though their severity was generally low. We encourage you to review the aforementioned audit report repository for further details. Any vulnerabilities identified during the audit process have been remedied and reviewed by the auditing companies. Security is one of the highest priorities at Multichain. Multichain has built long-term partnerships with world-leading third-party code auditing companies to conduct code auditing of every version or important update of codes. Multichain also has dedicated 10% of its revenues to a security insurance fund and has two bug bounty programs \u2014 one with Immunefi and the other internal. Multichain has established an academic alliance with leading international cryptography experts who specialize in threshold signature algorithms and MPC in order to keep up with recent advancements in related technologies and drive technological progress. 8. Is there a bug bounty program? Yes. We have partnered with Immunefi to establish a bug bounty program of up to $2 million. In addition, we have set up a dedicated security mailbox to receive bug disclosures that do not meet the requirements of the Immunefi plan. Furthermore, we have established security partnerships with other industry partners, such as Binance & Multichain\u2019s War Room, to share information about vulnerabilities and security experiences and to create stronger security measures for the industry. To date, we have issued bug rewards totalling more than $2 million, which has effectively raised the security level of Multichain products. We have also created a security fund to alleviate users\u2019 concerns about security during cross-chain transactions. 9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. We do not have upgradeable portions for security reasons. This is to prevent contracts from being accidentally or maliciously upgraded by attackers, potentially leading to asset loss or abnormal functions. By disabling the upgrade feature, we ensure that the contracts remain secure and stable. 10. Do any contracts have an owner or owner-like entity? If so, what can the owner do? One of the fundamental design principles of Multichain cross-chain contracts is to minimize single-point risks and reduce the attack surface. Unlike traditional contracts, cross-chain contracts have no owner, which adds an extra layer of security. In fact, all Multichain addresses are generated and managed by the MPC network, eliminating the need for an individual or entity to hold ownership. Furthermore, these MPC addresses do not possess a private key, and as a result, there is no single point of failure or vulnerability. 11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? At present, our Bridge, Router, and AnyCall products are based on a distributed MPC network security model. Additionally, our latest development, zkRouter, is based on zero-knowledge proof technology. A distributed MPC network is a distributed asset control network implemented with cryptography. It aligns with the decentralized philosophy of blockchain, where nodes hold private key shards. When the number of nodes that agree to sign reaches a predefined threshold, multiple nodes collaborate to generate a signature, completing cross-chain asset or message transfers. It is important to note that the process of distributed key generation and signature generation ensures that the private key never appears in its complete form, and the security of the process is guaranteed by cryptographic algorithms. Furthermore, Multichain\u2019s MPC network uses a trusted execution environment (TEE) that offers dedicated security isolation hardware, further enhancing security. zkRouter, on the other hand, is based on zero-knowledge proof technology. It generates zero-knowledge proofs based on the source chain\u2019s consensus results, which are then passed on to the target chain for verification, thereby completing cross-chain transfers. The rigorous mathematical derivation and secure cryptography in the zero-knowledge proofs ensure that no one or entity can act maliciously, and as long as at least one honest participant is present in the system, cross-chain transfers can occur securely. Even in extreme case where all participants are malicious, the system cannot be compromised. In summary, a distributed MPC network is based on cryptography, while zkRouter is based on zero-knowledge proof technology, which combines cryptography and mathematics. 12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. Currently, Multichain\u2019s asset cross-chain bridge and router rely on the SMPC-based MPC Network to process cross-chain messages. The MPC Network is composed of independent nodes that verify the message status of the source chain and participate in the subsequent TSS execution based on their own verification results. TSS is a strong consensus determined by cryptography, which can only be completed when a threshold number of MPC nodes participate at the same time, otherwise, there is no result. Therefore, in order for an adversary to transmit incorrect messages from Ethereum to the target chain while Ethereum is running normally, he must first control an MPC node to initiate a TSS request and inject the incorrect information into the MPC network, thus forging the incorrect information. The execution of TSS then requires the adversary to simultaneously control more than 2/3 of the nodes in the MPC network to complete the action. Multichain has recently released a solution based on ZKP technology to solve the problem of trust in cross-chain communication called zkRouter. zkRouter relies on ZKP technology to generate proof of Ethereum\u2019s consensus result, and proof of any result not agreed upon by Ethereum\u2019s consensus cannot be generated and verified. The proof supports independent verification and can be completed by on-chain contracts after being passed to the target chain. In this case, an adversary cannot achieve his goal of tampering with information by attacking either the proof generator or the transmitter. The only path is to challenge the security strength of Ethereum\u2019s consensus mechanism and write incorrect information into Ethereum\u2019s consensus result by attacking Ethereum. 13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. Regarding the trust mechanism of MPC, under the normal operation of Ethereum, there are three ways to try to withhold governance information on Ethereum. The first way is to withhold the message from being transmitted to the MPC network, which will not trigger the execution of subsequent TSS. Since all MPC nodes can act as initiators of TSS requests, the adversary needs to disable the network of all nodes simultaneously, or attack or control all nodes simultaneously and make them refuse service or become paralyzed. The second way is to block the node\u2019s access to governance messages on Ethereum by disabling the node\u2019s network, attacking or controlling the node. If more than 1/3 of the nodes are blocked, the MPC Network cannot complete the TSS execution normally, thus achieving the adversary\u2019s goal of withholding governance messages on Ethereum. The third way is to control more than 2/3 of the MPC nodes after TSS generation and prevent them from sending the TSS result to the target chain to withhold governance messages. In future plans, the MPC Network will be upgraded to MPC Blockchain, and anyone can send the TSS result to the target chain, making it impossible to withhold governance messages from Ethereum through the TSS transmission path. Regarding the trust mechanism of zkRouter, there are also two ways for an adversary to withhold governance messages on Ethereum. The first way is to block zkRouter from successfully obtaining governance messages on chain, either by disabling the network of all Relayer nodes that obtains messages in zkRouter, or by controlling all Relayer nodes so that they cannot obtain or respond to governance messages. Or by disabling all node services that provide transaction queries on Ethereum, so that Relayer has no way to obtain governance messages. The second way is to disable Ethereum network and so that governance messages cannot be confirmed by consensus or Ethereum\u2019s consensus result is tampered with. Attacking the transmission of proof to the target chain in zkRouter is ineffective, as long as the target chain is working normally, anyone can send proof to the target chain. 14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behaviour and describe in words how slashing works in your system. The security of Multichain is upheld by the MPC network, a group of trusted nodes. Additionally, the application project has the flexibility to either run its own MPC node or choose a trusted node to form the TSS threshold. Running an MPC node requires a certain amount of veMULTI to be locked up. Multichain released the zkRouter. The main purpose of zkRouter is to solve the problem of inter-chain consensus verification. Unlike traditional consensus mechanisms that rely on node agreement, ZKP technology only requires one honest node to relay proofs for secure cross-chain communication. Malicious nodes cannot generate valid proofs, ensuring that the trustless security model can reduce dependence on trusted nodes. Once the conversion to zkRouter has been made, then the question of slashing would not apply. 15. Provide any additional information you would like here. How Multichain can contribute to the Uniswap community: a. zkRouter: Following the launch of zkRouter by Multichain, we plan to dedicate to upgrading the MPC bridge to zkRouter bridge specifically for the Uniswap community in the near future. b. BNB chain: Multichain offers a significant advantage on BNB. Currently, Multichain\u2019s TVL stands at $1.84 billion, with $326.24 million TVL on the BNB chain alone. This figure accounts for 17.73% of Multichain\u2019s overall TVL. Multichain\u2019s total volume on all supported chains is $97.78 billion, with $12.5 billion total volume on the BNB chain. This translates to a 12.78% share of Multichain\u2019s total volume, which is significant given the platform\u2019s overall size. Additionally, Multichain allows for easy integration with the BNB chain and supports connections to 30 other chains. Notably, a number of 900 tokens have been bridged to BNB chain via Multichain. When compared to other cross-chain bridges currently available in the market, Multichain stands out for its extensive support of public chains and asset types, as well as the vast scale of assets on its chain. In the case of BNB chain, Multichain\u2019s data outperforms other similar protocols by a large margin. Details can be seen in the figure below.  Screen Shot 2023-02-16 at 17.01.431912\u00d7434 160 KB  In summary, we are confident that Multichain has the potential to bring significant benefits to the Uniswap community and achieve great success. ",
                    "links": [
                        "https://medium.com/multichainorg/multichain-security-model-mechanism-f7a9e4541fe7",
                        "https://scan.multichain.org/#/charts/charts-home",
                        "https://scan.multichain.org/#/charts/charts-home",
                        "https://app.multichain.org/#/router",
                        "https://app.multichain.org/#/nft",
                        "https://anycall.multichain.org/",
                        "https://medium.com/p/941e9928fba0",
                        "https://anycall.multichain.org",
                        "https://twitter.com/AndreCronjeTech",
                        "https://docs.multichain.org/getting-started/introduction",
                        "https://multidao.gitbook.io/anycall/the-latest-version/v7/how-to-integrate-anycall-v7",
                        "https://anycall.multichain.org/",
                        "https://medium.com/multichainorg/curve-x-anycall-cross-chain-gauges-e657c1c6e5b5",
                        "https://github.com/anyswap/Anyswap-Audit",
                        "https://medium.com/multichainorg/multichain-security-fund-f7016aabf7ac",
                        "https://docs.multichain.org/getting-started/security/bug-bounty-immunefi",
                        "https://medium.com/multichainorg/fastmpc-mainnet-goes-live-running-in-a-decentralized-way-99f9fe2956b8",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/c/cf5e5c5a860c47c46cd5ec675652f2816e30bbcf.png"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.750479069859804
                },
                {
                    "author_link": "https://gov.uniswap.org/u/devinwalsh",
                    "index": "17",
                    "likes": "4",
                    "time": "16/02/2023-16:18:52",
                    "content": "Hi all, I want to clarify requirements for 1) bridge providers and 2) those who have built (or at this point, designed) bridge agnostic solutions. All applications (answering the 15 questions in the original post, below in a forum comment) must be submitted by tomorrow, Friday, February 17th. Payments to the UF multisig (0xe571dC7A558bb6D68FfE264c3d7BB98B0C6C73fC) must be made by next Friday, February 24th. Bridge providers must:  Be launched on mainnet, and have audits completed by at least two audit firms Answer the 15 questions listed in the forum. Please post responses to the question directly, do not alter the format of your response from Q&A. Pay $5,000 in USDC to the Uniswap Foundation (0xe571dC7A558bb6D68FfE264c3d7BB98B0C6C73fC), to cover part of the payment to the assessment team, prior to the assessment beginning. The intention of this fee is to test a compensation model for this team to provide governance support on an ongoing basis.  Bridge agnostic solutions:  No requirement to be launched on mainnet or have audits completed, as many of these solutions have been designed over the past few weeks. However, at minimum, a technical specification document must be provided. Answer the 15 questions listed in the forum. Please post responses to the question directly, do not alter the format of your response from Q&A. You may not have all answers yet, particularly if the solution has not yet been deployed. Where relevant, add caveats related to the current state of a solution\u2019s design or development. Pay $5,000 in USDC to the Uniswap Foundation (0xe571dC7A558bb6D68FfE264c3d7BB98B0C6C73fC), to cover part of the payment to the assessment team, prior to the assessment beginning. The intention of this fee is to test a compensation model for this team to provide governance support on an ongoing basis.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.197222222222222
                },
                {
                    "author_link": "https://gov.uniswap.org/u/priyeshugarg",
                    "index": "18",
                    "likes": "1",
                    "time": "16/02/2023-17:08:21",
                    "content": "# Integration of Router Protocol into Multi-Bridge Implementation Hi all, Priyeshu here from Router Protocol \u2014 one of the earliest cross-chain projects which started building the cross-chain interoperability layer in 2020. The governance on the subject of Uniswap governance is of seminal nature, which will lay the foundation of a cross-chain future. We strongly believe that the future is going to be cross-chain and Uniswap\u2019s governance layer is going to be the first large-scale implementation of a cross-chain messaging protocol. Last year bridges contributed to a lot of hacks and moving forward, large-scale adoption and usage after proper due diligence is needed to restore the trust of the wider community in bridges \u2014 because they are inevitable as different layer1s and layer2s emerge and continue to fragment communities and liquidity. We like the idea of the multibridge aggregator because that would enable the system to be more secure and the requirement of obtaining a quorum on top of the bridges without making Uniswap have to lock in with one bridge. The solution would be very relevant for high-value projects like Uniswap which have a large amount of liquidity to secure. Hence, we are raising a PR request to add Router Protocol into the Multi-Bridge implementation. The PR link is: added Router Protocol adapters by Shivam78288 \u00b7 Pull Request #235 \u00b7 celer-network/sgn-v2-contracts \u00b7 GitHub Some background about Router Protocol: We are a cross-chain interoperability layer backed by the likes of Coinbase, Polygon, and Wintermute. Our solution to the cross-chain problem is a PoS blockchain that validates all cross-chain transactions. So far Router Protocol has allowed over $800m in bridge volume to move through. Our auditors include Halborn Security, Hacken, and Oak Security. We also run a security bug bounty on ImmuneFi and have never had a security incident in our 1 year+ of mainnet due to robust security practices. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.805820105820105
                },
                {
                    "author_link": "https://gov.uniswap.org/u/amartin",
                    "index": "19",
                    "likes": "1",
                    "time": "17/02/2023-00:10:12",
                    "content": "Dear Uniswap community & @devinwalsh, I\u2019d like to nominate myself for the role of PM in the cross-chain bridge assessment process. I\u2019m Alex, one of the co-founders of The Cross Chain Coalition, the leading research & media community for cross chain development. Background Over the past year, our team has researched, analyzed, and reported on all bridges mentioned in the proposal. Given our commitment to understanding each solution in the space along with our history of education & research, I feel I\u2019d be an excellent addition to the committee. In the past year, the CCC has become a thriving community of 15,000+ members, made up of mostly developers and founders. To get us there, we\u2019ve successfully held IRL meetups and events attended by thousands of people across the globe. To spotlight cross chain builders and foster web3 adoption, we\u2019ve hosted demo days and events with numerous partners across Fortune 500 brands, most notably TechCrunch.  And to further highlight cross chain development, our weekly newsletter has grown into the must read Cross Chain development resource of the week. Our contributors come from over 30 projects to cover real time updates from builders in the space. The choice of bridge provider is important for Uniswap, but vitally influential for the entire crypto industry. I would love to represent the Cross Chain Coalition as the PM in this process. Conflicts of Interest I don\u2019t have any conflicts of interest here. The ethos of our community is to celebrate all progress made towards cross chain development. I don\u2019t have a dog in the fight - I\u2019ve been committed to fair reporting in our media assets & events. Our community contains members from each of the bridges mentioned, therefore representation is equally distributed! If any referrals are needed - feel free to hop in the community or talk to any of the cross-chain protocols themselves! Socials:  Twitter:  alexmartin_55 Telegram: amartin55  Community:  Twitter: crosschainco Telegram: crosschaincoalition Website: crosschaincoaliton . com Newsletter: crosschaindev on substack  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.072916666666667
                },
                {
                    "author_link": "https://gov.uniswap.org/u/priyeshugarg",
                    "index": "20",
                    "likes": "0",
                    "time": "17/02/2023-05:59:16",
                    "content": " Bridge Assessment answers by Router Protocol 1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.  PoS-based security: Router Chain is economically secured by validators. Strong BSC presence: Router has seen a strong presence on the BSC chain since its launch. Almost 27% of our transactions had BSC as either the source or destination chain. Strong focus on Research: We are exploring various composable security modules including Optimistic Rollups and ZKP to enhance the security of Router Protocol.  2. How long has the system been running on mainnet? Router Protocol\u2019s latest version Router V2 is on the devnet. However, it should be noted that Router Protocol\u2019s V1 has been on the mainnet since January 2022. Router V2 is \u2014 Router chain, a layer 1 blockchain that leverages tendermint\u2019s Byzantine Fault Tolerant (BFT) consensus engine. As a Proof of Stake (PoS) blockchain, the Router chain is primarily run by a network of validators with economic incentives to act honestly. The Router chain is built using the Cosmos SDK and encapsulates all the features of Cosmos, including fast block times, robust security mechanisms, and, most importantly, CosmWasm - a security-first smart contract platform. By leveraging the CosmWasm toolkit, developers can start building secure blockchain applications on the Router chain from scratch or port their existing applications to the Router chain with minimal overhead. The documentation is available here: https://devnet-docs.routerprotocol.com/ and the white paper is available here: Whitepaper 3. How much value has the system secured? (Current TVL, total transaction volume) Router protocol\u2019s V1 has had over 100k+ transactions since its launch with a transaction volume of over $630M. The current TVL in the ecosystem is around $526k.  1600\u00d7581 158 KB  Source: DeFiLlama 4. Provide a background on your team. The Router Protocol team comprises many industry veterans. The team is led by MIT alumnus Ramani Ramachandran. Ramani Ramachandran (Co-founder & CEO) Ramani Ramachandran (Ram) is the Founder and CEO of Router Labs, which runs Router Protocol. Ram has been in crypto since 2014. Prior to Crypto, Ram was in the financial services industry and spent time across various functions including product management, research, fundraising, and investments across the US, Europe, and Asia. Shubham Singh (Co-founder & CTO) Full-stack Developer and Technical Architect building in crypto and blockchain since 2016; Built a crypto-index (108token) as well as Fordex - the world\u2019s first stablecoin DEX. Chandan Choudhary (Co-Founder) Head of Strategy at Bitpolo, a leading Indian crypto exchange; Veteran trader and advisor across asset classes spanning over 15 years. Energy trader at Futures first; Managed crypto fund, generating 4x returns; Head of Ops & Market Research at Tradelab Priyeshu Garg ( Co-Founder ) Priyeshu leads the research and developer-relations wing at Router. Past stints include software engineering at Ola, crypto journalism at Cryptoslate and product at Qredo. Mankena Venkatesh (Blockchain Engineer) He is a core engineer at Router Protocol currently building Routerchain. He previously worked as a Blockchain engineer at Matic (now Polygon) and Injective protocol. Prof. Ashutosh Sahoo (Chief of Strategy & Marketing) Prof. Ashutosh Sahoo is a blockchain ecosystem growth specialist. Since 2021 he has been involved in building a trade finance protocol on blockchain, Polytrade, and Reef - a substrate-based Layer 1 as the Chief Growth Officer. Prior to his foray into blockchain and academia, Prof. Sahoo has held leadership roles for over 15 years in strategy , operations, sales and marketing functions in FMCG, IT, manufacturing and real estate industries with brands of global renown like Hewlett-Packard, Johnson & Johnson, Lodha Group, Trump Organization and Sobha Realty. 5. Please link your developer documentation. The documentation is available here: https://devnet-docs.routerprotocol.com/ and the white paper is available here: Whitepaper 6. Does the bridge support arbitrary message passing? Yes, we support arbitrary message passing. The best way to send arbitrary messages between different blockchains is Router CrossTalk. Router crosstalk is the framework that can be used to pass messages across chains. In simple terms, this library leverages Router\u2019s infrastructure to allow contracts on one chain to pass instructions to contracts deployed on another chain without needing to deploy any contracts on the Router chain. The library is structured in a way that it can be integrated seamlessly into your development environment to allow for cross-chain message passing without disturbing other parts of your product. 7. Has the currently deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? The V1 bridge was audited by multiple auditors - Halborn Security, Hacken, and Oak Security. All the vulnerabilities in the V1 architecture were fixed as part of the audit process. The current v2 architecture which we are proposing to use for this integration is still in devnet phase with testnet planned around April and Mainnet around July. We will be getting Router V2 audited by veteran auditors like Informal Systems, Oak security, Zokyo etc. 8. Is there a bug bounty program? We run a security bug bounty on ImmuneFi for Router v1 and the same will continue once we open up Router v2 for audit and security process. We have rewards upto $200,000 available for the Immunefi bug bounty program. 9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. As of now, the contract is upgradeable in the devnet phase. But on mainnet, it will be upgradeable with the \u2154 voting consensus on the router chain. Hence, effectively a governance vote will be required to upgrade contracts in the mainnet. 10. Do any contracts have an owner or owner-like entity? If so, what can the owner do? We do have an owner-like entity. It can only modify the base bridge fee that dApps need to pay for a cross-chain transaction on the source chain and do emergency pause. Pause is majorly added so that we can stop the bridge in case a chain is hacked for that particular chain. 11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? In Router v2, the Router chain acts as the bridge. Router chain is built using the cosmos SDK. Hence, it leverages tendermint\u2019s Byzantine Fault Tolerant (BFT) consensus engine. As a Proof of Stake (PoS) blockchain, the Router chain is primarily run by a network of validators with economic incentives to act honestly. The trust assumption is that there will be \u2154+1 validators who will act honestly. However, we will be providing customizability to dApps to add their own security layer on top of the PoS-based mechanism inherited by default from the Router chain. DApps can add optimistic layers as well to make their system more secure. 12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. For an adversary to pass a fraudulent message \u2014 they will have to control \u2154+1 stake of the Router consensus. The security is based on the PoS scheme. 13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. There are 2 ways to block the governance from Ethereum. The first way is by attacking the network of the orchestrators and making them paralyzed. This would mean that the request would never get created on the Router chain for further execution and hence, block the message from Ethereum to the destination chain. The second way is to gain control of \u2153 orchestrators / validators. If \u2153 or more validators are blocked from voting or vote incorrectly we will not be able to achieve consensus and hence. the message will not get executed on the destination chain. 14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. Validators have to stake $ROUTE tokens on the Router chain. Any validator having excessive downtime or engaging in any kind of malicious activity is penalized by having a portion of their staked ROUTE slashed. For attack vectors like double signing, validators liveness, we use cosmos sdk slashing module which is described here x/slashing | Cosmos SDK While for attack vectors like cross chain message tampering, message withholding etc we will be implementing our custom slashing mechanism which will be available in testnet phase in April. 15. Provide any additional information you would like here. Router is backed by some of the leading investors including Coinbase Ventures, Wintermute, QCP Capital, Polygon, and Woodstock Fund. ",
                    "links": [
                        "https://www.routerprotocol.com/whitepaper",
                        "https://explorer.routerprotocol.com/swap",
                        "https://defillama.com/protocol/router-protocol",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/5/597d2761266025de58194cdaed17a297b1d884ca.png",
                        "https://defillama.com/protocol/router-protocol",
                        "https://devnet-docs.routerprotocol.com/",
                        "https://www.routerprotocol.com/whitepaper",
                        "https://docs.routerprotocol.com/more-about-router-protocol/security/audits",
                        "https://immunefi.com/bounty/router/",
                        "https://docs.cosmos.network/main/modules/slashing#signing-info-liveness"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.846198156682028
                },
                {
                    "author_link": "https://gov.uniswap.org/u/ArjunChand",
                    "index": "21",
                    "likes": "4",
                    "time": "17/02/2023-12:11:11",
                    "content": "Greetings to the Uniswap community, I want to take this opportunity to nominate myself for the PM role in the Cross-Chain Assessment Process outlined by @devinwalsh. I\u2019m Arjun Chand, Research Lead at LI.FI (a bridge aggregator supporting 13 bridges). Background and Qualifications As a bridge aggregator, it\u2019s crucial that LI.FI understands the strengths and weaknesses of different bridges as this helps us decide what each bridge brings to the table and, at the same time, the trade-offs they\u2019ve made to be able to provide that functionality. Since the beginning, we\u2019ve invested time and resources into learning about bridges and educating users and developers about them. I\u2019ve been working with LI.FI as a Researcher since the company\u2019s inception and have spearheaded the Research efforts along with meaningful contributions in marketing and business development. In the past 1.5 years, we\u2019ve researched the bridging landscape extensively, publishing several articles, including:   Bridge analysis frameworks \u2013 We\u2019ve created frameworks to break down the different bridge types and help users and developers understand the various trade-offs they\u2019ve made.  \u2013 Navigating Arbitrary Messaging Bridges: A Comparison Framework \u2013 breakdown of all the differentiating messaging bridges (including all the bridges in review for this proposal) \u2013 With Bridges, Trust is a Spectrum: an analysis of different bridges\u2019 design trade-offs. We\u2019ve also worked on a quantified framework for the same. \u2013 Crosschain Risk Framework: a high-level systematic overview of the security risks in cross-chain protocols and a set of risk controls and best practices to mitigate the likelihood and severity of risks.   Bridge deep dives \u2013 we\u2019ve written comprehensive deep dives on bridges like Connext, Hop, Multichain, cBridge, Hyphen, Across, and others, covering their architecture and design, how they work, security assumptions, and features.   Bridge ecosystem overview articles that provide readers with a better understanding of the current bridging landscape and different concepts related to bridges.   \u2013 The Bridge Stack: a snapshot of the bridging industry. \u2013 What are Blockchain Bridges and How Can We Classify Them?: a breakdown of trusted vs. trustless bridges \u2013 Blockchain Bridges: everything you need to know about bridges (written for Ethereum.org)   Cross-Chain Insider Substack that provides weekly updates related to bridges and the multi-chain ecosystem along with simplified breakdowns of everything happening in the bridging ecosystem.  I believe we can build upon, combine, and quantify some of this work to build the Cross-Chain Bridge Assessment Framework for Uniswap. Closing Remarks I have spent the last 18 months learning about different bridge designs and their strengths and weaknesses. I have developed a good understanding of how they work and what each has to offer. I have no conflicts of interest here as LI.FI is a bridge aggregator, which means we\u2019re neutral and unbiased when selecting bridges, and I abide by these principles. I would love to contribute to building the Cross-Chain Bridge Assessment Framework and become a part of the bridge selection committee as the PM. Thank you! ",
                    "links": [
                        "https://gov.uniswap.org/u/devinwalsh",
                        "https://twitter.com/arjunnchand",
                        "https://docs.li.fi/",
                        "http://LI.FI",
                        "http://LI.FI",
                        "https://blog.li.fi/navigating-arbitrary-messaging-bridges-a-comparison-framework-8720f302e2aa?source=collection_home---------0----------------------------",
                        "https://blog.li.fi/li-fi-with-bridges-trust-is-a-spectrum-354cd5a1a6d8",
                        "https://blog.li.fi/with-bridges-trust-is-a-spectrum-a-quantified-framework-57d2dd622cfd",
                        "https://crosschainriskframework.github.io/",
                        "https://blog.li.fi/connext-network-a-deep-dive-13ce31586fe7",
                        "https://blog.li.fi/hop-protocol-a-deep-dive-5075eddc4dd",
                        "https://blog.li.fi/multichain-a-deep-dive-5eac87c8d064",
                        "https://blog.li.fi/celers-cbridge-a-deep-dive-864bea650cd0",
                        "https://blog.li.fi/biconomys-hyphen-a-deep-dive-40c13a6bb869",
                        "https://blog.li.fi/across-a-deep-dive-d0784f4a36b6",
                        "https://blog.li.fi/the-bridge-stack-2022-25291e1be17d",
                        "https://blog.li.fi/what-are-blockchain-bridges-and-how-can-we-classify-them-560dc6ec05fa",
                        "https://ethereum.org/en/bridges/",
                        "http://Ethereum.org",
                        "https://lifi.substack.com/",
                        "http://LI.FI"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.615421455938697
                },
                {
                    "author_link": "https://gov.uniswap.org/u/modong",
                    "index": "22",
                    "likes": "3",
                    "time": "17/02/2023-15:21:00",
                    "content": "Celer Network would like to submit our proposal and answer the listed questions. 1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.   Celer is secure.  Celer\u2019s protocol security design is comprehensive, built on Cosmos SDK which has been battle tested by many blockchains, including BNB Chain, Polygon PoS, and Cosmos. Celer\u2019s PoS validators are among the most trusted in the blockchain community. Additionally, Celer offers an optimistic-rollup-like security framework for Uniswap to ensure its security even in the event of total consensus failure. Celer has a flawless security track record and is the only cross-chain infrastructure with significant usage (>$5b in cross-chain volume) that has no critical vulnerabilities exploited or identified. Celer implements a comprehensive security monitoring and communication process. Celer DAO has a dedicated 24/7 security team that builds and maintains an automated security monitoring system. This team can immediately communicate with both the Uniswap and Celer communities in the event of any security incidents.    Celer has achieved remarkable adoption, attracting well-known names like Metamask and PancakeSwap who opted to integrate Celer after thoroughly evaluating available solutions. Additionally, Celer has become widely adopted for numerous use cases such as asset bridges, cross-chain governance, cross-chain NFT bidding, cross-chain yield farming, cross-chain perpetual futures liquidity provision, one-click cross-chain swaps, and NFT bridging, with over 1.31 million cross-chain messages processed. Celer\u2019s asset bridge, cBridge, supports 40 chains and 833 token bridges, facilitating $12.7 billion in cross-chain transaction volume and serving 333,000 unique addresses.   Celer remains dedicated to innovating towards a trust-free and open DeFi ecosystem. The Celer DAO and community developers have invested significant efforts in developing zk proofs. Soon, Celer will release a generalized messaging framework based on succinct proof of consensus. Furthermore, in the best interest of the Uniswap community and the broader DeFi ecosystem, Celer proposed a multi-messaging-aggregation solution. This proposal, supported by many delegates and industry participants, aims to establish a vendor-lock-in-free future for Uniswap and the entire DeFi ecosystem.   2. How long has the system been running on mainnet? Celer\u2019s cross-chain solutions were first launched in the form of an asset-only bridge in July 22nd, 2021. Building on this success, Celer released the generalized cross-chain messaging functionality on mainnet on April 15th, 2022. The core component of Celer\u2019s cross-chain solutions, the State Guardian Network, has been running on mainnet since November 2020. 3. How much value has the system secured? (Current TVL, total transaction volume) Current TVL: $215M Total Transaction Volume: $12.8 billion 4. Provide a background on your team. Celer was co-founded in 2018 by four industry veterans and entrepreneurs, each of whom holds a PhD from a prestigious institution like MIT, Princeton, UC Berkeley, and UIUC. Their security-first approach to development is rooted in their experiences securing critical networking infrastructure in Fortune 50 companies, safely operating the largest-scale Software Defined Network, and designing high-performance networking chips with zero tolerance for error. Today, the Celer Network developer community has grown to a global network of core contributors with a similar background, as well as a large community of ecosystem developers who build exciting cross-chain applications using Celer. Before expanding to a generalized interoperability protocol, Celer released the world\u2019s first Generalized State Channel Network, which laid the groundwork for its cross-chain efforts. 5. Please link your developer documentation. Please see the followings:   im-docs.celer.network    Celer IM Overview         cbridge-docs.celer.network    cBridge SDK      6. Does the bridge support arbitrary message passing? Yes, Celer supports arbitrary messaging, and its usefulness is exemplified by a number of high-impact use cases running on mainnet today. FutureSwap, for instance, uses Celer for its cross-chain governance, while PancakeSwap leverages Celer to allow users to provide liquidity on Ethereum and receive yield mining rewards on BNB Chain. Additionally, Celer has already developed, deployed and tested a Uniswap cross-chain governance system on testnet, which employs a comprehensive security model. When a Uniswap governance decision is made on Ethereum, the governance contract calls the sendMessage function of a \u201csend box\u201d contract, which takes in the destination chain IDs, message to be passed, and destination contract addresses. The message contains the serialized bytes of the governance function call data, and an event is emitted containing the message. Validators in Celer\u2019s State Guardian Network, which is a Cosmos SDK based blockchain, witness the message and reach consensus that the message exists. The validators then generate a stake-weighted multisignature attestation that is stored on the chain. A message executor, which can be run by Uniswap or validators of Celer Network, collects the message and calls executeMessage of a receiver contract. After necessary on-chain validation of the message, the message is put into a \u201cquarantine zone\u201d for a configurable period. During the quarantine period, validators in the SGN, the application\u2019s executor, and potentially other third parties (collectively, App Guardians) can monitor and cross-check the message that arrived on the destination chain with what was sent on the source chain. If there is any mismatch, the message path is cut off immediately and the message is not executed. Once the quarantine clock times out, the message is executed by the receiver smart contract, which calls the Uniswap contracts on the destination chain with the function and parameters specified in the message, completing the cross-chain governance process. This solution ensures the security of Uniswap\u2019s cross-chain governance even if Celer\u2019s State Guardian Network is completely compromised, as long as there is still one honest and live app guardian. 7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? Celer\u2019s cross-chain solutions and frameworks was audited by Certik, Slowmist and Peckshield for 15 times. No critical vulnerabilities were ever identified in any of the audits for the current production code of Celer. The audits are archived at    github.com   sgn-v2-contracts/audit at main \u00b7 celer-network/sgn-v2-contracts main/audit Smart Contracts for Celer State Guardian Network (SGN) V2 and cBridge V2      8. Is there a bug bounty program? Celer was the first cross-chain interoperability infrastructure to establish a bug bounty program on ImmuneFi, with the program published on November 18, 2021, and a maximum prize of $2M. Celer has maintained a flawless security track record with no vulnerabilities discovered through these bug bounty programs. 9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. Celer\u2019s cross-chain messaging smart contract will no longer support upgradability, and this change will take effect in the coming days. The owner role and upgradability were initially included as a security measure, but it will soon be impossible to upgrade the messaging contracts that connect to Uniswap. 10. Do any contracts have an owner or owner-like entity? If so, what can the owner do? After the ownership deprecation, no owner-like key or entity exists. 11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? Protocol security Celer\u2019s State Guardian Network (SGN), which is based on the Cosmos SDK consensus framework, forms the foundation of its cross-chain security model. Validators with CELR tokens stake delegations in the SGN to witness message events on the source chain and reach consensus, generating a stake-weighted multisignature attestation that is stored on the chain. An executor then relays the attestation and message to the destination chain \u201cinbox\u201d smart contract, which checks its validity and signatures. In case of malicious activity by any guardians, their staked CELR will be slashed by the consensus protocol. Celer\u2019s SGN validators are run by well-known entities, such as Binance, OK Exchange, IOSG, Everstake, Forbole, Ankr, 01-Node, Infstone, RockX, HashQuark, Klever and more. In addition, smart contract restrictions are in place to prevent any single validator from surpassing \u2153 stake. Celer also provides an application framework that enables an optimistic-rollup-like delay and two-phase-commit pattern for cross-chain message execution. With this framework, each cross-chain message must be committed to the destination blockchain\u2019s \u201cquarantine zone\u201d and trigger a mandatory time delay before it can be confirmed and executed to the final destination application. This delay allows enough time for App Guardians, run by SGN validators, dApp developers, or other third parties like security firms, to cross-validate the message on the source chain. If any App Guardian detects a mismatch, it can prevent the message from being processed before the delay expires, ensuring that even if the entire SGN consensus acts maliciously, the application can remain secure without executing malicious messages. Security monitoring While protocol security forms the foundation of cross-chain infrastructures, security monitoring, communication and, when possible, rapid responses are equally important. Many past bridge security incidents were due to the omission of this aspect. To address this, Celer DAO has a dedicated 24/7 security monitoring team that maintains an automated sentinel system to monitor various aspects of the system, including validator performance, stake distribution changes, cross-chain message parity between source and destination chains, system TVL, and cross-chain asset volume, among others. When an anomaly is detected, the team analyzes on-chain and real-world data, such as security incidents in connected chains. If a security issue is identified, the team communicates immediately with Celer\u2019s community and partner community. This process will allow Celer ecosystem projects to implement any emergency responses if possible. 12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. In the default security model, an adversary can pass a fraudulent message if they compromise validators holding more than \u2154 stakes at the same time. However, in the Uniswap implementation using the optimistic-rollup-like delay and two-phase-commit pattern, an adversary must compromise all App Guardians and SGN validators holding more than \u2154 stake at the same time to pass a fraudulent message. In practice, hacking multiple validators to compromise a consensus protocol is a difficult task and likely to leave traces. Celer validators use the battle-tested Cosmos SDK, eliminating the need to open a wide range of external ports. This allows validator servers to sit behind strict firewall rules, making it difficult for a malicious party to gain server access via an external path. Even if they do gain access via internal compromises, there is a good chance that their actions can be detected by validators\u2019 internal monitoring tools, such as KMS audit log monitoring, 2FA-SSH access log monitoring, and other standard DevOps security practices. Malicious access attempts may also leave traces of node liveness when attempting to tamper with the validator software and raise alert on the external security monitoring front. Therefore, whenever a validator node drops offline, they will rotate keys and review access logs to ensure no malicious access attempt has happened. 13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. By default, if an adversary compromises validators holding more than 1/3 of the stake at the same time, they can withhold a valid governance message. When using the optimistic-rollup-like delay and two-phase-commit pattern, an adversary needs to compromise at least one App Guardian or enough SGN validators holding more than 1/3 of the stake. However, we want to emphasize that withholding is a much lesser concern, since the Celer community and stakers can revoke the staking power of any malicious validator. Additionally, application developers can adjust the list of App Guardians through a governance multisig. 14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. Celer\u2019s security model ensures that any set of validators with less than 1/3 stake cannot generate a invalid block with invalid cross-chain messages, and they will be penalized by having their stakes slashed. Moreover, Celer\u2019s State Guardian Network validators are publicly run by reputable PoS validators and renowned entities such as Binance, OKEX, IOSG, Everstake, Forbole, Ankr, 01-Node, Infstone, RockX, HashQuark, and Klever, among others. For these entities, a security breach or fraudulent validator would cause significant damage to their core business revenue and brand reputation. 15. Provide any additional information you would like here. Celer has been an active contributor to Uniswap\u2019s cross-chain governance efforts since the beginning. In fact, Celer, in collaboration with 0xPlasm team, was among the firsts to implement a single-bridge cross-chain governance solution. In addition, Celer was also the first to implement a multi-bridge solution that advocates for an open and vendor-lock-in-free future for Uniswap and the broader DeFi ecosystem. Celer community has built through bulls and bears with unwavering persistence to bring blockchain to mass adoption. With its impeccable track record, Celer continues to innovate and will soon release a zk succinct proof-based cross-chain solution that further reduces the need for trust in application use cases such as cross-chain governance. In summary, we are confident that Celer, in combination with a neutral vendor-lock-in-free multi-bridge architecture, is the optimal solution for Uniswap cross-chain governance. ",
                    "links": [
                        "https://medium.com/pancakeswap/pancakeswap-utilizes-celer-network-to-create-seamless-cross-chain-dex-60b3e5bb19d1",
                        "https://metamask.io/news/latest/how-we-selected-bridge-providers-for-metamask-bridges/",
                        "https://celerscan.com/",
                        "https://cbridge-analytics.celer.network/",
                        "https://celer.network/celercore/channel/overview.html#platform-interoperability",
                        "https://im-docs.celer.network/developer/celer-im-overview",
                        "https://im-docs.celer.network/developer/celer-im-overview",
                        "https://cbridge-docs.celer.network/developer/cbridge-sdk",
                        "https://cbridge-docs.celer.network/developer/cbridge-sdk",
                        "https://medium.com/futureswap/fst-goes-cross-chain-with-native-bridging-between-ethereum-and-avalanche-192880f4825b",
                        "https://medium.com/pancakeswap/pancakeswap-utilizes-celer-network-to-create-seamless-cross-chain-dex-60b3e5bb19d1",
                        "https://testnet.bscscan.com/address/0x6A23e3a6d351a8922c8E7c5c834A51632f237922",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/d879d4cf1a3b69d8cc7c56bb9512a6a493c5be0d/contracts/message/framework/MessageSenderApp.sol#L24",
                        "https://github.com/celer-network/im-executor",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/033a351d19f91dc4a06e9956ae203533ad4b5068/contracts/message/apps/adapter/MessageReceiverAdapter.sol#L23",
                        "https://github.com/celer-network/im-guardian",
                        "https://github.com/celer-network/sgn-v2-contracts/tree/main/audit",
                        "https://github.com/celer-network/sgn-v2-contracts/tree/main/audit",
                        "https://github.com/celer-network/sgn-v2-contracts/tree/main/audit",
                        "https://immunefi.com/bounty/celer/",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/multibridge/contracts/message/apps/adapter/MessageReceiverAdapter.sol",
                        "https://github.com/celer-network/im-guardian",
                        "https://github.com/celer-network/sgn-v2-contracts/blob/84c7cefd5ffe02f10f64b432dd4ba8c5a066e443/contracts/staking/Staking.sol#L327"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.658293902479949
                },
                {
                    "author_link": "https://gov.uniswap.org/u/sergeynog",
                    "index": "23",
                    "likes": "3",
                    "time": "17/02/2023-15:46:34",
                    "content": "hey All. Please find answers below from the Axelar Network.  1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.   Technology: The Axelar Network is powered by a decentralized Proof of Stake protocol with multiple layers of security features and an ability to further customize security for Uniswap, if needed.  Team: The team has deep roots in cryptography, distributed systems, and consensus and has been designing and building secure infrastructure for many years.  Traction: The Axelar Network has been live for over a year, integrated over 32 chains through its stack to date, processed over $1.7 billion in volume, and working with major DEXs, Wallets, L1/L2, stablecoins, and other partners throughout the industry.   2. How long has the system been running on mainnet?  Axelar has been running on mainnet since Jan 13, 2022. Axelar is the canonical interoperability provider for Osmosis, elected through governance by the Cosmos community. The Osmosis DAO followed a thorough diligence process. Major partnerships include Interoperability for Polygon Supernets, Circle\u2019s Composable USDC, and many others.     3. How much value has the system secured? (Current TVL, total transaction volume)  To date, Axelar has a TVL of $126 million and has processed over $1.78 billion in asset transfer volume. Over 32 networks have been connected to the Axelar network, and the network has processed 350k+ cross-chain transactions (Transfers | Axelarscan). The network supports General Message Passing and many applications leverage it \u2013 bridging NFT, performing swaps, etc. These applications don\u2019t \u201clock\u201d TVL, but enable applications to compose across the ecosystems.   4. Provide a background on your team.  The assembled team has deep expertise in cryptography, distributed systems, and consensus. The core engineering team has research experience in some of the top academic institutions (e.g., MIT, Waterloo), and professional experience in some of the most renowned technology companies, such as Google, IBM, and Microsoft. Co-founders Sergey Gorbunov and Georgios Vlachos were founding team members at Algorand, and are winners of multiple academic awards in cryptography. \u200b\u200b Core engineer Jo\u00e3o Sousa built the first practical implementation of Byzantine consensus, BFTSmart, which has inspired many researchers and this industry over the years. Sergey Gorbunov has designed and published many core cryptographic protocols. He also led the effort to standardize BLS signatures; the standard in its draft in CFRG was followed by Ethereum 2.0 implementations and others. Overall, the team has been assembled to build best-in-class security from the ground up: from design to engineering and operations around the network. Here is our team page.   5. Please link your developer documentation.    | Developer Documentation \u2192 https://docs.axelar.dev/    | Block Explorer \u2192 https://axelarscan.io/    | Examples \u2192 GitHub - axelarnetwork/axelar-examples: Sample cross-chain dapps & contracts using the Axelar protocol.    | GitHub \u2192 GitHub - axelarnetwork/axelar-local-dev: A local developer environment for building your cross-chain dapps.    | Security \u2192 https://axelar.network/blog/security-at-axelar-core    | Developer Discord \u2192 Axelar Network   (Please select \u201cDeveloper\u201d under \u201cpick-a-role\u201d to access the developer channel)  6. Does the bridge support arbitrary message passing?  Yes, arbitrary message passing was described in the Axelar white paper in January 2021, and Axelar released its General Message Passing (GMP) capability to mainnet in April 2022. For example, GMP enables developers building on one chain to call any function on any other connected chain. (We use the word \u201cfunction\u201d to encompass both smart contracts at the application layer and functions built at the protocol layer, as in Cosmos, for example.) That means complete composability across Web3. Like all Axelar functions, General Message Passing relies on a permissionless validator set (delegated proof-of-stake) for security and a decentralized protocol that handles routing and translation. Learn more here: General Message Passing | Axelar Network    7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied?  Yes, the Axelar network code has been audited over 30 times and continues to go through continuous and rigorous audits. Audits can be found here: GitHub - axelarnetwork/audits: Axelar network audits, with relevant findings, addressed before production deployments.   8. Is there a bug bounty program?  Yes, Axelar\u2019s $2.25 million bug bounty program has been live since March 10, 2022, on Immunefi. Axelar network and contracts are all open-source. We actively encourage comments and revisions from white-hat hackers.   9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works.   The Axelar network can be upgraded following delegated proof-of-stake consensus. That is, anyone can post a proposal on the Axelar network and the Axelar token holders may elect to approve/deny it and the associated upgrade. Axelar network is controlled by a permissionless validator set and governance, as it is built on the Cosmos SDK.   A full list of network parameters and governance methods is available here.   The current instantiation of the Axelar Gateway contracts on the EVM chains are effectively light-clients: they\u2019re responsible for keeping track of the Axelar validator set and communicating with applications that leverage Axelar.   Only the Axelar validators can collectively authorize decisions to process cross-chain transactions from/to the Gateways.   In the current instantiation, the gateways are upgradable subject to approval from an offline committee (4/8 threshold). This will change in the immediate future when all validators also need to collectively approve any upgrades to the gateways, essentially establishing end-to-end security via the Proof of Stake decentralized protocol.   For Uniswap, we can launch new Gateway contracts that are customized. For example, contracts can be non-upgradable, or Uniswap delegates or UNI token holders can govern upgrades. Such contracts would be governed by the Uniswap community while leveraging Axelar\u2019s permissionless validator set for passing messages across chains. (See the Appendix for more details.) See the Appendix for more details.  10. Do any contracts have an owner or owner-like entity? If so, what can the owner do?  The answer is incorporated above.   11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? Robust security comes from (a) the right design, (b) engineering practices, and (c) application-level security add-ons. (A) The design: A decentralized permissionless network with a many-to-many communication model. The decentralized and permissionless model has the best practical security guarantees as it encourages diverse validator deployments, incentivizes validators to guard their keys, promotes good behavior, and punishes bad behavior.   Axelar is the full-stack decentralized transport layer. At the core, it is powered by delegated proof-of-stake consensus to validate cross-chain messages. Applications can instantiate additional validation logic across connected paths that may be governed by the application token, permissioned set, light-client, zk proofs, or other available technologies. Our approach is to:  (a) Offer the best-in-class security via decentralization as the default that solves most use cases for developers. (b) Allow developers to customize security as needed.    The Axelar network itself comprises a validator set responsible for maintaining the network and executing transactions. The validators run the Cross-Chain Gateway Protocol, a multi-party cryptography overlay that sits on top of a Layer-1 blockchain. They are responsible for performing read and write operations to Gateways deployed on connected external chains, voting and attesting to events on those chains.   Axelar Gateways are effectively smart contracts that connect the Axelar network to its interconnected external chains. Validators monitor Gateways for incoming transactions, which the validators READ. They then reach a consensus on the validity of that transaction and, once agreed, WRITE to the destination chain\u2019s Gateway to execute the cross-chain transaction.   The validators and Gateways compose the core infrastructure layer. They guarantee both safety and liveness of the core functions governed by delegated proof-of-stake. It\u2019s important to note that relaying across Axelar and its interconnected networks is completely permissionless. This guarantees that no one can censor user transactions and delivers 100% liveness guarantees (assuming the interconnected networks and the Axelar network are running). If relayers are down, the user or anyone else can post transactions, themselves. If one of the interconnected networks is halted or undergoing an upgrade, the packets are just queued up at the network layer and can subsequently be posted (or re-posted) when the networks are back up.   Proof-of-stake decentralized design at the core - Axelar is built using battle-tested delegated proof-of-stake consensus with a diverse and dynamic validator set. Anyone can join, anyone can participate, and anyone can contribute to the security of the network.   Novel quadratic voting mechanism increases decentralization of the network - to further decentralize the network, cross-chain messages are approved iff they\u2019re authorized via the quadratic voting rule. That is, the voting power of each validator is equivalent to the square root of their stake. A threshold of validators (currently 60%), weighted by the square root of the stakes, must collectively co-authorize every cross-chain request. With quadratic voting, as validators accumulate stake, it gets harder for them to accumulate voting power.   Amplify stake security - With Interchain Security available in the Cosmos ecosystem in the coming months, one network can \u201cborrow\u201d the security of other networks. This would allow it to increase the stake used for validation on the network, making any economic attack much more difficult. We also have plans to allow ETH holders to contribute to Axelar\u2019s security, via the restaking model that Eigenlayer introduced recently.   (B) Engineering and operational practices:  Key rotations on the network - Validators of the Axelar network maintain keys that allow them to co-authorize cross-chain requests, similarly to how they co-authorize every block on the blockchain. Validators are strongly encouraged to implement best practices for isolating these keys and are required to rotate them periodically. Key rotations secure the network against a persistent attacker, who might try to accumulate malicious keys by compromising validators sequentially. Continuous unit tests & end-to-end tests through the stack - While audits are great, achieving robust security often comes from having the right internal processes to identify and correct bugs. Continuous unit tests and end-to-end tests help discover vulnerabilities and bugs early in the pipeline. Audits and bug bounties (see above).  (C) Application-level security add-ons:  Customize security - Additional paths can be secured by deploying additional validator sets, light-clients, and/or zero-knowledge proofs when available. We think this will be the best instantiation for the Uniswap community: leverage the robust Axelar network for all default traffic. If there is a highly valuable/sensitive transaction, utilize the additional UNI elected validator set for co-signing. See the Appendix for more details on how we propose customizing security for Uniswap. Rate limits - The Gateways and the Axelar network have a rate-limiting function, which limits how much of each asset can be transferred in a given time interval.  Sitting atop the validators and Gateways are Axelar services and APIs that enable developers to access the tools and infrastructure enabled by those validators and Gateways. These services and APIs do not add any security assumptions: they make developers\u2019 and users\u2019 interactions in the interchain much simpler, but are fully permissionless: anyone can execute the relevant functions on-chain, themselves].  12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples.  A majority of Axelar validators attest to messages that pass from Ethereum to a destination chain. The voting threshold is 60%, based on the validator\u2019s quadratic stake (current stake distribution: Validators | Axelarscan). An adversary who can corrupt 60% of voting power can pass fraudulent messages. The adversary could try to corrupt enough servers to do this, but mechanisms such as key rotations & rate limits minimize the potential of these attacks.   13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples.  The adversary can withhold messages by attacking validators that hold 40% of the quadratic stake. This can be done by corrupting validators or launching a denial-of-service attack. Note that because relaying is permissionless, those attacks don\u2019t apply to relayers. If certain relayers are compromised, any community member can come in and relay the message.   14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system.   Axelar validators get slashed on the Cosmos SDK level, the same way that validators of any other Cosmos chains get slashed for misbehavior. There is a penalty for validators who don\u2019t maintain sufficient uptime. When a validator doesn\u2019t vote on enough cross-chain events, they\u2019re penalized with a loss of stake and rewards. Validators who misbehave significantly (double signing blocks, not participating for a long period of time) get jailed.  Slashing and locking in the Axelar network Rewards slashing in the Axelar network is designed to incentivize validators to avoid undesirable behavior, such as losing liveness, failing to vote correctly on external chains\u2019 events, double-signing, etc. Rewards are accrued at the end of every block and released depending on the reward type. The slashing mechanisms in the Axelar network are unique to each inflation component. Within the TM consensus rewards, the slashing rules are set as follows:  Validators will lose the TM Consensus rewards if they lose liveness and get jailed if they don\u2019t participate for a longer duration. Validators need to sign 50% of the blocks in every 35,000-block window. Given a block time of five seconds, this corresponds to maintaining total liveness for at least one day in every two-day window. They lose 0.01% of rewards per block for downtime and 2% for double signing blocks.  If the validators lose liveness for more than 50% of the window, then they are locked (\u201cjailed\u201d in Cosmos terminology, forbidden from rejoining the validator set) for two hours (about 1,440 blocks), after which they would need to unlock themselves. Axelar network implements an unbonding period of seven days. For multi-party signing protocols (MSigs), the liveness of the broadcaster account is signaled through \u201cheartbeat\u201d messages sent every 50 blocks by the validator. Validators are considered \u201cactive\u201d if their latest heartbeat message was received within the last 50 blocks, they are not suspended from MSigs, they have missed signing less than 5% of the blocks in the last signed-blocks window for consensus, and are considered \u201clive\u201d by the consensus layer. Accrued rewards are released whenever validators submit a heartbeat. A snapshot of \u201cactive\u201d validators is taken to determine participation in MSig protocol. If an \u201cactive\u201d validator failed to participate in MSigs, then they are considered to have lost liveness and are suspended from further MSigs participation for 8,500 blocks (which is about \u00bd day with five-second block times), along with losing their accrued rewards. If a validator fails to submit a heartbeat message, they stop accruing MSig rewards for every block until their next heartbeat. For example, in the diagram below, a validator missed the 3rd and 6th heartbeat, so they don\u2019t accrue (i.e lose) MSig rewards for 2 * 50 = 100 blocks. For external chain voting, all validators registered as chain maintainers can vote on events. A validator\u2019s share of voting power is equivalent to the square root of the stake delegated to them, divided by the square root of the total stake delegated to all validators. Validators who submitted the majority vote have their accrued rewards released. To incentivize liveness and good behavior, validators who fail to vote or submit the minority vote lose their accrued rewards.    Medium \u2013 7 Feb 23    Rewards and Transaction Fees for the Axelar Network Overview and Key Outcomes  Reading time: 6 min read        15. Appendix  A multi-path instantiation for Uniswap We propose to instantiate interoperability for Uniswap by passing messages via  the Axelar decentralized network, powered by delegated proof-of-stake consensus and many safety features, and augment it with an additional Uniswap-specific validator set and a secondary Gateway II (could even elect two additional validator sets).  The Uniswap-specific validator set may be elected by the UNI token holders.  We deploy a validatorElector contract on Ethereum where UNI token holders can select an external validator set. The elected validators download and run an instance of the Axelar external worker process. This process allows them to listen for events from the source chains, and co-sign and authorize cross-chain transactions that are subsequently approved at the destination Gateway II.  Next, a custom Message Auth Policy contract can be instantiated to authorize messages of different value/importance from the two independent Gateways. For instance, we can authorize messages of lower importance as long as one of the Gateways approves them. We can authorize messages of higher importance if and only if both Gateways approve them. See our recent blog post for how to instantiate deployments based on different validation logic using Axelar (https://axelar.network/blog/future-proof-interop-path-adaptability-for-cross-chain-dapps). Composing bridge Gateways and custom logic between them is not new to us. In fact, this is precisely the instantiation we\u2019re collaborating on with Circle for the Composable USDC. Finally, as different validation logic becomes available (e.g., light clients, ZK-proofs), they can be implemented between the Axelar network and its interconnected chains. No need to have external validator methods once these connections go live, but we can still rely on multiple validation paths to avoid dealing with bugs. Given our proposal incorporates the multi-path approval framework, if the community decides to go to the multi-bridge provider model, the Axelar team would be open to working with another provider that can implement/deploy an independent Gateway/validation logic. ",
                    "links": [
                        "https://medium.com/osmosis/how-osmosis-axelar-provide-secure-cross-chain-liquidity-277e09dbf57a",
                        "https://axelar.network/blog/osmosis-dao-selects-axelar-as-bridge-service-provider-launches-cross-ecosystem-swaps",
                        "https://polygon.technology/blog/polygon-axelar-partnership-to-expand-interoperability-of-polygon-supernets",
                        "https://www.circle.com/blog/composable-usdc-seamless-multichain-ux-by-axelar",
                        "https://axelar.network/ecosystem",
                        "https://www.axelarscan.io/transfers",
                        "https://axelar.network/ecosystem",
                        "https://cs.uwaterloo.ca/~sgorbuno/",
                        "https://www.linkedin.com/in/georgiosvlachos/",
                        "https://www.linkedin.com/in/jcs47/",
                        "https://axelar.network/team",
                        "https://docs.axelar.dev/",
                        "https://axelarscan.io/",
                        "https://github.com/axelarnetwork/axelar-local-gmp-examples",
                        "https://github.com/axelarnetwork/axelar-local-dev",
                        "https://axelar.network/blog/security-at-axelar-core",
                        "https://discord.gg/Vzd34fCee6",
                        "https://axelar.network/axelar_whitepaper.pdf",
                        "https://docs.axelar.dev/dev/gmp-overview",
                        "https://github.com/axelarnetwork/audits",
                        "https://immunefi.com/bounty/axelarnetwork/",
                        "https://axelar.network/blog/axelar-governance-explained",
                        "https://axelar.network/blog/future-proof-interop-path-adaptability-for-cross-chain-dapps",
                        "https://docs.google.com/document/d/1Pf7d4Jc_oOGYp98zL4JlbkW-39gHIxU25UVCa_pK4e8/edit#heading=h.glk2b13rsnco",
                        "https://axelar.network/blog/future-proof-interop-path-adaptability-for-cross-chain-dapps",
                        "https://cryptoslate.com/interchain-security-and-why-is-it-so-important-to-cosmos/",
                        "https://axelar.network/blog/future-proof-interop-path-adaptability-for-cross-chain-dapps",
                        "https://www.axelarscan.io/validators",
                        "https://www.axelarscan.io/validators",
                        "https://www.axelarscan.io/validators/inactive",
                        "https://www.mintscan.io/axelar/parameters",
                        "https://medium.com/@axelar-foundation/inflation-and-transaction-fees-on-the-axelar-network-d56ea9e2c142",
                        "https://medium.com/@axelar-foundation/inflation-and-transaction-fees-on-the-axelar-network-d56ea9e2c142",
                        "https://axelar.network/blog/security-at-axelar-core",
                        "https://axelar.network/blog/future-proof-interop-path-adaptability-for-cross-chain-dapps",
                        "https://www.circle.com/blog/composable-usdc-seamless-multichain-ux-by-axelar"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.586778699695366
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Sawa",
                    "index": "24",
                    "likes": "3",
                    "time": "17/02/2023-19:10:44",
                    "content": " Dear Uniswap Community, I would like to nominate myself as an engineer on the cross-bridge assessment team. With five years of software engineering experience in both traditional and decentralized finance domains, and as a partner engineer at cLabs, I am confident in my ability to make valuable contributions to the assessment process. At cLabs, I played a critical role in the successful deployment of Uniswap on Celo, which involved a deep understanding of cross-chain bridges and the deployment of the Optics governance bridge. I would like to disclose that I am involved in the maintenance of  Optics but I hold no obvious bias towards any specific bridge technology, and my commitment is to provide objective and valuable insight during the assessment process. My motivation for joining the team is driven by a strong interest in decentralized finance and the role that cross-chain bridges play in supporting its growth. I recognize the need for diligent assessment and clarity to ensure the Uniswap community has what it needs to continue making informed decisions. My socials Twitter: 0xsawa Github: jesse-sawa Sincerely, Jesse ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.1060606060606055
                },
                {
                    "author_link": "https://gov.uniswap.org/u/owl",
                    "index": "25",
                    "likes": "2",
                    "time": "17/02/2023-19:53:24",
                    "content": "Gnosis team is working on a new concept and an approach to bridges that could be beneficial for the Uniswap cross-chain governance. It aligns with the Multi-bridge proposals by @modong and @Kydo but we want to focus on two aspects:   Additive security Instead of choosing one security model over the other and making certain trade-offs, we can use more than one models and control each other\u2019s integrity.   Standardization (at the lowest level) The lowest possible level for standardization which will decouple the overall architecture from the security model is the block header.   Putting the two concepts above together, we can have different bridges with different security approaches (e.g. ZK light client based, Committee based) that can provide the block header information of the source chain acting as Block Header Oracles.  If all oracles (or all oracles above a certain threshold) agree, the block header is considered valid. In the case of conflicting oracle information, governance and an external conflict resolution mechanism need to resolve it.  On top of the block headers, we need merkle proofs for specific events or storage slots. On top these proofs, we can build application logic, such as Uniswap Governance specific contracts. We therefore clearly see three tiers in this new approach: Application (top) Proof (mid) Block header (bottom) (My account is not allowed to add media for some reason\u2026 Here there was supposed to be a diagram which you can find in the link below) More information on the above in the following Etherearch post: (I cannot add links either for some reason\u2026 ethresear.ch /t/a-principled-approach-to-bridges/14725) Status and Roadmap The concept development is currently in an early stage but we plan to publish the first part (Header Storage) in the next weeks. Although we are still in an early stage, we believe it would be beneficial for the community if this approach could be also considered in the assessment for potential future improvements in the cross-chain Uniswap Governance. We are looking forward to hearing your feedback! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.46342627960275
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Wormhole",
                    "index": "26",
                    "likes": "4",
                    "time": "17/02/2023-20:58:40",
                    "content": " WH Questions   List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance. Modularity and Scalability: Wormhole\u2019s relayer-free model enables Uniswap to seamlessly expand governance to new chains without reliance on Wormhole to officially roll out its full suite integration. Any developer can permissionlessly deploy a read-only contract on the new destination chain and configure them with the current Wormhole Guardian set. Critically, this compliments the Uniswap community\u2019s sense of urgency to deploy Uni v3 onto other L1s and L2s prior to the license expiration. Relying on complex infrastructure like the operation of a relayer network may impede on those time sensitive ambitions. Lightweight and Implementation Ready: Wormhole\u2019s cross-chain governance module for Uniswap is tested and implementation ready. The contracts are currently live on ETH and BNB \u2014 the solution can be easily scaled to other EVM chains. The application is lightweight as Wormhole\u2019s Guardian network is only used to attest finalized governance decisions on Ethereum. I. Ethereum Message Sender: UniswapWormholeMessageSender | Address 0x128Ce3A3D48f27CE35A3F810cF2cddD2f6879b13 | Etherscan II. BNB Chain Message Receiver: UniswapWormholeMessageReceiver | Address 0x3ee84fFaC05E05907E6AC89921f000aE966De001 | BscScan Security and Decentralization: Wormhole has nineteen guardians comprised of institutional PoS validator companies who jointly attest to messages. Our Guardians are some of the largest and most respected PoS validators \u2014 collectively representing tens of billions of staked capital across Ethereum, Polygon, and more. Each Guardian holds equal weight in consensus and governance. Of the 19 guardians, Wormhole requires over two-thirds to reach consensus and pass verification - thus, we assume that at least one-third of our guardian set is honest. Despite Wormhole\u2019s high degree of decentralization, we remain resolute on improving our trust assumptions \u2014 as such, contributors are placing heavy investments in moving towards a completely trustless system based on zero knowledge proofs. This architecture leverages zero-knowledge proofs as a mechanism for directly attesting to the consensus rules of the blockchain. Light clients provide a mechanism for doing exactly this. We aim to share more on our ZK roadmap soon.   How long has the system been running on mainnet? Wormhole is one of the first and longest serving generic cross-chain messaging protocols. It has been running on mainnet since August 2021.   How much value has the system secured? (Current TVL, total transaction volume) Wormhole currently secures $300 million in TVL (token bridge only). Since inception, nearly $35 billion in cumulative transaction volume has taken place on Wormhole via users bridging tokens over 22 connected chains \u2014 this activity comes through organic usage, no farming or token based incentives.   Provide a background on your team. All Wormhole code is open source and built in the open by dozens of contributors including both individuals as well as contributors affiliated with the Wormhole Foundation, Jump Crypto, and more. Wormhole also has contributions from within 19 Guardian members spanning P2P, Everstake, Chorus One, Staked.US, Figment and more. Together, Wormhole is one of the most decentralized projects in crypto in both number and diversity of its contributors. Hendrik Hofstadt is a Director of the Wormhole Foundation and is also the chairman of the supervisory board at Neodyme AG. Prior to Wormhole, Hendrik co-founded and served as CEO for Certus One, a leading blockchain infrastructure company, which was acquired by Jump Crypto in 2021.   Please link your developer documentation. Check out the Wormhole xDapp Book. The first section of the book comprehensively outlines the core elements of Wormhole\u2019s architecture and security while the second section assists developers set up a development environment and get started composing atop Wormhole. Wormhole is fully open source \u2014 an intentional decision to push for the best in-class infrastructure and encourage the broader bridge community to transparently build out in the open. Our Github repository can be found here. Additional information on the Wormhole: Ecosystem, Guardian Network, Discord   Does the bridge support arbitrary message passing? Yes, Wormhole is a generic messaging protocol. Since inception, nearly 230 million messages have been transmitted, around 2 million messages are transmitted daily \u2014 some are regular messages (e.g. Pyth oracle data) while others are token bridges. Wormhole\u2019s daily message load is equivalent to an L1, which demonstrates its reliability and robust throughput.   Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? Wormhole has been audited 25+ times by leading audit firms, including Certik, Trail of Bits, and OtterSec, and the cohort of auditors continues to grow. You can see the complete list of auditors and publicized findings here. Those 25 audits are in addition to Wormhole\u2019s already rigorous internal auditing standards, where a team of 6 experienced security engineers regularly perform review the protocol\u2019s security.   Is there a bug bounty program? Yes. We remain committed to engaging with the whitehat community with clear and transparent discourse processes and bounty payoffs. Wormhole has paid out some of the largest bug bounties in crypto (see here) \u2014 our program has pushed Wormhole\u2019s security forward and made the protocol more robust. Wormhole hosts two bug bounty programs, both have a top payout of 2.5 million dollars:  An Immunifi program and a self-hosted program   We strive to ensure our whitehat disclosure processes are clear and transparent \u2014 and are not hidden behind opaque payoff structures and obscure disclosure emails.   List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. Wormhole\u2019s core contracts are upgradeable, contract upgrades are managed via Wormhole\u2019s on-chain governance system. The on-chain governance system requires Guardians to manually vote on governance proposals which originate inside the Guardian Network and are then submitted to ecosystem contracts. Consequently, governance actions are held to the same security standard as the rest of the system (e.g. Wormhole core messaging). That is, a supermajority of the Guardians (13 of 19) are required to pass any governance action. The Governance system is fully open source in the core repository. As we\u2019ve mentioned before, while the Wormhole proxy contract can point to different implementations, the Wormhole implementation contract is immutable. Thus it is trivial to verify governance messages against a specified implementation. While there are multiple ways for Uniswap to accomplish this, the most straightforward is just including the pinned implementation as an external library in the deployment.   Do any contracts have an owner or owner-like entity? If so, what can the owner do? As discussed above, governance actions can only be implemented if supermajority of the Guardians (13 of 19) vote to approve the proposal. Through governance, the Guardians can upgrade contract implementations and change the current Guadian set.   What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? Wormhole\u2019s core messaging layer relies on the standard trust assumption of the PoA consensus with 19 Guardians. All messages passing through Wormhole require a minimum of observation and signing by a majority of the Wormhole Guardian set (13 of 19) \u2014 a minority (7 of 19) Guardians may refuse to sign a fraudulent message and thwart an attack. The Wormhole Guardian set are comprised of professional PoS validators companies and collectively represent tens of billions of staked capital across a variety of PoS L1s including Ethereum, Polygon, Polkadot, and many more. The Guardian set includes names Figment, Staked, P2P, Chorus One \u2014 the full Guardian set can be found here.   How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. Any single adversary cannot pass a fraudulent message as all messages passing through Wormhole require a minimum of observation and signing by a majority of the Wormhole Guardian set (13 of 19). Any minority (7 of 19) Guardians may refuse to sign a fraudulent message and thwart an attack. Importantly, simple yet customized message recall functions can be built by individual integrators. In this case, Uniswap could simply build \u201cedge contracts\u201d to introduce a time delay on message acceptance, providing an integrator with an opportunity to recall the message before it becomes effective. See below for a sample technical model: Consider the sample technical model below (another can be found here):  Governance Network921\u00d7884 120 KB     Governance continues to take place using the existing GovernerBeta contract and Uniswap\u2019s existing UI. The GovernerBeta contract feeds into the GovernanceMessenger contract on Ethereum, which serializes the requests and passes them into the Ethereum Wormhole endpoint. Wormhole produces a VAA (verifiable action approval) for this message, which can now be submitted to the GovernanceMessageReceiver contract on the target chain. The GovernanceMessageReceiver contract on the target chain verifies the authenticity of the VAA using the local Wormhole endpoint and passes the instruction into a local Timelock contract, which owns the local Factory. Once the Timelock contract is cleared, the instructions can be executed. Note that a Timelock contract is put on each individual chain to add an optional layer of control over the universal bridge into the system. As an extra signer, the chain\u2019s native bridge could act as an escape hatch by which pending proposals in the Timelock can be canceled. Notice that there is no relayer dependency in this schematic. Any user can submit the VAA to the GovernanceMessageReceiver contract on the target chain. This model is very easy to maintain and enhance. Subject to Uniswap governance approval, receiver contracts can be upgraded over time. Moreover, anyone can deploy the Wormhole receiver contracts on new destination chains to process VAAs without waiting for Wormhole to formally support those chains. Wormhole message security waits for consensus to be reached on the source chain \u2014 additionally, Guardians run full nodes to protect Wormhole against consensus-level exploits in the connected chains and further reduce contagion risk. If a blockchain\u2019s consensus is violated, the Guardians will disconnect from the network until the issue is resolved.    How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. A single adversary cannot withhold a valid governance message \u2014 successfully refusing a valid governance message requires collusion among a minority contingent of Guardians (7 of 19). Any fraudulent message would be immediately attributable to the offending Guardian to the rest of the Guardian network, resulting in the subsequent expulsion from the Guardian network.   What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. As mentioned above, Wormhole\u2019s Guardians are leading PoS validators and collectively represent tens of billions staked across a number of L1s. Should they act maliciously (such as sign or forge fraudulent messages), they risk reputational consequences, external PoS businesses, and ejection from the Wormhole Guardian set. Consequently, there is little incentive for an individual Guardian to act maliciously. Even if a Guardian were to succeed in forging a fraudulent message, it would not affect the network state because a single signature isn\u2019t enough to establish the super-majority required to gain quorum. Finally, a fraudulent message would be immediately attributable to the offending Guardian to the rest of the Guardian network.   Provide any additional information you would like here. Wormhole has taken a pragmatic approach to bridging -19 PoA Guardian set with the leading PoS validators, full nodes, and off-chain security features. We believe this is a nicely packaged solution that strikes the right balance between flexibility and safety, however, additional validation mechanisms are easily composable with Wormhole. Following up on discussions in a previous thread, Wormhole contributors built out two examples of potential add-ons to the typical integration: an additional off-chain signer and a two-of-two bridge approach. Medium post can be found here. Technical working examples are available here: https://github.com/wormhole-foundation/example-composable-verification These forms of composable verification enable Uniswap to layer their signers or other trusted signers on top of Wormhole, extending the already robust Guardian set with additional validators.   ",
                    "links": [
                        "https://bscscan.com/address/0x3ee84fFaC05E05907E6AC89921f000aE966De001",
                        "https://zeroknowledge.fm/233-2/",
                        "https://wormhole.com/stats/",
                        "http://Staked.US",
                        "https://github.com/hendrikhofstadt",
                        "https://book.wormhole.com/#welcome-to-the-wormhole-xdapp-book",
                        "https://book.wormhole.com/wormhole/0_wormholeOverview.html",
                        "https://book.wormhole.com/wormhole/2_architectureOverview.html",
                        "https://book.wormhole.com/wormhole/security.html",
                        "https://book.wormhole.com/technical/env/environments.html",
                        "https://github.com/wormhole-foundation",
                        "https://wormhole.com/ecosystem/",
                        "https://wormhole.com/network/",
                        "https://discord.com/invite/wormholecrypto",
                        "https://wormhole.com/stats/",
                        "https://github.com/wormhole-foundation/wormhole/blob/main/SECURITY.md#3rd-Party-Security-Audits",
                        "https://portswigger.net/daily-swig/blockchain-bridge-wormhole-pays-record-10m-bug-bounty-reward",
                        "https://immunefi.com/",
                        "https://wormhole.com/bounty/",
                        "https://github.com/wormhole-foundation/wormhole/blob/main/ethereum/contracts/bridge/BridgeGovernance.sol",
                        "https://github.com/wormhole-foundation/wormhole/blob/main/ethereum/contracts/Wormhole.sol",
                        "https://bscscan.com/address/0xb8c99a5812159a412C5BD5823D35e32E61EF6135#code",
                        "https://www.figment.io/",
                        "https://staking.staked.us/",
                        "https://p2p.org/",
                        "https://chorus.one/networks/",
                        "https://wormhole.com/network/",
                        "https://gist.github.com/calebrate/3756313e261d4eafafb6aad02bcfe8ef",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/5/507157ece3762aea35165683a16b4124cfb718c6.png",
                        "https://wormhole.com/network/",
                        "https://wormhole.com/network/",
                        "https://gov.uniswap.org/t/rfc-update-deploy-uniswap-v3-1-0-3-0-05-0-01-on-bnb-chain-binance/19734/73",
                        "https://wormholecrypto.medium.com/composable-verification-f84007093a54",
                        "https://github.com/wormhole-foundation/example-composable-verification"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.636960454387462
                },
                {
                    "author_link": "https://gov.uniswap.org/u/jkol",
                    "index": "27",
                    "likes": "2",
                    "time": "17/02/2023-21:44:48",
                    "content": "Hey everyone, reporting back from the Hyperlane team as promised in the above post. Here are answers to the UF\u2019s questionnaire. Before we get started, we want to be clear, we are not proposing that Hyperlane should be picked as a standalone option, and only proposing it be considered as either an implementation option for the MMA design, or one of the options through an MMA design.   List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance. a. Hyperlane was designed to support customization of security models, including aggregating multiple third party bridges. No protocol changes are needed in order to support this. Any advancements in the field of interchain security can be easily incorporated into a Hyperlane deployment through an Interchain Security Module. b. As a core team, Hyperlane is very philosophically and ideologically aligned with the Uniswap ethos. We have opted for a design that maximizes permissionless-ness. We work in public. We open-source every bit of our protocol. Utilizing Hyperlane guarantees Uniswap will be choosing a partner that is truly aligned with its mission and values. Don\u2019t take our word for it, join our discord and see for yourself! c. Hyperlane\u2019s Permissionless Interoperability and overall design means future deployments, even those on non-evm chains, can happen without any need for intervention by Hyperlane core developers.   How long has the system been running on mainnet? V2 has been launched on mainnet for roughly 4 weeks. A similar version of the protocol, V1, has been running for upwards of 6 months.   How much value has the system secured? (Current TVL, total transaction volume) V2 is still fairly new, and a dedicated token bridge product has not yet been launched. Hyperlane\u2019s take on token bridging, Warp Routes, was just launched today. The system has secured over 50k messages on mainnet, and over 300k messages in total.   Provide a background on your team. On the whole, we are a group of crypto natives. >85% of the team has been in crypto for 4-6 years, with the latest additions having 1+ year of crypto experience on average. Our team includes experience from like Gauntlet, Google, Celo, Uniswap, Amazon, Nethermind, Kyve and more. The team is mission driven and is solely focused on expanding the crypto-economy by providing technology to connect blockchains permissionlessly. We believe that by doing so we increase to limits of what is possible, growing the overall potential of the entire industry. Team founders\u2014 Nam Chu Hoai - Prior to working on Hyperlane, Nam was an early engineer at Celo where he worked on all levels of the stack, from the protocol to the application layer. Prior to Celo he\u2019d been a senior engineer at Wellframe, an enterprise healthcare technology provider. As a teenager, Nam was one of the first developers to build iphone applications via Cydia, prior even to the creation of the appstore! Nam studied Computer Science at Boston University. Asa Oines - Prior to working on Hyperlane Asa was the first engineer at Celo and the Protocol Lead. At Celo he was the first to write a POS design implemented fully in smart contracts, and played a vital role in all protocol design and architecture decisions. Prior to his work on the Celo protocol, he was an engineer at Google where he worked on Natural Language Processing systems. Asa studied Computer Science at MIT. Jon Kol - Prior to working on Hyperlane Jon co-lead the investment team at Galaxy Digital, a firm with a wide array of operating businesses within the Crypto industry. In addition to his duties on the investment team he spearheaded a number of the firms operating initiatives, particularly those on the bleeding edge of Crypto. Prior to Galaxy he was a Crypto investor at Passport Capital, and a bond trader at Morgan Stanley. Jon studied Economics at UC Berkeley.   Please link your developer documentation.  Main docs page https://docs.hyperlane.xyz/docs/  Quickstart guides https://docs.hyperlane.xyz/docs/build-with-hyperlane/quickstarts  Deploy Hyperlane to your chain of choice https://docs.hyperlane.xyz/docs/deploy/deploy-hyperlane  Hyperlane Github https://github.com/hyperlane-xyz  Hyperlane Explorer https://explorer.hyperlane.xyz/  Hyperlane Discord https://discord.gg/hyperlane     Does the bridge support arbitrary message passing? Yes. You can try it out for yourself and send your first message in minutes!   Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? Yes, V2 has been audited by Hacken, a report is to be published shortly. V1 was previously audited by Hacken and FYEO. Issues identified by Hacken in the audit were remedied as part of the audit process.   Is there a bug bounty program? Yes, an ImmuneFi program sporting one of the largest bounties on ImmuneFi (6th largest), at $2.5m. The program can be found here: https://immunefi.com/bounty/hyperlane/   List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. The Mailbox contract logic is currently upgradeable using the transparent proxy pattern as implemented by Open Zeppelin. Upgradability will be delayed by a [1 week] timelock.   Do any contracts have an owner or owner-like entity? If so, what can the owner do? The Mailbox contracts are owned by a 3/6 multisig with signers from Abacus Works. The owner can change the default ISM. If users do not specify their own ISM, the default ISM will be used to validate inbound messages. The Mailbox proxy contract is also owned by this multisig, which allows the multisig to arbitrarily change the Mailbox bytecode.   What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? Hyperlane\u2019s security model is encoded in Interchain Security Module (ISM) smart contracts. Hyperlane users can specify their own ISM, which encodes their desired trust assumptions. At present, Hyperlane only supports Multisig ISMs, allowing Hyperlane users to specify their own validator set. In the short term, additional ISMs will allow Hyperlane users to mix and match ISMs (e.g. require 5/9 signatures from set A AND 3/3 signatures from set B OR require 9/9 signatures from set A). In the medium term, Hyperlane will support staking and slashing of validators, adding economic security. In the long term, ISMs will be developed for additional security models, including an optimistic ISM and light-client ISMs.   How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. In order to pass a fraudulent message from Ethereum to Alice\u2019s smart contract on the destination chain, that adversary would need to compromise the security model specified by Alice\u2019s ISM. If, for example, that ISM specified \u201crequire 5/9 signatures from set A AND 3/3 signatures from set B OR require 9/9 signatures from set A\u201d, the adversary would need to compromise 5/9 validators from set A AND 3/3 validators from set B OR 9/9 validators from set A. This could be done by compromising key credentials (typically AWS KMS keys) or convincing validators to run a modified version of the Hyperlane Validator binary that signs a fraudulent Mailbox merkle root. Alternatively, if Alice\u2019s smart contract contains logic to change the ISM, if an adversary were able to assume control of Alice\u2019s contract, they could change to an ISM that they have control over (e.g. require 1/1 signatures from the adversary) and use that to pass fraudulent messages. Finally, if the Abacus Works multisig was compromised, an adversary could upgrade the Mailbox contract on the destination chain to allow passing of fraudulent messages.   How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. In order to withhold a valid governance message from Ethereum to Alice\u2019s smart contract on the destination chain, that adversary would need to be able to impact the liveness of the security model specified by Alice\u2019s ISM. If, for example, that ISM specified \u201crequire 5/9 signatures from set A AND 3/3 signatures from set B OR require 9/9 signatures from set A\u201d, the adversary would need to be able to censor 5/9 validators from set A OR 1/3 validators from set B. Since Hyperlane validators are not networked with each other, and simply read smart contract state and write to S3 buckets, this would be exceedingly difficult without compromising the machine (or credentials, if run in the cloud) being used to run a validator. If the adversary controls one or more validators, they can withhold signatures, but because validators sign merkle roots, signatures can only be withheld globally. In other words, it is impossible for validators cannot censor some messages but not others without signing a fraudulent merkle root, which in the short term will be grounds for slashing. Finally, the Abacus Works multisig has the ability to pause and unpause the Mailbox contract. When the Mailbox is paused on a destination chain, interchain messages are not deliverable to that chain.   What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. Hyperlane does not yet implement staking, and therefore does not yet implement slashing. Verifying fraud proofs is fairly straightforward, as the Mailbox smart contract on each chain maintains a commitment to the entire history of messages.   Provide any additional information you would like here.  Hyperlane will support the MMA design regardless of whether Hyperlane is chosen as an implementation option for it or not. We believe firmly reliance on a single provider for security is against the best interests of the protocol, and hope that delegates and voters can see this to be true. Uniswap must optimize only for security. Safety over every parameter in this case. Latency or cost are completely meaningless in the realm of governance, and the MMA approach is most likely to reduce security risks and maximize safety. Hyperlane will be implementing Proof of Stake to provide economic security to users of the protocol. Hyperlane\u2019s design provides strong guarantees regarding the ability to permissionlessly slash without the need for governance, and provides for verifiable fraud proofs. The Hyperlane core team is happy to expand on any of the above questions or additional ones at any time. Our public discord is the best place to reach us, alternatively Twitter, or email work just as well.    ",
                    "links": [
                        "https://docs.hyperlane.xyz/docs/protocol/overview",
                        "https://docs.hyperlane.xyz/docs/build-with-hyperlane/quickstarts",
                        "https://docs.hyperlane.xyz/docs/deploy/deploy-hyperlane",
                        "https://github.com/hyperlane-xyz",
                        "https://explorer.hyperlane.xyz/",
                        "https://discord.gg/hyperlane",
                        "https://docs.hyperlane.xyz/docs/build-with-hyperlane/quickstarts/quickstart-tutorial",
                        "https://immunefi.com/bounty/hyperlane/",
                        "https://github.com/hyperlane-xyz/hyperlane-monorepo/issues/1717",
                        "https://discord.gg/hyperlane",
                        "https://twitter.com/hyperlane_xyz"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.583443020943021
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Kydo",
                    "index": "28",
                    "likes": "6",
                    "time": "17/02/2023-23:11:45",
                    "content": "Kydo from Stanford Blockchain Club here. Thank you to all the community delegates and bridge providers supporting the MMA design. If you are interested (as a bridge or delegate) to be part of the MMA design process, we welcome you to join our conversation. Just drop @Kydo a message here or on Twitter @0xkydo. Multi-Message Aggregation (MMA) Design Question List: Please note: the design is still under development and some minor changes could happen. However, these changes do not influence the overall security, liveness, and trust models of the design.  List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.    Better security and better availability: Using MMA, a Uniswap governance message with multiple copies are sent through different bridges to the destination chains, and will only be executed at the destination chain when the same message has been delivered by a quorum of different bridges. The likelihood of a large number of high-quality bridges concurrently getting exploited is strictly smaller than using a single bridge. Moreover, assuming all participating bridges have high availability, MMA provides better availability compared to a single bridge.  Vendor-lock-in free: Choosing MMA means that Uniswap will not be locked into one single vendor and therefore do not suffer from interest alignment risks or service quality risks down the road.  Simple and flexible: MMA is a straightforward smart contract framework consisting of around 350 lines of code. There is no need to operate any off-chain components. Its simple logic makes it easy to be thoroughly audited and formally verified. Moreover, it offers an adapter framework that is simple to integrate. This is evident from the successful integration of Celer, deBridge, Router Protocol, and Wormhole.  2. How long has the system been running on mainnet?  It is not running on mainnet.  3. How much value has the system secured? (Current TVL, total transaction volume)  Depends on the underlying bridge protocols.  4. Provide a background on your team.  MMA is a community effort. We are made up of 7 Uniswap delegates and 4 bridge providers/aggregators.  5. Please link your developer documentation.  Please see the description of the MMA architecture and integration guide here GitHub - celer-network/multibridge: Send Cross-Chain Messages through Multiple Bridges  We will move the repo and documentation to a Uniswap-delegate-led repo this weekend.  6. Does the bridge support arbitrary message passing?  Yes, arbitrary message passing is supported through bridges integrated into MMA solution. The current MMA design can be illustrated in the diagram below.  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Source chain                                                                               \u2502 \u2502                                                                                            \u2502 \u2502                                                \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502                                             \u250c\u2500\u25ba\u2502 Bridge1 Adapter \u251c\u2500\u2500\u25ba\u2502 Bridge1 Contracts \u2502 \u2502 \u2502                                             \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502        remoteCall           dispatchMessage \u2502                                              \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Caller \u251c\u2500\u2500\u2500\u25ba\u2502 MultiMessageSender \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u25ba\u2502 Bridge2 Adapter \u251c\u2500\u2500\u25ba\u2502 Bridge2 Contracts \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                             \u2502                                              \u2502 \u2502                                             \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502                                             \u2514\u2500\u25ba\u2502 Bridge3 Adapter \u251c\u2500\u2500\u25ba\u2502 Bridge3 Contracts \u2502 \u2502 \u2502                                                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                                                                            \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Destination chain                                                                           \u2502 \u2502                                                                                             \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                 \u2502 \u2502 \u2502 Bridge1 Contracts \u251c\u2500\u2500\u25ba\u2502 Bridge1 Adapter \u251c\u2500\u2510                                               \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502                                               \u2502 \u2502                                             \u2502receiveMessage              call               \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Bridge1 Contracts \u251c\u2500\u2500\u25ba\u2502 Bridge2 Adapter \u251c\u2500\u253c\u2500\u2500\u2500\u2500\u25ba\u2502 MultiMessageReceiver \u251c\u2500\u2500\u2500\u2500\u25ba\u2502 Receiver \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502                                             \u2502                                               \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502                                               \u2502 \u2502 \u2502 Bridge2 Contracts \u251c\u2500\u2500\u25ba\u2502 Bridge3 Adapter \u251c\u2500\u2518                                               \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                 \u2502 \u2502                                                                                             \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied?  The first audit is done by Peckshield and Halborn is engaged to do another audit. Peckshield audit report can be found here. Halborn is WIP. ETA - Wednesday, Feb 22nd In the future, the MMA core contracts (MultiMessageSender & MultiMessageReceiver) will be formally verified.  8. Is there a bug bounty program?  No  9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works.  All contract code in MMA are not upgradable. Uniswap Ethereum governance can change the configuration of the MMA including adding and remove bridge adapters and changing the quroum threshold of bridges. The upgrade process is straightforward. If Uniswap wants to remove/add a bridge from the MMA design, it simply adds/removes it through a contract call from Uniswap governance. Here is the documentation for configuration changes. And here is the example deployment and configuration changes on testnet using MMA.  10. Do any contracts have an owner or owner-like entity? If so, what can the owner do?   There is no persist owner-like entity in the MMA solution contracts. An owner exists for MultiBridgeReceiver contract only for initialization and will be burnt once it is setup. No owner exist in any integrated bridge adapter.  11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making?  The security of MMA relies on the quroum among integrated bridges. Assuming k is the quroum and N is the total number of integrated bridge. As long as k out of N bridges are passing the same governance calldata in the message, the governance action will be executed.  12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples.  There are two ways for an adversary to pass a fraudulent message from Ethereum to the destination chain: 1) the adversary compromises k out of the N bridges. Or 2) the adversary exploits the MultiBridgeSender or the MultiBridgeReceiver contracts to fake message passed by Uniswap governance. The latter concern can be addressed by thourough auditing and formal verification of the simple logic present.  13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples.  The adversary can only censor a governance message from passing through MMA when (N-k+1) out of N bridge providers are offline or compromised.  14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system.  The slashing mechanism in MMA is simple, removing the bridge from the set of approved bridge set. Additional, native slashing mechanisms for individual bridges still exist.  15. Provide any additional information you would like here:   MMA is a community-driven effort. The effort is led by a group of experienced Uniswap delegates and multiple bridge/aggregator providers. In the spirit of open source, we also would love to credit the amazing contributors to the project. Celer has contributed most of the implementation, conducted audits and deBridge and Router also integrated their solution with the adapter interface. Peckshield has provided the first audit pro bono. Hyperlane also constructed its parallel design based on ISM. It is important to note that there is no bridge-specific dependency in the MMA solution and it is bridge-neutral. We welcome community feedbacks. Moreover, we believe the MMA design is not just beneficial to Uniswap. It is a generalized solution for any DAO that relies on cross-chain governance. We believe the MMA design works in conjunction with the bridge assessment team\u2019s final deliverable. If the MMA design is chosen at the end, we can use the bridge assessment team\u2019s evaluations of the bridges as the selection criteria for the initial bridge participants. MMA is a public good. It not only is open source and free for anyone to use but also leverages emerging ERC-5164 standards and aims to bring more standardization to the bridging space.  ",
                    "links": [
                        "https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-Celer-MultiBridge-v1.0.pdf",
                        "https://github.com/celer-network/multibridge#add-new-bridge-and-update-threshold",
                        "https://github.com/celer-network/multibridge#example",
                        "https://github.com/celer-network/multibridge/blob/main/contracts/MultiBridgeReceiver.sol#L49",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/10",
                        "https://eips.ethereum.org/EIPS/eip-5164#messagedispatcher"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.7650037792894935
                },
                {
                    "author_link": "https://gov.uniswap.org/u/AlexSmirnov",
                    "index": "29",
                    "likes": "2",
                    "time": "18/02/2023-01:52:36",
                    "content": "Hey! Alex from deBridge here. Here\u2019s an overview of deBridge related to the questions from the Uniswap Foundation: deBridge is a secure cross-chain infrastructure enabling seamless interoperability between blockchains, powering transfers of any messages and liquidity with zero slippage and zero locked liquidity at risk.  image1400\u00d7438 79.3 KB  1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.   Security: deBridge has taken a unique approach and implemented an off-chain validation mechanism where all messages are signed by a set of validators who are elected by and work for deBridge governance. Validators are obliged to sign a unique identifier of every message that is sent through deBridge smart contract with their private key and then make the signatures public so anyone can execute messages on the destination chain. deBridge smart contract checks the validity of all the signatures and in the case at least 2/3rd of signatures are valid, delivers the message to the recipient. Validators don\u2019t communicate with each other and they never expose their IP addresses making it very difficult to attack the infrastructure.   Unlimited throughput and scalability: deBridge doesn\u2019t have its own blockchain or intermediary consensus layer, that\u2019s why there is no throughput bottleneck. deBridge also doesn\u2019t need to bootstrap liquidity pools in order to scale up to new chains. In case Uniswap governance decides to deploy on new chains that are not yet supported by deBridge, we will be able to quickly add support for these chains.   Optimal gas-efficiency: At deBridge, validators never broadcast any transactions. Hence, they never bear gas costs, unlike other interoperability protocols where gas costs of the validation layer are born by the message sender.   2. How long has the system been running on mainnet? deBridge has been live on mainnet since February 2022. The protocol has been running successfully since day one with 100% uptime, 100% message deliverability, and no security/reliability issues. 3. How much value has the system secured? (Current TVL, total transaction volume) deBridge is a cross-chain infrastructure that enables generic message transfers. The protocol has processed more than 131,000 messages from over 67,000 unique users. All protocol stats can be found in our deBridge explorer. deSwap is the first value-transfer protocol built on top of deBridge and has processed ~$94M of volume without any incentives and liquidity minings. In deSwap, we have never been chasing volume as the primary goal, but rather to build a capital-efficient solution with a sustainable economy that doesn\u2019t require TVL and distribution of liquidity incentives. We also believe that cross-chain value transfer protocols shouldn\u2019t have continuously locked liquidity or large TVL. That\u2019s why we\u2019re launching DLN, an asynchronous value transfer protocol built on top of the deBridge infrastructure. It\u2019s using a fundamentally new paradigm called \u201cliquidity on demand\u201d where any cross-chain trade can be settled natively with zero TVL, solving problems with security, scalability, and capital-efficiency of classical value-transfer bridges based on liquidity pools. More information can be found here. 4. Provide a background on your team. deBridge was started in early 2021 after winning a Chainlink hackathon among 140+ projects. The project\u2019s founding team and overall technology and product team have extensive experience in blockchain and crypto development including building custody solutions, distributed systems, and other applications for banks and other companies. deBridge\u2019s CEO and Co-Founder, Alex Smirnov, is a mathematician, researcher, and developer. He has led and developed various blockchain solutions and dApps, and came out of academia where he was working on his Ph.D. in mechanics and mathematics. Now, he\u2019s leading deBridge where his focus spans areas including protocol design, product management, ecosystem, and operations. The team\u2019s CTO and Co-Founder, Yaro Artyukh, has eleven years of experience in software development, six of which were involved in the development of different fintech and blockchain solutions. Yaro leads the development of all components for the deBridge protocol and architecture, making sure we have the go-to secure cross-chain infrastructure for any projects and users. In sum, the team has a security-first mindset and approach when building infrastructure to be reliable and stable. 5. Please link your developer documentation. Developer portal: deBridge Finance Developer documentation: https://docs.debridge.finance/ deBridge Explorer: https://explorer.debridge.finance/ Security: 10 Strategies for Cross-Chain Security Cross-chain Dapp example:   GitHub    GitHub - debridge-finance/debridge-cross-chain-dapp-example: A complete... A complete example of a conceptual cross-chain dApp which leverages the deBridge protocol to send calls between its contracts across chains. - GitHub - debridge-finance/debridge-cross-chain-dapp-ex...      We cover all aspects of deBridge in our docs including a general overview of the protocol, smart contract, and use case examples, how our generic messaging framework works, building with our development tooling, and more. 6. Does the bridge support arbitrary message passing? Yes, deBridge is a generic messaging infrastructure that enables arbitrary message passing. This goes for all types of messages including governance voting, smart contract logic, and contract calls. Learn more here: Getting started - deBridge 7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? Yes. Security will always be deBridge\u2019s primary focus area since it\u2019s difficult to build a secure and reliable cross-chain infrastructure, and we want to make sure builders and users have a secure interoperable framework that they can build and interact with. We have had 17+ audits up until this point where we have worked with 4 different security auditors in total. We have made sure to devote significant resources towards auditing our smart contracts, and also other aspects of the protocol including the deBridge node, our UI, Cloudflare, and other areas \u2013 all potential attack vectors in different ways. There have not been identified vulnerabilities in the deBridge protocol. All security audits can be found here: GitHub - debridge-finance/debridge-security: deBridge security audits 8. Is there a bug bounty program? Yes, we have an ongoing bug bounty program with Immunefi. This was initiated even before we went live on mainnet to make sure white hats, researchers, and others in the blockchain space help us discover any potential vulnerabilities in the architecture and overall protocol. Our bug bounty overview can be found here: deBridge Bug Bounties | Immunefi 9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. Every on-chain component of deBridge, including but not limited to:  deBridgeGate (the core gate contract) SignatureVerifier (the contract responsible for verifying message signatures and ensuring they are from trusted validators) CallProxy (the contract responsible for performing calls to target contracts) \u2013  is represented as an upgradable contract using the transparent proxy pattern. All proxies are currently controlled by a Safe multisig account shared across the deBride executive team. During the next few weeks, we are going to add deBridge validators and several reputable and experienced people in the industry as signatories to this account. Any upgrade of smart contracts will involve a multi-step process:  The upgrade should be fully audited by our security providers. The logic implemented by the upgrade will be described on the deBridge forum so every participant of the multisig account can validate the upgrade in advance and make sure it doesn\u2019t harm nor influence any integrations performed with deBridge infrastructure. Safe transaction to be formed by the core team. Signing transactions by all multisig participants. Execution of the signed transaction.  10. Do any contracts have an owner or owner-like entity? If so, what can the owner do? deBridge core contracts expose several administrative methods accessible to the controlling Safe multisig. These methods permit managing various protocol settings such as: pausing/unpausing the protocol; enabling/disabling chains where messages can be sent to/from; adding/removing validators\u2019 addresses responsible for messages confirmation; setting signature acceptance thresholds and protocol fees. Important to note: After introducing the deBridge token, governance will take control over the protocol and all the administrative processes. 11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? Any non-canonical bridge has inevitably a validation layer with consensus participants, and like all bridging solutions applying to this Assessment Process, deBridge bears the assumption that consensus participants will never collude to forge messages. One of the goals here is to make consensus participants bear financial responsibility and maximize their stake that acts as financial insurance. That\u2019s why deBridge has a delegated staking and slashing module as a part of the protocol design (the module is not live yet and will be launched later this year). Read more about our slashing and delegated staking here: https://docs.debridge.finance/the-core-protocol/slashing-and-delegated-staking  deBridge has selected 12 professional and experienced infrastructure providers based on their performance e.g. stability of infrastructure, uptime, number of missed transactions, and validation speed. This includes HashQuark, Bware, and Stakin among others. After the launch of the deBridge DAO, governance will have the ability to decide on how many validators the network should have and who should be the validators. The full list of deBridge validators can be found here: Debridge - Cross-chain Bridge With this in mind, we can go into the security features to ensure we have a secure and reliable protocol. These include:  Slashing Mechanism (to be launched in 2023): Validators have an important role in the deBridge protocol design. deBridge uses a slashing mechanism to disincentivize validators from colluding and acting against the best interest of the protocol. Transaction finality specifications: Validators need to wait for a specific number of block confirmations and sign transactions only when they have achieved their finality. This prevents double-spending since transactions become irreversible after achieving finality. Validation of nonce sequence: A nonce is the unique sequence number assigned to every transaction passing through the deBridge protocol. Validators are always required to confirm transactions in an ascending order which helps to avoid double-spending and improves overall protocol security against reorgs and 51% attacks.  More details about our security measures can be found here. 12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. Assuming the security of deBridge node and smart contracts, there\u2019s only one way a fraudulent message can go from Ethereum to another chain. This is in case 2/3 (8 out of 12) validators come together to collude and sign a fraudulent (non-existing) message. Here, someone would need to get access to the private keys of at least 8 validators to sign a fraudulent message in order to execute it through the deBridge smart contract on the destination chain. Thanks to deBridge off-chain validation, validators never communicate with each other and never broadcast any transactions. They never expose their IP addresses making it very difficult to attack the infrastructure as no one knows where validators are running the infrastructure. Moreover, the number of validators will grow over time to increase the decentralization of deBridge and to make it more difficult for adversaries to do something maliciously. 13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. In case there\u2019s an adversary that wants to censor a message, this can be achieved by 5/12 of the validators coming together. Validators that censor messages will also be slashed by protocol governance 14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. There are some specific ramifications and security precautions that we have thought about when designing the deBridge architecture. The main one is slashing mechanics where validators are required to provide financial guarantees in a form of collateral (their own + collateral delegated to them by delegators/users) in a delegated staking smart contract. This is to disincentivize colluding among validators, and the collateral will act as a guarantee of validators\u2019 acting as they should and in the best interest of deBridge, since they otherwise will be slashed. The slashing works the way that if validators decide to act maliciously, their stake will be slashed by the deBridge governance to payout to the affected users of the infrastructure. \u2013\u2013 deBridge is in favor of the MMA design option as Uniswap\u2019s go-to implementation. We believe this will benefit the Uniswap protocol the most while bringing the best secure and reliable option. ",
                    "links": [
                        "https://explorer.debridge.finance/",
                        "https://debridge.finance/blog/deswap-liquidity-network-dln-a-secure-new-paradigm-for-depthless-cross-chain-value-transfers/",
                        "https://debridge.finance/develop",
                        "https://docs.debridge.finance/",
                        "https://explorer.debridge.finance/",
                        "https://debridge.finance/blog/10-strategies-for-cross-chain-security/",
                        "https://github.com/debridge-finance/debridge-cross-chain-dapp-example",
                        "https://github.com/debridge-finance/debridge-cross-chain-dapp-example",
                        "https://docs.debridge.finance/build-with-debridge/getting-started",
                        "https://github.com/debridge-finance/debridge-security",
                        "https://immunefi.com/bounty/debridge/",
                        "https://docs.debridge.finance/the-core-protocol/slashing-and-delegated-staking",
                        "https://www.hashquark.io/#/",
                        "https://bwarelabs.com/",
                        "https://stakin.com/",
                        "https://explorer.debridge.finance/validation-progress",
                        "https://debridge.finance/blog/10-strategies-for-cross-chain-security/"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.9161218848718855
                },
                {
                    "author_link": "https://gov.uniswap.org/u/LayerZeroLabs",
                    "index": "30",
                    "likes": "3",
                    "time": "18/02/2023-02:17:46",
                    "content": " omnichain-governance-executor1764\u00d7721 8.32 KB  1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance. Leading Adoption: LayerZero is the most widely used cross-chain messaging protocol by a significant margin (2k contracts deployed on mainnet, nearly 20k contracts on testnet). The protocol supports thousands of applications and has secured millions of messages and billions of dollars. Longstanding Security: The protocol has never suffered a single exploit despite being deployed and used at scale. It is no coincidence that LayerZero is the most widely adopted cross-chain messaging protocol and also has never suffered an exploit. Since inception, LayerZero Labs has been committed to a set of best-in-class security practices (see below for breakdown). All of the core protocol code is immutable meaning the smart contracts cannot be upgraded by the LayerZero Labs team once deployed. In contrast, the majority of the stolen user funds ($3.1B in 2022) from cross-chain bridges and messaging protocols are attributed to upgrades made by cross-chain messaging teams and the consequent application contagion. Immutability matters. Protocol Alignment: Uniswap is the gold standard for immutable and permissionless systems; the protocol was deliberately built with completely immutable core contracts and designed to limit risk exposure to the protocol while leaving some surface area of control to governance. LayerZero is built with the exact same principles: completely immutable core contracts and agency in the hands of (Uniswap) governance to control security hyperparameters. We believe the gold standard for a secure messaging layer is one that allows protocol ownership and transparency of immutable contracts. 2. How long has the system been running on mainnet? 11 Months 3. How much value has the system secured? (Current TVL, total transaction volume) The system currently secures billions in TVL, has secured a peak of more than $8.4b in TVL and has processed more than $6b+ total transaction volume. 4. Provide a background on your team. The LayerZero Labs team includes founders with multiple venture backed exits and leading engineers from AWS, Coinbase, the office of the CTO at Redhat and backgrounds in academia, research and algorithms for some of the most widely adopted technologies across all of the internet stack. We\u2019ve also been backed by one of the strongest cap tables in the space, winning votes of confidence in the team and underlying technology from world class organizations such as Sequoia, a16z, Coinbase, Circle, and Uniswap Labs. 5. Please link your developer documentation.  What is LayerZero - LayerZero Docs Github & Code Examples: LayerZero-Labs \u00b7 GitHub  LayerZero Scan: https://layerzeroscan.com/  Community:  Discord: LayerZero  Telegram: Telegram: Join Group Chat  Twitter: https://twitter.com/LayerZero_Labs     6. Does the bridge support arbitrary message passing? Yes, LayerZero\u2019s arbitrary messaging primitive is described here. 7. Has the current deployed bridge code been audited? By a third party?hat attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied? LayerZero Labs has commissioned 35+ audits with the most recent audits on Github here. Nearly all code written by LayerZero Labs since inception have been immutable smart contracts audited externally and rigorously reviewed internally at least 3+ times each. LayerZero is the only major cross-chain messaging protocol to have secured significant transaction volume ($5B+) over time without any exploit, compromise of key infrastructure, or loss of user funds. 8. Is there a bug bounty program? Yes, LayerZero Labs offers the highest bug bounty program in the world at $15m. 9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works. There is no part of the LayerZero protocol that is upgradeable. Our proposal has the Uniswap DAO in control of choosing its own hyperparameters so that only the Uniswap DAO can change with an on-chain governance vote. 10. Do any contracts have an owner or owner-like entity? If so, what can the owner do? Yes, the owner can set default hyperparameters for messaging. Our proposal has the Uniswap DAO in control of choosing its own hyperparameters so that only the Uniswap DAO can change with an on-chain governance vote. 11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making? At its core the LayerZero protocol allows the user application to set an arbitrary number of parties to attest the validity of a message between two chains. We propose that the DAO set Chainlink as the oracle and a consortium of Uniswap Delegates to act as a decentralized relayer network. We have already spoken to a number of delegates who have agreed to participate as validators within the relayer, however should the DAO not wish to use this they can set an alternative relayer such as LayerZero Labs, Blockdaemon or Gelato. The trust assumption would be that Chainlink and the chosen Relayer are not actively colluding against the Foundation\u2019s wishes to forge messages. Bear in mind that Chainlink already secures $75B+ of dollars today and has secured $7T+ of economic value of transactions and the delegates are by far the most economically aligned with the Uniswap DAO and already have a significant surface of influence over Uniswap governance via voting power. 12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples. The risk of an adversary passing a fraudulent message from Ethereum to the destination chain is near zero; For a message to be forged, the adversary would need to simultaneously and independently corrupt the entire consortium of Uniswap delegates as well as Chainlink. It\u2019s worth noting that if the consortium of Uniswap delegates wanted to collude they already likely have enough voting power to collude directly via governance and have no need to do it via the messaging layer on top of the additional burden of needing to corrupt Chainlink as well. 13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples. The consortium of Uniswap delegates and Chainlink would need to be willfully withholding the message. In this case, it would be both obvious to everyone that this was happening and who was responsible and allow the Uniswap DAO to change their configuration to remove the malicious party and successfully deliver the message. 14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system. If any of the actors in the Uniswap delegate network were to act maliciously and sign an incorrect message, it would be publicly observable and the other Uniswap delegates would withhold signature. This would carry huge reputational risk to the malicious delegate and result in the Uniswap DAO ejecting them from the relayer network. Chainlink oracles in the Chainlink DON carry huge reputational risk and already secure $75B+ today. If one were to sign a forged message, they would face removal from the Chainlink DON and risk huge reputational risk in all of their core businesses. 15. Provide any additional information you would like here. We have deployed our omnichain governance executor on Goerli testnet and BNB testnet and executed a fee switch from (0,0) to (4,5). Below are the contract addresses and the layerzeroscan transaction. proposalSender on ethereum-goerli: 0x78F386bf7F5c638b14e166Fa31F8c66BBb654b4B governanceExecutor on bnb-testnet: 0x3CE8305175Bfa090278568461aee8e64B5C220F5 Uniswap v3 pool on bsc-testnet: 0x881A6726B06CEc80Dd512f5f2556242ECaCA8700 Here is the transaction on LayerZero Scan: Cross Chain Message | LayerZero Security in anything boils down to the weakest link. The most common weak links in messaging protocols are (1) client diversity and (2) upgradeability. 1) Client diversity: Many middlechain messaging protocols and bridges celebrate their \u201cdecentralization\u201d by touting the number of validators in their network. For example a system might have 19 validators, and to achieve consensus, their service needs at least 13 signatures. However, those features are not the weakest link in this system; the client diversity is. All of these validators are running the same piece of software developed by the same team. The weakest link comes from the team that provides the source code and software updates. A simple bug or hack from external parties could push code to force signatures on malicious network traffic. This isn\u2019t a new concern in crypto, as it was a fairly significant issue with the Ethereum community before POS when most of the clients and miners in the network were running Geth. Today Ethereum has the luxury of 4 or 5 unique clients built and maintained by different respective development teams thereby reducing the risk of developer-related attacks (e.g. pushing an upgrade with a smart contract bug, human engineered hack). Pre-POS, one of the main reasons lack of client diversity wasn\u2019t a major concern with Ethereum was the fact that if Geth performed an attack, the network could rollback to a previous version of Geth and erase from history the previous attack; a necessary rollback would be a major blow to Ethereum but not a fatal one. In contrast, lack of client diversity is a major risk for bridges because the bridges themselves reach finality; bridges don\u2019t have the luxury of rolling back chains, every action is final. Therefore when using a middlechain messaging protocol\u2013 by design, lacking client diversity\u2013 users and applications are not accepting the security of X validator decentralized network but rather the security of the weakest link: the creator company itself. (2) Upgradeability: Most, if not all, messaging frameworks (besides LayerZero \u2013 the entire protocol is composed of immutable smart contracts) are upgradeable. Developer teams push upgradeable code so they can optimize for rapid releases of the latest and greatest technology and enjoy the advantage of fixing bugs or issues in their code with limited overhead time. This feature is a double edged sword; if teams have the power to fix issues, it also means they have the power to create them. In other words, even the most secure application built on top of a mutable messaging framework will always carry existential risk the code that is in production today is not the same code in production tomorrow. Upgradability has been a long standing source of significant and repeated issues within the existing messaging frameworks. The last two bug bounties paid out by Wormhole were due to upgradeability issues. The Wormhole developer team upgraded a contract and forgot to set parameters. They left themselves exposed for weeks to an attack and were incredibly fortunate to have whitehats report it and collect a partial payout of the $10m bounty. Shortly after this first payout, the team performed the same issue again and paid another $10m bounty. Had a blackhat found this issue both times, the attacker could have bricked the bridge and locked up $1.8B. In 2022, Wormhole additionally lost over $325M. The recent hack of the Nomad bridge which occurred this summer was due to an upgrade which introduced a bug that allowed anyone to forge arbitrary messages and resulted in the exploit of more than $200M that still has never been recovered. Commitment to a security operations and engineering mandate of immutable code is a challenging but critical path to take in designing the strongest, most secure, and high integrity infrastructure for developers to build upon. As your team has familiarized themselves, at a high-level, LayerZero\u2019s architecture consists of endpoints (immutable smart contract libraries) and independent oracles and relayers. The independence and diversity of available oracles and relayers are a unique aspect of the protocol design. LayerZero has an ever-growing array of oracles and relayers all running their own custom client software, meaning that when an application chooses, say Chainlink Oracles and the LayerZero Labs Relayer, the application developers know that both components are built by teams running completely different clients. This significantly reduces the attack surface of the messaging framework. Additionally, LayerZero by design empowers applications with the option to run a component within their messaging layer. For example, an application can opt to use multiple oracles and relayers, each their own custom clients, one of which is run by the application itself. Thus, the security of the messaging layer remains decentralized but backstopped by the veto of the application-run oracle or relayer. LayerZero\u2019s code is completely immutable and LayerZero Labs can never upgrade the existing code. One of our team\u2019s core theses is that the best-in-class messaging protocol can and should evolve with best security practices and cryptographic research. In practice, LayerZero Labs can write new immutable smart contract libraries to offer as additional libraries for applications to choose from / opt-in to. Applications always maintain the choice to opt-in to libraries set as default just as they may choose to evaluate new offerings of libraries and point their contracts accordingly. A developer can choose to use the same libraries that have secured billions of dollars in TVL over the past year and maintain usage of those libraries for the next 20+ years without ever having to accept new code without interference from any LayerZero Labs activity. A developer can choose to use the longest tested library for a month and then opt later to use a library leveraging novel cryptographic proofs. LayerZero evolves and scales with research while protecting the agency and chosen security of the application developer in perpetuity. This design puts security in the hands of applications and does not render applications dependent on LayerZero Labs in any way. ",
                    "links": [
                        "https://layerzero.gitbook.io/docs/",
                        "https://github.com/LayerZero-Labs",
                        "https://layerzeroscan.com/",
                        "https://discord-layerzero.netlify.app/discord",
                        "https://t.me/joinchat/VcqxYkStIDsyN2Rh",
                        "https://twitter.com/LayerZero_Labs",
                        "https://layerzero.gitbook.io/docs/faq/messaging-properties",
                        "https://github.com/LayerZero-Labs/Audits/tree/main/audits",
                        "https://layerzero.gitbook.io/docs/bug-bounty/bug-bounty-program",
                        "https://github.com/LayerZero-Labs/omnichain-governance-executor",
                        "https://testnet.layerzeroscan.com/10121/address/0x78f386bf7f5c638b14e166fa31f8c66bbb654b4b/message/10102/address/0x3ce8305175bfa090278568461aee8e64b5c220f5/nonce/1"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.741342212661231
                },
                {
                    "author_link": "https://gov.uniswap.org/u/umaroy",
                    "index": "31",
                    "likes": "3",
                    "time": "18/02/2023-03:34:04",
                    "content": "Hi all, Uma from Succinct: succinct.xyz here. We\u2019re building a cross-chain interoperability solution secured with zkSNARKs that is significantly more decentralized, permissionless and censorship resistant compared to existing bridging solutions. While our protocol has not been deployed to mainnet as of right now, we plan on deploying our protocol to mainnet quite soon and I wanted to post in this forum, if not for official consideration, then to raise awareness of a new generation of bridging solutions that are highly aligned with the decentralization, permissionless and censorship resistant properties that Uniswap governance cares about. For some background on the general principal of light-client bridging enabled by zkSNARKs, here is an informational blog post that our team wrote: blog.succinct.xyz/post/2022/09/20/proof-of-consensus/ about the general idea.   List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.  Uniswap as a protocol fiercely cares about decentralization, censorship resistance and permissionlessness. This is evident in the deployment of all versions of the core protocol as non-upgradeable contracts with DAO-controlled voting for any protocol-level changes. Current bridging solutions that rely on permissioned multisigs or PoS validator sets do not inherit the underlying security of Ethereum and compromise on many of Uniswap\u2019s core values. We believe that on-chain succinct light clients powered by zkSNARK technology is the first time it\u2019s possible for a bridging solution to align fully with Uniswap\u2019s core values. Permissioned multisigs that back most existing bridges can forge fraudulent messages or censor valid messages. Permissionless, on-chain systems that verify the consensus of a source chain in the execution layer of a target chain are censorship resistant and not forgeable. As highlighted in the blog-post linked to above, we believe that zkSNARK-enabled succinct light clients are the end-game of cross-chain interoperability. Some of the cons of zkSNARK bridging currently include that it is slower than normal multisig bridging and costs more gas (due to the need to verify a zk proof on-chain vs. the minimal cost of verifying signatures from a multisig). For the governance use-case, where latency and gas-costs are relatively unimportant (as governance has a timelock anyways and messages are infrequent), the cons of zkSNARK bridging are not relevant.    How long has the system been running on mainnet?  Our system is not currently deployed on mainnet, as we are working with relatively newer technology (zkSNARKs) compared to the rest of the bridging landscape. Our current plan for mainnet deployment is quite soon (we have already deployed a system to testnet and are stress-testing it before our mainnet launch) and we believe that Uniswap governance should consider us as a viable solution in the near-term future.    How much value has the system secured? (Current TVL, total transaction volume)  N/A for aforementioned reasons    Provide a background on your team.  The assembled team has deep expertise in zkSNARKs, blockchain and consensus. The core engineering team has experience from some of the best academic institutions (MIT, Stanford, UC Berkeley) and professional experience from top-tier engineering and technology companies, including Google, Celo, NVIDIA, and Plaid. Additionally, our team and company originated from collaboration with idealogically aligned ecosystem partners, such as 0xPARC (0xPARC) and Gnosis DAO, who generously gave us a grant that got us our start: GIP-57: Should Gnosis DAO support research of a zkSNARK-enabled light client and bridge? - GIPs - Gnosis     Please link your developer documentation.  Our initial documentation is being updated in real-time before our mainnet launch but an early (very rough draft) version with some of the interfaces is available here: docs.succinct.xyz/build-with-telepathy/arbitrary-messaging     Does the bridge support arbitrary message passing?  Yes this is the only thing our bridge supports right now and our main focus as a company.    Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied?  We have engaged 3 audit firms to audit our system end-to-end. These audit reports will be public prior to our mainnet launch.  Veridise is a premier zkSNARK auditing firm that also does formal verification of circuits. Veridise has audited our zkSNARK circuits at the heart of our system. Trail of Bits is a top-tier blockchain security firm that audited our zkSNARK circuits and smart contracts. Zellic is another top-tier auditor that we have engaged for our smart contracts.      Is there a bug bounty program?  We plan on having a generous bug bounty program with Immunifi once our mainnet deployment goes live.    List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works.  Our system is secured by an Ethereum light client running on-chain. The core light client is permissionless: it is not upgradeable and has no owner. Anyone can submit header updates to the light client and the updates are validated by the zkSNARK proof validation. The messaging protocol that uses the on-chain Ethereum light client is permissionless (anyone can submit messages), as the messages are validated against headers from the light client to verify they were actually sent on Ethereum. The messaging protocol is configurable and flexible to have whatever upgradeability pattern (or lack thereof) that the user desires, and our mainnet deployment will have a few different options for users to select between.    Do any contracts have an owner or owner-like entity? If so, what can the owner do?  Addressed above.    What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making?  The security model for this bridge is light client security. At a high-level we are trusting the honesty of the Ethereum validators involved in the Ethereum light client protocol. Like all other bridging protocols, the security model also includes correct implementation of the protocol as an assumption. More details about the protocol and its trust assumptions can be found here: docs.succinct.xyz/protocol/overview.    How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples.  Like any bridge, if there are implementation bugs then the adversary can pass fraudulent messages if they hack the implementation  of our system. If the adversary is able to systematically bribe Ethereum validators to compromise Ethereum\u2019s light client protocol (extremely unlikely), they will also be able to trasmit a fraudulent header.    How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples.  Similar to above, if there are implementation bugs or if an adversary is able to systematically bribe Ethereum validators to compromise Ethereum\u2019s light client protocol and bribe them to not sign a series of valid headers (which is extremely unlikely).    What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system.  N/A to our system as it is permissionless    Provide any additional information you would like here.  We encourage Uniswap governance to consider a new generation of bridging solutions powered by on-chain Succinct light clients and zkSNARKs that are able to provide much of the security properties they care about.    ",
                    "links": [
                        "http://0xparc.org/about",
                        "https://forum.gnosis.io/t/gip-57-should-gnosis-dao-support-research-of-a-zksnark-enabled-light-client-and-bridge/5421",
                        "https://docs.succinct.xyz/build-with-telepathy/arbitrary-messaging",
                        "https://docs.succinct.xyz/protocol/overview"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.730875420875421
                },
                {
                    "author_link": "https://gov.uniswap.org/u/zokyo",
                    "index": "32",
                    "likes": "0",
                    "time": "18/02/2023-05:27:30",
                    "content": "Dear Uniswap community, I would like to nominate Zokyo as a strong candidate and technical expert for selecting a cross-chain solution for Uniswap governance. Our team has extensive experience designing and securing cross chain infrastructure and have conducted audits for projects like Router Protocol, LayerZero, and Symbiosis. Over the last four years, we have audited, tested, and secured over $200 billion in TVL, and our experience speaks for itself. Introducing Zokyo Zokyo secures, builds, and invests in legendary crypto/web3 projects. We keep pace with in-house development teams and provide blockchain security, design, and development talent to startups and enterprise organizations as needed. As a go-to crypto/web3 security, token economic, and development partner working with some of the most progressive companies since 2018, we are highly experienced in tackling some of the most challenging problems with an entrepreneurial spirit. With immediate access to in-demand skills ranging from security auditing, cryptography, white-hat hacking, mathematical specifications of network design, UI/UX design, QA, and full-stack engineering, we help companies accelerate time to market and achieve their goals. We have consulted and audited smart contracts multiple major bridging and cross-chain messaging protocols and audited many projects which have integrated bridges and messaging protocols. Zokyo has also performed comprehensive security audits for applications that have chosen to implement their own cross-chain solutions, including Symbosis, one of the most novel cross-chain liquidity engines. Apart from providing auditing and security work for cross-chain specific teams, Zokyo has worked extensively with a wide range of clients, including Umami Labs, RailGun, LimitBreak, FileCoin, Mysten Labs, SushiSwap, Near Foundation, and more. Our commitment to crypto/web3 security is reflected in our extensive range of clients, who trust us to audit and fortify their code. Our Team Stefan Andrei, Zokyo\u2019s CTO, will be the engineer representing Zokyo. Andrei is a highly experienced blockchain security expert who played a key role in multiple projects. He has expertise in general bridge architecture and is the lead auditor for multiple significant smart contract audits. Andrei also contributed to developing and securing MultiversX\u2019s WebAssembly VM. He also worked on developing and securing a cross-shard/multi-shard decentralized lending application. Andrei\u2019s experience as a senior smart contract auditor and his experience in developing and securing multi-sharding applications will undoubtedly be an asset to this project. If selected, Andrei (and Zokyo) will strive to optimize security and governance across the platform from day one. Andrei\u2019s socials: Twitter: @0xStefanAndrei GitHub: stefanandy Zokyo socials: Twitter: @zokyo_io GitHub: zokyo Website: zokyo.io The selection of a bridge provider by Uniswap holds great importance for the entire cryptocurrency industry. At Zokyo, our mission is to elevate crypto/web3 security standards. As such, we are pleased to offer our services pro bono. Conflicts of Interest Ethics form the foundation of our values. Despite our previous work with cross-chain protocols including Router Protocol, LayerZero, and Symbiosis, we are dedicated to impartiality, objectivity, and fairness. Our primary role is that of a security auditing services provider who furnishes impartial evaluations. We aim to identify the optimal cross-chain solution for Uniswap governance, irrespective of specific bridge(s). We are confident that Zokyo is the right choice for this job, and we are excited to participate in the assessment process and contribute to the best of our abilities. ",
                    "links": [
                        "https://twitter.com/zokyo_io",
                        "https://github.com/zokyo-sec",
                        "http://zokyo.io"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.355550941306756
                },
                {
                    "author_link": "https://gov.uniswap.org/u/mysteryfigure",
                    "index": "35",
                    "likes": "2",
                    "time": "18/02/2023-06:39:28",
                    "content": "We\u2019d like to offer a neutral and scientific perspective on the whole discussion by pointing to a recent paper comparing arbitrary message-passing protocols. Arbitrary Message Passing across Blockchains Please feel free to point out any mistakes or inappropriateness though. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.4
                },
                {
                    "author_link": "https://gov.uniswap.org/u/ChainPort",
                    "index": "38",
                    "likes": "8",
                    "time": "21/02/2023-18:22:31",
                    "content": " Nominating ChainPort for UNI Cross-Chain Support  1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.  A. ChainPort employs full fund segragation, meaning contracts operating the bridge hold only an operating budget, and over 95% of funds are secured by MPC (Fireblocks) and/or Multi-Sig Vault Contracts (Gnosis). B. ChainPort enables a customized custodian solution, which can enable the Uniswap DAO to act as signatory holding and managing the frozen tokens in the MPC and/or Multi-Sig Vaults. This means the community/DAO can act as a requires layer of security for keeping the origin UNI safe and out of circulation while that supply is mirrored on the target chains. C. On target chains, the mintable tokens created by ChainPort have various security mechanisms which can be delegated to the control of the UNI Governance DAO.  2. How long has the system been running on mainnet?  App.ChainPort.io has been live since May 2021. You can view stats for last 12 months on our stats page  3. How much value has the system secured? (Current TVL, total transaction volume)   image1920\u00d7966 80.5 KB  Currently: ~170M$ TVL 605.46M$ Lifetime Port Volume 66,586 Ports to date More stats on the stats page.  4. Provide a background on your team.  ChainPort is built and maintained by DcentraLab, you can meet our team on Linkedin  5. Please link your developer documentation.  ChainPort Docs  6. Does the bridge support arbitrary message passing?  no, only token transfers currently. Arbitrary message passing is currently not in a mature enough state in terms of security, hence all other bridges getting hacked on the protocol level\u2026 Nevertheless we are working on a 2.0 version with more generalized messaging framework, and will release it once we believe it will not require bug iterations on the backs of production users and funds\u2026  7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied?  The first audit was made by CyberUnitTech: ChainPort CyberUnitTech Audit You can review quite a few of the more updated audits made by Certik here: ChainPort Certik Audits We also have a TrailOfBits 8 Engineering week audit performed on the backend and contracts code, which has just been concluded and we\u2019d be happy to share it with the assessment team (it is not available online). In all audits, any medium and up issues have been resolved, and all pertinent or actual low and below issues as well. The major vulnerability in a custodian bridge solution is the custodianship, which we resolve by multiple layers of security and segregated permissions, including also the project representatives, and our own DAO congresses and distributed multi-sig schemas. You can read more about our security approach here: ChainPort Security  8. Is there a bug bounty program?  We\u2019re in final stages of installing it. Running in the past we\u2019ve seen it become very spammy, we\u2019re working on a refined methodology for getting actual value of the program.  9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works.  as discussed the funds themselves are 95% in gnosis vaults and/or Fireblocks MPC vaults (per the preferences of the project, e.g. UNI governance can decide where to store the origin UNI frozen on source chain). The target token is upgradable and governable by either a congress of DcentraLab representatives, or a congress of DcentraLab reps and UNI reps, or by UNI Governance reps directly.  Gnosis vaults are upgradable but will require signature of UNI DAO as well Target Tokens (UNI on target chains) can be set to be governable and upgradable only by approval/signature from UNI DAO. The contracts (main bridge and side bridge) operating the bridging itself, hold 5% or less of the supply (for main bridge), or have a minting capability which can be set to be frozen by the UNI DAO in cases of emergency. These 2 contracts are upgradable by a DcentraLab DAO congress vote (a cold wallet multi-sig contract schema of geo distributed representatives.   10. Do any contracts have an owner or owner-like entity? If so, what can the owner do?  The bridge contracts have the DcentraLab Congress as governer. The bridged tokens contracts has a dedicated Congress as controller, which can also be set to be a dedicated congress with UNI DAO reps included or a UNI DAO contract included as signer. Congresses can perform security actions as unfreezing the bridge after security mechanisms trigger freezing, or making security operations on the tokens (freezing/unfreezing tokens, freezing/unfreezing accounts etc\u2026)  11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making?  For the custom custody model, we remove most trust assumptions, and enable the project/DAO itself (in this case UNI DAO) to trust only itself for the majority of financially risky operations:  UNI DAO signature will be required along with the DcentraLab Congress to free up UNI reserves (rebalance bridge) - which means the TVL will be guarded directly ALSO by UNI DAO (in addition to the DcentraLab Congress). UNI DAO signature will be allowed to freeze minted tokens on side/target chains. UNI DAO signature will be required to unfreeze token in case of freeze, and will be able to freeze token or minting of the token, UNI DAO signature will be required to upgrade side chain tokens. UNI DAO will be able to run your own version of the bridge monitor, to auto-freeze minting and the token in case a discrepancy in the accounting/minting takes place (e.g. minted appear as higher then deposited amounts cross the network etc\u2026)   12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples.  The ChainPort system only accepts messages from the chainport contracts, so the only way to pass a fraudulent message would be to somehow take over the chainport contracts themselves (i.e. get physical access to a majority of the DAO signers). Even then, UNI DAO will have control over the reserves, and minting, and the tokens on target chains, so no real damage can be accrued and minting + the tokens can be frozen in such unlikely case until it is resolved.  13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples.  In the current system, this can be possible if a malicious actor hacked many layers of server security and somehow took down the backend. But once the backend has redundancy mechanism so this is unlikely. But even in such case, once backend is back online it will continue processing messages where left of. As soon as valid event is emitted, it will eventually be processed.  14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system.  We don\u2019t rely or depend on external actors, only on direct interest actors, in this case, the UNI DAO will partake in the security, so is serving a self-interest in protecting the UNI cross-chain network.  15. Provide any additional information you would like here.  You can read more about the custom custodian solution here: ChainPort Custom Custody Solution for DAOs/Projects We are working on ChainPort 2.0 which will offer generalized cross chain messaging and a more decentralized message relay, validation and verification mechanisms. We believe that the other currently available more \u201cDecentralized\u201d solutions are premature and much more prone to hacking, which is why our approach is to very slowly decentralize, while keeping security as main concern. We are also now supporting Cardano utilizing a highly secure approach, which also enables the UNI DAO to govern and control the entire minted supply on Cardano in a DAO like manner, for enhanced security. We can share more on this in a dedicated discussion. ",
                    "links": [
                        "http://App.ChainPort.io",
                        "https://app.chainport.io/stats",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/5/563342511cc4be564cc1b06b116338e3a9fe8fe4.jpeg",
                        "https://app.chainport.io/stats",
                        "https://chainport.io",
                        "https://DcentraLab.com",
                        "https://www.linkedin.com/company/dcentralab/people",
                        "https://docs.chainport.io",
                        "https://www.chainport.io/audits/cyberunit",
                        "https://www.certik.com/projects/chainport",
                        "https://www.chainport.io/security",
                        "https://www.chainport.io/private-bridge"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.613404424681598
                },
                {
                    "author_link": "https://gov.uniswap.org/u/devinwalsh",
                    "index": "39",
                    "likes": "4",
                    "time": "23/02/2023-19:48:33",
                    "content": "Hi all, I just posted an update on where we are in the process on Twitter here. Committee members applicants: I believe we have been in touch with each of you at this point. If not, please DM the UF on Twitter ASAP (here). We are in the process of finalizing community members and should be able to announce them, and kick off the assessment process, next week. Bridges & bridge agnostic solutions: thank you to all who have posted in the forum to apply. If we are not already in contact with you, reach out to the UF via Twitter ASAP (here) to connect. Also, please send 5000 USDC to the UF multisig (0xe571dC7A558bb6D68FfE264c3d7BB98B0C6C73fC) and send us the transaction hash once completed (either post in the forum or send to us over Twitter/Telegram). This payment will need to be made in order to kick off diligence. ",
                    "links": [
                        "https://twitter.com/UniswapFND",
                        "https://twitter.com/UniswapFND"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://gov.uniswap.org/u/jse",
                    "index": "40",
                    "likes": "2",
                    "time": "24/02/2023-09:19:44",
                    "content": "A custodian solution like this is probably the best option to avoid hacks. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 10.0
                },
                {
                    "author_link": "https://gov.uniswap.org/u/erezbk",
                    "index": "41",
                    "likes": "0",
                    "time": "24/02/2023-10:40:06",
                    "content": "UNI is too important to be protected with anything less then the ChainPort custodian bridge solution. Bridging UNI will most probably will do very good for the token trading volume, exposure, and user base, and ChainPort can offer out of te box 14 chains including all those Uniswap supports now ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.843333333333334
                },
                {
                    "author_link": "https://gov.uniswap.org/u/susansumner",
                    "index": "42",
                    "likes": "1",
                    "time": "24/02/2023-11:15:19",
                    "content": "ChainPort has a great team behind it. Constant updates and lots of supported chains. Intuitive UI, fast ports, and most of all SECURITY focused. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.1
                },
                {
                    "author_link": "https://gov.uniswap.org/u/monet-supply",
                    "index": "43",
                    "likes": "2",
                    "time": "24/02/2023-22:54:47",
                    "content": "Think the recent situation with Wormhole/Jump and Oasis.app provides important context that should be considered in the bridge evaluation process.   twitter.com    Oasis.app \ud83c\udf34 @oasisdotapp  A statement regarding the transactions from the oasis multisig on 21st Feb 2023 blog.oasis.app/statement-rega\u2026   9:25 PM - 24 Feb 2023           29                11              twitter.com    Blockworks Research @blockworksres  We do a little counter exploit.  How Jump Crypto recovered +$200M of stolen ETH. @smyyguy shows us how\ud83e\uddf5   9:20 PM - 24 Feb 2023           240                59            Personally, this has significantly reduced my confidence in Wormhole\u2019s capability to provide a neutral, trust minimized solution for Uniswap\u2019s governance message passing. ",
                    "links": [
                        "https://twitter.com/oasisdotapp/status/1629230949438291971?s=20",
                        "https://twitter.com/oasisdotapp/status/1629230949438291971?s=20",
                        "https://blog.oasis.app/statement-regarding-the-transactions-from-the-oasis-multisig-on-21st-feb-2023/",
                        "https://twitter.com/oasisdotapp/status/1629230949438291971?s=20",
                        "https://twitter.com/blockworksres/status/1629229927424831491?s=20",
                        "https://twitter.com/blockworksres/status/1629229927424831491?s=20",
                        "https://twitter.com/blockworksres/status/1629229927424831491?s=20",
                        "https://twitter.com/smyyguy",
                        "https://twitter.com/blockworksres/status/1629229927424831491?s=20"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.489583333333333
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Naught",
                    "index": "44",
                    "likes": "0",
                    "time": "25/02/2023-03:06:30",
                    "content": "Could you expand on why this reduces confidence in Wormholes capabilities? From what I read it seems Oasis\u2019s contracts being upgradable and controlled by an Oasis multisig allowed the stolens funds to be accessed in it\u2019s vault and sent back to Wormhole via a court order. Does this imply that Wormhole will censor or seize bridge messages/funds if ordered by court? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://gov.uniswap.org/u/ReBa",
                    "index": "45",
                    "likes": "0",
                    "time": "26/02/2023-06:54:24",
                    "content": "This is the most secure method of bridging. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.25
                },
                {
                    "author_link": "https://gov.uniswap.org/u/monet-supply",
                    "index": "46",
                    "likes": "0",
                    "time": "27/02/2023-00:28:00",
                    "content": "This is my understanding of the risk. Wormhole runs on consensus between a small number of known entity nodes (basically multisig). So potentially Wormhole could be compelled to censor transactions or seize bridged assets. For fungible assets this might be less of a concern because it would be impossible to single out the target, but for something like Uniswap deployment it would be easy for them to eg transfer ownership to an unauthorized third party or take other actions without impacting bystanders. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.470982142857142
                },
                {
                    "author_link": "https://gov.uniswap.org/u/devinwalsh",
                    "index": "47",
                    "likes": "10",
                    "time": "03/03/2023-01:16:51",
                    "content": "Hi all, today we are very excited to announce the creation of the Uniswap Bridge Assessment Committee, and the kickoff of the Assessment process. First, the Committee. We are very proud of the group that we have assembled thus far. As previously mentioned their mandate will be to diligence the set of bridges and bridge-agnostic solutions listed below. With a focus on the needs of Uniswap governance, they will leverage this diligence to provide a short-term recommendation for how the Uniswap community might approach bridges in the coming weeks. And, they will also provide guidance on the ideal long-term solution to build towards and support, and a recommendation for how Uniswap community may continue to monitor and diligence bridges as the space evolves. As a reminder, the selection criteria we used to select the engineers included the following: relevant technical experience, understanding of bridge architectures and potential risk vectors, and alignment with Uniswap\u2019s long-term interests, particularly regarding its ability to remain secure as it is deployed across chains. For the PM role, we also looked for excellent organizational skills and experience with technical writing. Importantly, we precluded individuals who have a vested interest in a given bridge team. And, for each candidate, we conducted a reference check that could speak to the individual\u2019s technical competence and character. We are also seeking to grow the team in the coming weeks. If you meet the criteria above, or have a recommendation to join the Committee, reach out to me on Twitter (here). Our team members are as follows:   Ermyas Abebe. Ermyas is one of the co-authors of the Cross-chain Risk Framework, a framework for analysing cross-chain projects. He was previously a Principal Research Scientist at ConsenSys Software, where he conducted in-depth analyses of crosschain protocols. He is a member of the IEEE ICBC Crosschain Workshop Program Committee. LinkedIn, Twitter.  Jasraj \u201cJazzy\u201d Bedi. Jazzy is the co-founder and CTO of Zellic, Inc, an audit company. In this role he has conducted multiple audits across bridges in the space, and has contributed to in-depth post-mortems of bridge hacks which have occurred in the past. LinkedIn, Twitter.  Sean Casey. Sean is the co-CTO and Head of Enzyme Protocol Development at Avantgarde Finance. His expertise lies in smart contract engineering experience and protocol integrations. He has deep knowledge of the Uniswap Protocol, having led Avantgarde\u2019s integration with the Protocol. Avantgarde is also an active Uniswap delegate. LinkedIn.  Ben O\u2019Neill (Project Manager). Ben is the VP of Business Operations at Chaos Labs, an on-chain economic security & risk platform that uses simulations to test protocol vulnerabilities across DeFi, bridges, and tokeneconomics. Previously, Ben was the VP of Business Development & Operations at Messari. Notably, while at Messari, Ben led the creation of Messari transparency reports, a product that verified and made public a set of objective standard information across protocols - work that is very analogous to the work of the Bridge Assessment Committee. LinkedIn, Twitter.  Peter Robinson. Peter is soon to be the Head of Blockchain Research at Immutable, starting in March (will work with the Bridge group until then). With Ermyas, he is one of the co-authors of the Cross-chain Risk Framework. He was previously a Technical Director, Researcher, and Applied Cryptographer at ConsenSys Software, with a focus on researching and advising on crosschain technologies. He also previously co-chaired the Crosschain Interoperability Working Group for the EEA and is co-chair of the IEEE ICBC Crosschain Workshop Program Committee.  He also completed his PhD at the University of Queensland on Crosschain Communications. LinkedIn, Twitter.  David Hyland-Wood. David is an entrepreneur and multi-disciplinary engineer with deep expertise across a number of areas. He is currently an Adjunct Associate Professor at the University of Queensland School of Engineering, with a focus on on blockchain and distributed systems consensus. He previously served as a Lead Researcher at ConsenSys Software, focused on developing the first international blockchain standard for PegaSys, the ConsenSys protocol engineering group. He is also a member of the IEEE ICBC Crosschain Workshop Program Committee. LinkedIn.  All Committee members are excited to leverage their expertise in crosschain communication to assist the Uniswap community. They hope that this work will also help the other protocols in navigating decision-making around bridges as well. Now, onto the bridges and bridge-agnostic solutions. The Committee will be analyzing 8 bridges:  Axelar (submission post here) Celer (here) deBridge (here) Hyperlane (here) LayerZero (here) Multichain (here) Router Protocol (here) Wormhole (here)  and 3 bridge-agnostic solutions:  Multi-bridge implementation, built by the Celer team (here) Block Header Oracle based solution, being built by Gnosis team (here) ERC-5164: Cross-chain execution (interface supporting execution across EVM networks) (here)  Some bridges may themselves be able to be used as the infrastructure for an agnostic solution as well (as suggested by Hyperlane here). That will also be examined. @benhoneill and I will keep the community updated with developments and timelines for delivery. If you have any questions please direct them to one of us on behalf of the committee and we will triage appropriately. (Devin Twitter, Ben Twitter) Bridge teams, I will be connecting you to this group over the next few days. Thanks all, we are so excited to kick this off! ",
                    "links": [
                        "https://crosschainriskframework.github.io/",
                        "https://crosschain.mx/workshop2023/program-committee/",
                        "https://www.linkedin.com/in/ermyas-abebe/",
                        "https://twitter.com/ermyasteshome",
                        "https://www.zellic.io/",
                        "https://www.linkedin.com/in/jazzy1711/",
                        "https://twitter.com/ret2jazzy",
                        "https://enzyme.finance/",
                        "https://avantgarde.finance/",
                        "https://www.linkedin.com/in/seancaseydev/",
                        "https://chaoslabs.xyz/",
                        "https://www.linkedin.com/in/benhoneill/",
                        "https://twitter.com/benhoneill",
                        "https://www.immutable.com/",
                        "https://crosschainriskframework.github.io/",
                        "https://entethalliance.github.io/crosschain-interoperability/index.html",
                        "https://crosschain.mx/workshop2023/program-committee/",
                        "https://www.linkedin.com/in/peter-robinson-98a0061/",
                        "https://twitter.com/drinkcoffee2010",
                        "https://crosschain.mx/workshop2023/program-committee/",
                        "https://www.linkedin.com/in/david-hyland-wood/",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/23",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/22",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/29",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/27",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/30",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/16",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/20",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/26",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/4",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/25",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/7",
                        "https://gov.uniswap.org/t/cross-chain-bridge-assessment-process/20148/10",
                        "https://twitter.com/devinawalsh",
                        "https://twitter.com/benhoneill",
                        "https://gov.uniswap.org/t/deploy-uniswap-v3-on-avalanche/20587/15"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.732053571428572
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Kydo",
                    "index": "48",
                    "likes": "7",
                    "time": "06/03/2023-23:27:06",
                    "content": "It is great seeing the committee moving forward with a group of capable and unbiased people. I am Kydo from Stanford Blockchain Club and am a community member advocating for the bridge-agnostic solution(s). I want to make a small clarification that these 3 bridge-agnostic solutions are actually one solution, we are calling the design Multi-Message Aggregation (MMA) You can find the current implementation here: GitHub - MultiMessageAggregation/multibridge at EIP5164 We believe these solutions share the same goals and can be implemented within the same design. We applaud @modong from Celer, @owl from Gnosis, and the ERC-5164 authors for their contributions to the design. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5357142857142865
                },
                {
                    "author_link": "https://gov.uniswap.org/u/pratik_coinchange",
                    "index": "49",
                    "likes": "0",
                    "time": "09/03/2023-19:11:54",
                    "content": "Great discussion guys. At Coinchange recently we wrote a 50-pages research report on Crosschain Interoperability and Security along with co-authors from LiFi and Hacken. In Part 4 of the report, we do talk about a Bridge Risk Framework. Would be happy to contribute to the assessment committee. @devinwalsh ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.666666666666666
                },
                {
                    "author_link": "https://gov.uniswap.org/u/Jerome_Coinchange",
                    "index": "50",
                    "likes": "1",
                    "time": "09/03/2023-21:26:34",
                    "content": "Jerome here, Head of Research at Coinchange. Here (coinchangeio under resources find crosschain-interoperability-report) is the research report mentionned by Pratik. I\u2019m supporting the post from Pratik, our WIP Bridge Risk Assessment Framework will benefit from the set of questions and answers provided by the different bridges in this very active discussion, as they are the most condensed version of each bridge description and security aspects. However, from the questions we already created and gathered from some of the frameworks mentionned by LIFI here and more:     philippzentner:  By our estimation, there are four bridge framework solutions currently in the ether. \u2026   We believe the questions list is missing some detailed aspect, that we think should be addressed which could help the assessment committee to arrive to a conclusion. We will also be very attentive to the outcome of the assessment comittee and the likely creation of a Uniswap Bridge Risk Assessment group where a comprehensive framework might be created. We would be happy to contribute and make this project set a precedent for the crosschain interoperability in the future. Finally we are reassured that some of the most qualified individuals today on crosschain technologies like @ermyas, @drinkcoffee and Jasraj are part of the Bridge Assessment committee. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.105952380952381
                },
                {
                    "author_link": "https://gov.uniswap.org/u/MAPO_MapProtocol",
                    "index": "51",
                    "likes": "0",
                    "time": "12/03/2023-13:49:58",
                    "content": " Nominating MAP Protocol for UNI Cross-Chain Deployment Hi all, MAP Protocol (MAPO) here. Built on Light-client & ZK technology, MAP Protocol  is an interoperable omnichain layer for Web3 which enables 100% Nakamoto Style cross-chain communication with zero privileged roles. MAP Protocol can connect both EVMs and non-EVMs; it has now connected to Ethereum, BNB Chain, Polygon, and NEAR and will soon connect to Cosmos Hub, PlatON, Klytan, and other major EVM & Non-EVMs. We believe a multi-bridge agonistic solution will be a win-win for all parties involved and especially for UNI members. With our innovative light client and ZK cross-chain solution, we genuinely hope MAPO could be part of the effort and solution to empower UniSwap to grow with greater security and interoperability. Below are our answers to the 15 questions.  1. List 3 succinct reasons why you believe your bridge/solution would best serve Uniswap governance.  1. The level of cross-chain decentralization and security Popular cross-chain solutions, namely MPC, Oracle + Relayer, and Light client, have sacrificed decentralization in some way or another, but MAP Protocol has kept the integrity of decentralization and security. Specifically, in an MPC cross-chain solution, the whole verification process\u2019s security rests in the hands of a few selected entities, which is a centralized way for verification and already contributed to several cross-chain hacks such as Ronin Bridge and Harmony Bridge. Oracle + Relayer cross-chain solution eliminates privileged parties from the verification process but cannot avoid the collusion risk between oracle and relayer. However, MAP Protocol\u2019s light client and ZK cross-chain verification mechanism can eliminate privileged roles and collusion risks from the cross-chain verification process because light clients used for cross-chain verification has the self-verifiable capability; the whole cross-chain verification process can be fully on-chain in a truly decentralized manner, no centralized or privileged entities involved. With the same adherence to decentralization, we believe our cross-chain solution will be the most suitable one for retaining decentralization and keeping cross-chain space secure. 2. Full coverage for \u200b\u200bEVMs and Non-EVMs Unlike most cross-chain solutions that only support EVM cross-chain or one-way cross-chain, MAP Protocol is able to connect both EVMs and Non-EVMs. This is because MAP Protocol can innovatively embed each destination chain\u2019s algorithm as pre-compiled contracts to facilitate light-client deployments on MAPO Relay Chain. MAP Protocol started connecting to Cosmos Hub last month. Once it has completed wrapping light clients with Cosmos IBC standards and enters the testing phase, Cosmos inter-chain network can technically connect with other chains in a fully decentralized way. This will mark MAP Protocol to be the first cross-chain solution that allows Cosmos inter-chain network to communicate with other chains with light client technology. With the growth of Web3 in general and the increase of users on other chains, UNI may consider deploying on other EVM and Non-EVM chains in the future to tap into more users and onboard them to the UNI community. MAPO\u2019s extendability and full-chain coverage ability can help UNI in the long term to achieve permissionless growth. 3. Continuous technical innovation Innovation is at the core of MAP Protocol. We were the first and only cross-chain solution that achieves truly trustless communication in the cross-chain space with full-chain connectivity. Up till now, we\u2019ve connected to Ethereum, Polygon, BNB Chain, and NEAR, and will soon connect to Cosmos Hub, Klytan, and Avalanche. This full-chain utility supports data and messaging cross-chain as well. Most recently, we helped CATASTROPHY, an NFT Multipass, to allow CATASTROPHY holders seamlessly access their BUIDL benefits and unlock various tools across multiple blockchains and platforms without any restrictions. We have also innovatively utilized ZK technology for cross-chain verification. MAPO is working on applying the most advanced ZK to bring down the on-chain gas fees and further increase the efficiency of cross-chain communication.  2. How long has the system been running on mainnet?  MAP Protocol has launched Mainnet since August 2022. You can access MAPO Mainnet via this link https://maposcan.io/  3. How much value has the system secured? (Current TVL, total transaction volume)  As MAP Protocol was only launched early this year, the current total transaction volume is around $529,850 for now.  4. Provide a background on your team.  With the mission of constructing a cross-chain peer-to-peer e-cash payment system infrastructure, a team of experienced blockchain research experts, smart contract developers, and bottom-layer blockchain engineering experts came together and started to build MAPO in 2019. After almost four years of full-stack development effort, MAP Protocol is now contributed by a group of distributed team members. Core members are based in the US, Singapore, South Korea, Hong Kong, and Dubai. MAP Protocol has around 20 to 40 full-time members. With technical innovation being the core focus, 80% to 90% of our core team members are developers. The technical team is experienced in blockchain research and development and has joined MAP Protocol\u2019s endeavor since day one. Phil Lau, MAP Protocol\u2019s CTO, is a member of IEEE Computer Society Blockchain and Distributed Ledgers Committee Technical Board, and Frank Wen, MAP Protocol\u2019s chief scientist, is an expert in applied cryptography and a Core developer of Bitcoin Cash (PoW).  5. Please link your developer documentation.   MAP Protocol Docs: https://docs.mapprotocol.io/  MAP Protocol GitHub: MAP Protocol \u00b7 GitHub    6. Does the bridge support arbitrary message passing?  Yes, as an omnichain infrastructure, MAP Protocol supports any cross-chain message passing; thus, any events on Ethereum can be passed to the destination chain in a trustless way.  7. Has the current deployed bridge code been audited? By a third party? What attack vectors and vulnerabilities were identified, if any? Have the identified vulnerabilities been remedied?  Yes, MAP Protocol has completed comprehensive audits on all products. The audit report is available here MAP Protocol - Web3 Security Leaderboard. The issues identified in the audits are generally low in terms of severity and mainly have to do with the hash-to-point algorithms of the compiled signatures in the MAPO Relay Chain. Now, all vulnerabilities identified in the audits have been fixed and reviewed. Cross-chain bridges have been the NO.1 target for hackers in recent years, which is why MAP Protocol puts security as one of the top priorities. MAP Protocol has partnered with world-leading third-party code auditing firms to conduct exhaustive auditing of any important updates of our codes.  8. Is there a bug bounty program?  Our bug bounty program is in the final stage of implementation. To ensure the bug bounty program can run smoothly without being spammy, we\u2019re working internally to refine the designs and mechanism of the program.  9. List ANY portion of the functional bridge that is upgradeable and explain how the upgrade process works.  Yes, MAP Protocol\u2019s contracts are upgradeable. The ability to upgrade is controlled by an MPC contract, but we will change the MPC contract to on-chain governance on MAPO Relay Chain for greater decentralization and security.  10. Do any contracts have an owner or owner-like entity? If so, what can the owner do?  If contracts include bridge functionality, then the contracts of Butter will be included, which does have an owner. The owner of Butter\u2019s smart contracts is an MPC contract, where the owner can set the types of assets that the bridge can support and the transaction fees. Note: Butter is an omnichain solution built upon MAP Protocol for secure and seamless asset movement.  11. What is the security model of the bridge? Please describe the security model for the current implementation of the bridge. What trust assumptions are you making?  Cross-chain communication enabled by MAP Protocol is based on light clients, which is implemented via cryptography. Our cross-chain solution aligns with Nakamato\u2019s philosophy of decentralization, where no trusted third parties engage in the verification process. MAP Protocol\u2019s light clients are built into the chain or deployed to the chain as a smart contracts to update and save the validators\u2019 information of MAPO blockchain periodically and to verify the proof generated by MAPO blockchain. The light client follows these steps to verify the proof data:  Compute the epoch number of the block header and get the validators record by epoch number. If no record exists, an error is returned. Use the validators to verify the ecdsa signature of the block header, and use validator and the aggregated G2 public key to verify the BLS signature of the block header. This proves the validity of the block header. If verification fails, an error is returned. All the receipts hashes in a MAPO block construct a Merkle Patricia Tree, and the tree root is recorded in the block header. The light client retrieves the tree leaf through the tree root from block header, the key index, and the proof in the proof data. Then it checks whether the tree leaf equals the hash of the receipt included in the proof data. If not, an error is returned.  If all the above verifications pass, the proof data is proven to be valid.  How light client works in MAP Protocol1280\u00d7720 193 KB  Take Chain A to Chain B communication as an example. The block header information of chain A is updated by the inter-chain messenger to the light client of chain A on chain B. If there is a fake transaction from a hacker trying to cross from chain A to chain B, the transaction will not be verified by the light client as valid unless the hacker attacks the entire blockchain A as a whole. With light-client being the core verification component in this cross-chain design, it would be impossible for a hacker to obtain a valid signature from validators on chain A, hence chain B will not accept such an invalid cross-chain request initiated by the hacker. MAP Protocol\u2019s cross-chain communication is based on light clients; thus, the whole verification process is fully on-chain, and we do not hold trust assumptions for cross-chain verification.  12. How can an adversary pass a fraudulent message from Ethereum to the destination chain? Please give specific and concrete examples.  No fraudulent message can be passed from the source chain (Ethereum) to the target chain. In MAP Protocol\u2019s security design, when a fraudulent message passes to the MAPO relay chain, the proof it creates cannot pass the verification of light-client on Ethereum.  13. How can an adversary withhold a valid governance message from Ethereum to the destination chain? Please give specific and concrete examples.  As light clients (which are self-verifying) are the ones responsible for verifying cross-chain communication, there will not exist scenarios where a valid governance message from Ethereum is withheld and unable to pass to the destination chain with MAP Protocol\u2019s cross-chain solution. In fact, as long as the massage is valid, anyone should be able to pass the message from Ethereum to the target chain.  14. What are the ramifications of fraud to the malicious actor(s)? If it is legal ramification, please share the suite of legal action you can provide. If it is slashing, please point us to the codebase of the slashing behavior and describe in words how slashing works in your system.  With our fully trustless security design, any fraud action can be checked, and the network will reject fraud messages. Messenger and Maintainer are two cornerstones for cross-chain communication in MAP Protocol. It can be possible that Maintainer or Messenger does not work properly; however, no matter how they can act out, they cannot impact cross-chain verification or allow fraud messages to pass. What they may impact is cross-chain efficiency, but will never affect cross-chain security. Currently, we do not have a slashing mechanism for Maintainer but we do have an alarm system to prevent Maintainer from acting out. If Maintainer does not submit cross-chain messages to the light client, it will trigger an alarm. Additionally, to be a Maintainer, the party will need to stake $MAPO to work and get rewards, and if they do not work properly, they cannot get rewards or their staked tokens. The slashing mechanism for Messenger, on the other hand, is customizable by individual projects, thus fully depending on how the project wants to work. Note: Maintainer is an independent inter-chain messenger responsible for updating the latest status of light clients and submitting block headers\u2019 info on each chain as a transaction ultimately to the target chain. Messenger is an independent inter-chain program, working for MAPO Service (an omnichain SDK for dApp developers). It listens to relevant events as preset in the program and builds a proof on the ledger of the source chain; then transmits the message of the event and proof to Vault or Data on the destination chain.   Provide any additional information you would like here.   As the truly trustless omnichain infrastructure in the blockchain space, we believe that we can contribute to the Uniswap community with our adherence to decentralization and continuous technical innovation. We know there are many popular cross-chain solutions but they either compromise on the principle of decentralization and the level of security or they are unable to connect all EVM and Non-EVMs. As MAP Protocol will soon connect to Cosmos Hub, it will be another milestone for blockchain interoperability and connect members in Cosmos Hub to members in Uniswap, thus allowing decentralized finance can truly thrive from the bottom up.  Comparison.pptx1280\u00d7720 111 KB  ",
                    "links": [
                        "https://medium.com/marcopolo-protocol/map-protocol-partners-with-catastrophy-to-revolutionize-utility-nfts-with-full-cross-chain-4d14b8079c34",
                        "https://maposcan.io/",
                        "https://sagroups.ieee.org/bdlsc/organization/",
                        "https://docs.mapprotocol.io/",
                        "https://github.com/mapprotocol",
                        "https://www.certik.com/projects/map-protocol",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/a/a4396ba7df05bb252b6b65f0758b6c04d2d7811c.png",
                        "https://global.discourse-cdn.com/business6/uploads/uniswap1/original/2X/2/2da8cf708b776038ff8ad8247fbb6d2423718fd5.png"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.809852168566957
                },
                {
                    "author_link": "https://gov.uniswap.org/u/kari",
                    "index": "52",
                    "likes": "0",
                    "time": "12/03/2023-13:58:15",
                    "content": "Hi there, Kari from MAP Protocol here. May I know where to get the latest updates on the assessment process? And is it still possible to add another cross-chain solution for the assessment at current stage? MAP Protocol is an omnichain infrastructure built upon light client and ZK technology. We are the truly trustless cross-chain solution with full-chain connectivity on the market, and we would really like to contribute to the Uniswap community with unwavering decentralization and security risks kept at bay. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.1
                },
                {
                    "author_link": "https://gov.uniswap.org/u/devinwalsh",
                    "index": "53",
                    "likes": "0",
                    "time": "14/03/2023-00:09:52",
                    "content": "DM me here! https://twitter.com/devinawalsh Process has kicked off for the first set of solutions. However, we are also planning how bridges might be reviewed in the future. MAP Protocol could be a part of that. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.625
                },
                {
                    "author_link": "https://gov.uniswap.org/u/UNI-Bridge-Committe",
                    "index": "54",
                    "likes": "0",
                    "time": "20/03/2023-14:31:20",
                    "content": " Uniswap Bridge Assessment Committee: Community Update #1  The Uniswap Bridge Assessment Committee has kicked off its deep dive into the bridges under consideration and multi-messaging aggregation solutions provided by the community. The following is a brief progress update.  Bridge Assessment Framework  Using the crosschain risk framework, the Committee members designed an extensive framework to assess the bridges under consideration. At a high level, it covers the protocol architecture as well as implementation, operational, and network risks. Each category is further broken down into more granular topics to ensure an effective and precise analysis of the bridges. The framework\u2019s goal is to clearly identify and assess the protocol\u2019s security, resilience, reliability, and sustainability.  Wormhole Assessment  The Committee has conducted the Wormhole risk assessment based on the publicly available information along with further diligence questions sent to the Wormhole Foundation. Overall, the assessment went well, but there still remains a few open items that we hope to close out in the coming days. As the assessment process kicked off, the committee identified a number of areas that could be strengthened for the purposes of the Uniswap governance use case.  The Committee suggested relevant improvements to the implementation of the Uniswap-Wormhole connector, including message timeouts, ordering and replay protection, and worked alongside the Wormhole team to implement these changes. Prior to the launch of Uniswap on BNB, the team observed that two contracts were still controlled by the deployer EOA instead of Uniswap governance timelock. This was partly a result of a two-phase ownership transfer model used by the messaging bridge connector, which made transferring ownership over to the Uniswap governance contract difficult. This incongruence in the transfer model with Uniswap governance was not previously identified but has since been addressed. The Committee worked alongside the Wormhole team, GFX Labs, and the Uniswap Foundation, this issue was quickly rectified by deploying an updated implementation with a single-stage ownership transfer model.   Committee Expansion  The Committee will be expanding with an additional 2-3 members, primarily on the auditing and engineering side. Our most recent member is Kimberly Adams, the Ex-cofounder of Bridge Network. Her expertise lies in designing system architectures and scaling blockchain-based products over the past 8 years. We are thrilled to welcome Kimberly and continue growing the team as we contribute to the wider cross-chain and Uniswap community.  Next Steps While waiting for additional information to close out the Wormhole assessment, the Committee will be initiating a review of Bridge Agnostic Solutions to understand how bridge diversity will impact the output. This will inform the iterative research we conduct into each bridge structure and how we ensure recommend a holistic recommendation on a path forward for the Uniswap community. We have established a strong foundation through our Wormhole analysis that will streamline each subsequent bridge. From this process, the team has a more precise understanding of the time required to conduct a thorough assessment and provide the most valuable output for the community. We are working swiftly and anticipate the completion of our work to be done by end of April or early May. If you have any questions, please reach out to @benhoneill on Twitter or Telegram. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.814920634920635
                }
            ]
        }
    ],
    "group_index": "264"
}