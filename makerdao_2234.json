{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/dai-adoption-on-other-chains-via-externally-validated-bridges/20029",
            "title": "# DAI Adoption on Other Chains via Externally Validated Bridges ",
            "index": 20029,
            "category": [
                "Governance",
                "Proposal Ideas"
            ],
            "tags": [
                "bridge",
                "layer-2",
                "pe-001"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/Prototech_Labs",
                    "index": "#1",
                    "likes": "9",
                    "time": "02/03/2023-13:01:10",
                    "content": " DAI Adoption on Other Chains via Externally Validated Bridges  Introduction The goal of this post is to (1) inform Maker Governance about the various bridge types and their security properties, and (2) determine what trust assumptions Governance is willing to accept in the pursuit of growth. This post will include a comparison between external third party bridges, optimistic bridges, light client bridges, and rollup native bridges. In doing so PECU will also describe the current deployment types on Optimism, Arbitrum One, Arbitrum Nova, and StarkNet, as well as future chain opportunities and what they entail.  TL/DR The current dss-bridge design uses an arbitrary message bridge that does not forge or censor messages and only works with rollups that settle on Ethereum. Community requests to expand to other chains such as Polygon or Avalanche will require additional trust assumptions, and therefore risks. PECU would like you to consider these risks as outlined below in order to manage expansion expectations and development activities.  A quick refresher on Arbitrary Message Bridge (AMB) Usage Deploying Maker on another chain requires that the \u201cchild deployment\u201d settles its state with the mainnet deployment (i.e. each action on a child deployment should be ultimately accounted for on mainnet MCD VAT). The current implementation of such \u201cchild deployment\u201d (dss-bridge) requires the usage of an arbitrary message bridge, i.e. an interoperability protocol that allows passing arbitrary messages between Ethereum and other chains. Other than bridges that connect Ethereum to Rollups, all such interoperability solutions require some additional trust assumptions - most require a trusted third party (bridge operator) that can both censor/forge a message. If that happens the accounting on MCD VAT will be broken resulting potentially in a massive loss for both DAI and MKR holders.  img1810\u00d7388 31.4 KB   Considerations for Maker Governance With the above understanding of AMB usage, PECU is requesting MKR holders voice their opinion on the following considerations. The subsequent discussion will form the basis of a poll to gauge the direction going forward, as stated in the conclusion.  Should Maker research an alternative design to the existing dss-bridge that relies heavily on AMB to support non-rollup chains. Such an alternative design would likely require building a \u201csandbox\u201d where the Maker protocol would pre-mint a specific amount of DAI and move it to another chain via one of the third-party bridges so it is available there for borrowing. It is important to note that the child deployment will not have the authority to mint DAI. Should Maker accept the risk of an external bridge validator (often no better than a simple MultiSig) which can censor and/or forge messages, and instead consider deploying dss-bridge on EVM-compliant non-Rollup using one of the AMBs relying on a trusted third party? Should Maker focus on Rollups only as is done today (allowing for trustless arbitrary message passing) and perhaps consider supporting in the future zkBridges once they become available.   Detail: Why does MakerDAO Need an Arbitrary Message Bridge? Any interoperability solution (a bridge) between two chains requires that these chains pass messages between each other - one chain needs to react to something that happened on another chain. For example, when a user makes a token deposit to one chain, the second chain then mints the equivalent token - thereby implementing a basic token \u201ctransfer\u201d. Bridges rely on communication protocol between chains. The communication protocol can be trustless or it may require a trusted third party. Generally, MakerDAO always prefers trustless solutions if they are available. When a bridge requires a trusted third party, this entity can both censor and forge messages.  img2940\u00d7384 40 KB  The communication protocol can be specific (e.g. it can only pass \u201ctoken transfer\u201d messages) or it can be generic (it can pass any arbitrary message). Basic token bridges can be built on a protocol that only passes specific messages. Complex solutions such as Maker\u2019s dss-bridge require an arbitrary message passing protocol (AMB - Arbitrary Message Bridge). This is due to the fact that any MCD action on a \u201cchild\u201d chain must be eventually accounted for (settled) on Ethereum in the core ledger (Vat contract). It is much easier to build trustless interoperability protocol that only passes specific messages such as token transfers because such messages can be \u201cbonded\u201d with liquidity equal to the amount of transfer (i.e. intermediary that passes message \u201cinsures\u201d the message by fronting its own liquidity). Generally speaking, insuring arbitrary messages is not possible.  Bridge Types and Their Security Properties Existing AMBs can be broadly categorized into four main categories wrt to their security properties:   Trusted Third Party bridges - this is by far the most common AMB design that requires a Trusted bridge operator. The most well known AMBs are Wormhole, LayerZero, Celer, deBridge, Axelr, and Multichain. These bridges are relatively simple and they can easily support many chains; however, using them requires trusting that the bridge operator will never censor nor forge messages.  Optimistic Bridges - assume that there is a bridge operator passing messages and a set of Watchers checking the validity of the message. Messages are considered valid unless proven otherwise by Watchers. To give Watchers some time to detect possible fraud by the bridge operator, Optimistic Bridges employ a certain delay (typically a few hours) before the message is delivered to the destination. Examples: Nomad, Across, Hop, Connext Amarok  Light Client Bridges - these bridges assume that the destination chain is able to check the consensus of the source chain - if the source chain is PoS (Proof-of-Stake) chain, it typically involves checking signatures of the current signing committee of the source chain. For PoW the proof-of-work embedded in a source chain block can be checked. There is no need to trust a bridge operator - as long as the source chain validators are honest (i.e. they don\u2019t sign an invalid block) the destination chain can assume that all messages originating from the source chain are valid. These bridges are hard to build as checking consensus of another chain with a smart contract is typically very computationally complex and often impossible due to the gas constraints. A special case of Light Client Bridges are the upcoming zkBridges - these, instead of checking consensus (e.g. signatures) \u201cdirectly\u201d, will verify a zero-knowledge proof of consensus as this is much cheaper to do on-chain as the bulk of the computation is done off-chain. Examples: Polygon PoS bridge to Polygon, Rainbow bridge to NEAR.  Rollup Native Bridges - these bridges are the most secure as they check the validity of the state of the source chain (the rollup) on the destination chain (e.g. Ethereum). Additionally, every single message coming from Ethereum to a rollup is guaranteed to be genuine and uncensorable (in some constructions censorship resistance is not yet guaranteed but it is always part of the roadmap) because rollups use Ethereum as a data availability layer (i.e. they all post transactions comprising L2 blocks to L1 Ethereum). Rollup chains are not independent - they can be considered as \u201cEthereum child chains\u201d, they fork when Ethereum forks, and - once so-called \u201ctraining wheels\u201d are shed (i.e. temporary stop-gap measures such as ability to upgrade the contracts) they can be considered to be \u201cas secure as Ethereum\u201d assuming the user has trust in any zkRollup math or any optimistic fraud proof mechanisms employed.   Summary of Bridge Properties Summarizing the above bridge types and their security properties:      External Third Party Bridges Optimistic Bridges Light Client Bridges Rollup Native Bridges     Can Operator censor messages YES NO NO NO   Can Operator forge messages YES NO, unless Watchers collude with operator NO, unless source chain Validators sign invalid block (51% attack) NO   Can the bridge be deployed to many chains YES YES NO NO   Complexity LOW Medium HIGH HIGH   Examples LayerZero, AxelR, Wormhole, deBridge, Celer, Multichain Nomad, Across, Hop, Connext Amarok Polygon PoS bridge, Gravity bridge Optimism, upcoming Base, Arbitrum, StarkNet, zkSync, upcoming zkEVM chains such as Consensys zkEVM, Scroll, Polygon zkEVM     Current and Future Multichain DAI ecosystem The following table summarizes current DAI deployments:     Chain Type Bridge     Optimism Optimistic Rollup Native Rollup Bridge   Arbitrum One and Arbitrum Nova Optimistic Rollup (Optimistic Chain for Nova) Native Rollup Bridge   StarkNet zkRollup Native Rollup Bridge   zkSync zkRollup Native Rollup Bridge    Every single DAI deployment so far involved Native Rollup Bridge. To deploy DAI (and MCD) on other chains it is required to use non-native rollup bridge. The following table summarizes existing options:     Chain Chain Type Bridge Trust Assumptions     Polygon PoS Side Chain that commits periodically its state to Ethereum Light Client Bridge Polygon Validators   Gnosis Chain Side Chain TTP Bridge (Omni Bridge) Bridge Validators   Avalanche, BSC, etc\u2026 Independent L1 chains One of the existing TTP Bridges Bridge Validators    Note that nearly all bridges, in addition to having all the trust assumptions described above, have a MultiSig capable of upgrading their implementation.  Conclusion & Next Steps As illustrated above, existing dss-bridge design requires the existence of a reliable AMB (Arbitrary Message Bridge) that does not forge nor censor messages. This is the main reason why canonical DAI and Teleport (and in the future dss-bridge) have been deployed to rollups only. Deploying dss-bridge to a non-rollup requires additional trust assumptions. In case of deploying to Polygon, Maker would need to trust the honesty of the Polygon validator set. In case of deploying to BSC, Maker would need to trust the honesty of both bridge validators and BSC validators. No future design will ever remove the additional trust assumptions required to have two independent chains (i.e. non-rollups) interoperate. Hence PECU is presenting the following possible ways forward:  Focus only on deployments on Rollups while other chains will use \u201cwrapped DAI\u201d with no ability to mint DAI directly on these chains. Accept the risk of Light Client bridges and consider deploying on chains that have such bridges available (currently Polygon, more chains in the future when zkBridges are available) Accept the risks of Third Party Bridges and deploy dss-bridge on other chains today Research an alternative design to dss-bridge so that DAI can be deployed on other chains with risks limited to a pre-defined amount (\u201cakin to a debt ceiling\u201d) where DAI deployment on such chains will be \u201csandboxed\u201d and DAI there will not be fully fungible with DAI on mainnet.  For the community\u2019s consideration, PECU is wary of centralized bridge operators that could censor or forge messages, and therefore recommends continuing to focus on rollups, followed by deployment on chains that have light-client bridges in the future. This sequential approach will allow us to observe market risks and scale safely.  Disclaimer: The recommendations and data presented here by Prototech Labs is provided for informational purposes only, on an \u201cas is\u201d basis, and without warranty of any kind as per our Terms of Service and is not offered as financial, legal, regulatory, tax, or investment advice. ",
                    "links": [],
                    "GPT-summary": "The post explains the current implementation of the \"child deployment\" (dss-bridge) and the various bridge types and their security properties. The author requests Maker Governance to voice their opinion on the considerations of expanding to other chains such as Polygon or Avalanche, which would require additional trust assumptions and risks. The post concludes with possible ways forward, including focusing only on deployments on rollups, accepting the risk of light client bridges, accepting the risks of third-party bridges, or researching an alternative design to dss-bridge.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.2828176910299005
                },
                {
                    "author_link": "https://forum.makerdao.com/u/M_C",
                    "index": "#3",
                    "likes": "0",
                    "time": "03/03/2023-10:09:34",
                    "content": "    Prototech_Labs:  Focus only on deployments on Rollups while other chains will use \u201cwrapped DAI\u201d with no ability to mint DAI directly on these chains   Can you elaborate on which use cases would not be possible in this approach?     Prototech_Labs:   img1810\u00d7388 31.4 KB   2 questions:   In this graph with \u201cchild deployment\u201d there are MCD instances in chain A and B. Are these instances fully functional (having the lending capabilities, DSR, etc) or just basic DAI minting based on the messages passed by dss-bridge?   Is the intention to allow  onboarding, ie, optimismEth, arbEth as collateral at some point?   ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.395833333333333
                },
                {
                    "author_link": "https://forum.makerdao.com/u/bartek",
                    "index": "#4",
                    "likes": "1",
                    "time": "03/03/2023-20:32:52",
                    "content": "    M_C:  In this graph with \u201cchild deployment\u201d there are MCD instances in chain A and B. Are these instances fully functional (having the lending capabilities, DSR, etc) or just basic DAI minting based on the messages passed by dss-bridge?   By \u201cchild deployment\u201d we mean an instance that is fully functional with lending capabilities. Simple token transfer is a pre-requisite step for the \u201cfull deployment\u201d. The end result for the user will be that DAI bridged to such chain will be fully fungible with DAI minted on that chain. The consequence of it will be that a user minting DAI on some chain will be able to withdraw it to mainnet Ethereum immediately.     M_C:  Is the intention to allow onboarding, ie, optimismEth, arbEth as collateral at some point?   This is up to the governance but it will certainly be possible. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.15625
                }
            ]
        }
    ]
}