{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/universal-create2-wrapper/5496",
            "title": "Universal CREATE2 wrapper ",
            "index": 5496,
            "category": [
                "Tooling"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/fare",
                    "index": "1",
                    "likes": "0",
                    "time": "07/03/2021-19:16:30",
                    "content": "I have some use cases, including generalized state channels and verification challenges, where any of many users may want to create the contract to be verified, in the same spirit as Bitcoin MAST. CREATE2 almost gets us there, but annoyingly includes the creator address as part of the data getting hashes, which runs against the \u201cthe same contract binds everyone principle\u201d. Lo and behold, this can be worked around by a contract that has this runtime code: GETPC DUP1 CALLDATALOAD 32 CALLDATASIZE SUB DUP1 32 DUP5 CALLDATACOPY DUP3 CALLVALUE CREATE2 STOP  Now, I could create this contract on the Ethereum network, but wouldn\u2019t it be nice if it had the very same address on every EVM network, so we could have universal MAST addresses? Well, that\u2019s possible, thanks to presigned transactions: I generated an address, had it sign transactions to create the above contract with all possible values of gas on an geometric sequence of ratio sqrt(2), then threw the address away, so the same addresses can be used everywhere. It would be much nicer of course, if a precompiled contract did the same, but this is good enough for now.    GitLab    |Universal CREATE2 wrapper \u00b7 Wiki \u00b7 MuKn / glow DSL for Safe Blockchain Decentralized Applications (DApps)      ",
                    "links": [
                        "https://gitlab.com/mukn/glow/-/wikis/%7CUniversal-CREATE2-wrapper"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.527777777777779
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fare",
                    "index": "2",
                    "likes": "0",
                    "time": "28/02/2023-00:05:33",
                    "content": "This is very useful for State Channels, wherein you know the terms of the contract, but don\u2019t want to publish it in advance (for both scaling and privacy reasons), and especially do not know which of the participants will have to publish it because the other one fails to cooperate. Can we make it happen? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.70625
                }
            ]
        }
    ],
    "group_index": "1255"
}