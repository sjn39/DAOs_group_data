{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eth2-phase-0-specification-v0-8-status-is-spec-freeze/3427",
            "title": "Eth2 Phase 0 Specification v0.8 - status is \"spec freeze\" ",
            "index": 3427,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "consensus-layer",
                "standards-writing"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "1",
                    "likes": "0",
                    "time": "01/07/2019-17:27:48",
                    "content": "So Eth2 Phase 0 is apparently a frozen spec.    twitter.com    dannyryan\u2600\ufe0f (dannyryan)  Eth2 spec release v0.8 -- SubZero  The phase 0 spec freeze is here! Thank you to everyone for all of the incredible work that has gone into this https://t.co/XuSHr4NCnP \u0394L\u039eX\u0394ND\u039eR @0x_____________@icebearhww pic.twitter.com/mgVis6axbL    9:47 PM - 30 Jun 2019     599          199            The Phase 0 document appears to be a code-only or code-mostly \u201cspecification\u201d, and elsewhere in the repo are tests. This approach to creating specifications poses challenges to implementers and security researchers, but is probably something which the Ethereum protocol researchers will not or cannot change. https://github.com/ethereum/eth2.0-specs/blob/v0.8.0/specs/core/0_beacon-chain.md Update: there is to be a wiki which will contain key parts of the spec.   twitter.com    dannyryan\u2600\ufe0f (dannyryan)  @DeanEigenmann @protolambda @badcryptobitch updating to v0.8 today and will put in the spec repo wiki  8:46 AM - 1 Jul 2019     5            Is there anything Magicians can do to help create a better specification for the next-generation protocol? ",
                    "links": [
                        "https://twitter.com/dannyryan/status/1145554469884555264",
                        "https://twitter.com/0x_____________/status/1145406437784350720",
                        "https://twitter.com/dannyryan/status/1145554469884555264",
                        "https://github.com/ethereum/eth2.0-specs/blob/v0.8.0/specs/core/0_beacon-chain.md",
                        "https://twitter.com/dannyryan/status/1145741707528376320",
                        "https://twitter.com/dannyryan/status/1145741707528376320",
                        "https://twitter.com/dannyryan/status/1145741707528376320"
                    ],
                    "GPT-summary": "The post discusses the release of the Eth2 Phase 0 Specification v0.8 and its status as \"spec freeze\". The post also mentions the challenges posed by the code-only or code-mostly approach to creating specifications. The author also mentions the creation of a wiki to contain key parts of the spec. Finally, a third party asks if there is anything they can do to help create a better specification for the next-generation protocol.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 6.828125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vbuterin",
                    "index": "2",
                    "likes": "1",
                    "time": "03/07/2019-08:38:59",
                    "content": "    jpitts:  This approach to creating specifications poses challenges to implementers and security researchers, but is probably something which the Ethereum protocol researchers will not or cannot change.   Can you elaborate? If you want more English-language descriptions of what\u2019s going on, I definitely know that we\u2019re open to it and some of us have written such things to a partial extent already. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "3",
                    "likes": "0",
                    "time": "04/07/2019-06:16:39",
                    "content": "A lot of work has been done to elaborate on the different aspects of Phase 0, in documents, in real-time chat, ethresear.ch, and in the implementers\u2019 calls. And this has been done iteratively, evolving to what was released as the frozen Eth2 Phase 0 spec. Having said that, I think that to call this a specification, all of the relevant descriptions, data structures, and codifications need to be brought together coherently into one document. And written in a way so that the intended behavior of the system and how the components interact are unambiguous. The goal is that it would be possible for a qualified person who did not follow the evolution of Phase 0 or participate in the chats and implementers\u2019 calls to comprehend and implement Phase 0. It is true however that a technology cannot be developed in a vacuum, that any implementer would need to be inculcated with Eth2 culture and practices. Still, it would be helpful for Eth2 to have a solid specification in order to encourage further implementations and attracter wider security and economic review. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.928030303030303
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "4",
                    "likes": "0",
                    "time": "04/07/2019-06:31:08",
                    "content": "Also, I found this helpful resource from the IETF: Guide for Internet Standards Writers. I think that it can be repurposed for the Ethereum community, not only adapted for protocol specifications but also for ERCs and dapp infrastructure. https://tools.ietf.org/html/rfc2360 ",
                    "links": [
                        "https://tools.ietf.org/html/rfc2360"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/greg",
                    "index": "5",
                    "likes": "7",
                    "time": "01/08/2019-07:49:20",
                    "content": "The ETH2.0 specs looks a lot different than ETH1.x yellow paper, and imo thats totally fine. The ETH2.0 spec is essentially a mono-repo of items that are \u201cmust haves\u201d towards building out a full blown client. Is it organized in a meaningful way? No and yes, let me explain. You have probably over 20-30 people actively contributing to it in a month, across three different \u201cphases\u201d & a bunch of other docs. I wouldn\u2019t say its a straight forward task, if you made everything into a single document, then no one would be able to keep up with the upstream changes because that one MD file would change 10 times a day (ill get back to this). Let\u2019s discuss the content. A specification should provide an implementer with what is absolutely necessary to maintain consensus, and as Danny famously says [\u2026] the rest is an implementation detail. A blockchain consists of a dozen or so core modules; sync, databases, caching, ops, tooling (wallet gen, etc\u2026), networking (peer discovery, peer sync, etc\u2026), the node itself, an api server, and then debugging tools (grafana, geth attach) the list goes on. This stuff is not described by the spec, and if it was ETH2.0 would never ship. What does the current spec offer us? It describes all necessary data structures, constants & state transition functions. This information is expressed through pseudocode examples and light descriptions, the yellow paper looks similar (ish) but with more mathematical formulas and proofs, which thankfully was not included in this. What does the current spec miss? It doesn\u2019t give us a good rational for WHY things are done, and it has a supplementary doc but /shrug its not great. Using only the spec, you can in-fact implement an eth2.0 node, you just probably won\u2019t understand what you\u2019re writing. Also, the pseudocode is almost overly specific (in some cases) to python, or it\u2019s overly optimized code, and requires three passes to make sure you read it correctly. What I would like to see? A spec that walks us through a story of wtf is going on, sort of a user story. Writing it out more thoroughly would mean that instead of inline code snippets we could have an appendix to reference. Explanations of why Justification and finalization looks so bloody scary, whats going on here justification_bits[1] = 0b1? The best definition is from the supplementary doc, and says:  \"justification_bits  \u2013 4 bits used to track justification during the last 4 epochs to aid in finality calculations  Still don\u2019t get it? Most don\u2019t at first, this is where we need better definitions. Having a story (rather just plain english i guess?), walk through the spec might make more sense, such that researchers don\u2019t need to spend as much time explaining things it for the 10th time. This would eliminate the need for a wiki, save time for researchers, and allow for anyone to drop in and understand whats happening. Now I think we\u2019re in a unique time where non-implementers actually care a lot to read these specs. So the traditional, slap it on a MD and ask questions later approach is blowing up a bit. Maybe it\u2019s time to spend a month or so, agree on a new format, freeze all specs for a week and revamp. IMO it will be useless for \u201csomeone to create a better spec\u201d without the researchers agreeing to it, now you\u2019re maintaining two versions. Wrap up - The supplementary doc is a good first start, if this was in much more detail, placed at the top of the phase 0 spec I think we would be on to something. With all that said and done, this is a research project and the implementers jumped the gun (a year ago, not so much now), and forced them (researchers) to expedite their efforts. Here we are, and we still have lots of time to fix it and perhaps set some standards moving forward. Shoutout to all the lads who complained and nagged but never wrote anything formally. This one\u2019s for you Dean and Jonny. ",
                    "links": [
                        "https://notes.ethereum.org/jDcuUp3-T8CeFTv0YpAsHw?view",
                        "https://notes.ethereum.org/jDcuUp3-T8CeFTv0YpAsHw?view",
                        "https://github.com/ethereum/eth2.0-specs/blob/dev/specs/core/0_beacon-chain.md"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.562196783101956
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dryajov",
                    "index": "6",
                    "likes": "0",
                    "time": "01/08/2019-16:45:56",
                    "content": "Thanks for the link @greg, I\u2019m catching up on Eth2.0 and had never come across this supplementary doc. Makes a huge difference when coming up to speed. It should definitely be linked in the spec repo readme. On the spec itself, I agree with the general sentiment, though it outlines all algorithms and data structures, it gives little context as to why they\u2019re needed. I\u2019m unsure of why this format was chosen, it\u2019s close to what you\u2019d expect from a formal language spec, but even those have a prose version that digest the formalisms. For example the webassembly spec uses this conventions - https://webassembly.github.io/multi-value/core/valid/conventions.html, it uses a formal notation and a prose notation that unwinds the formalisms. IMO, an implementers manual that outlines the goals, gives context and expands on the formalisms is not out of place. I\u2019m unsure who should produce those - the researchers or the implementers, but it\u2019s clear that unless you\u2019ve paid close attention to the various posts, threads and discussions scattered across many resources, implementing based solely on the spec would make what is already a complex piece of software that much harder to produce (if at all possible). We wouldn\u2019t need this if there was already a reference implementation, but there isn\u2019t one AFAIK? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party extending to proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.526041666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dryajov",
                    "index": "7",
                    "likes": "0",
                    "time": "01/08/2019-16:51:52",
                    "content": "BTW, not suggesting that we should follow the format of the webassembly spec, just using it as an example. The supplementary doc seems just fine, it has sufficient detail to be able to understand why something needs to happen, maybe cross referencing to the python/pseudocode examples in the specs to give more context, etc\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.770833333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "8",
                    "likes": "2",
                    "time": "03/08/2019-14:11:10",
                    "content": "    dryajov:  On the spec itself, I agree with the general sentiment, though it outlines all algorithms and data structures, it gives little context as to why they\u2019re needed. I\u2019m unsure of why this format was chosen, it\u2019s close to what you\u2019d expect from a formal language spec, but even those have a prose version that digest the formalisms. For example the webassembly spec uses this conventions - https://webassembly.github.io/multi-value/core/valid/conventions.html , it uses a formal notation and a prose notation that unwinds the formalisms.   Anotther approach is @ehildenb\u2019s  KEVM paper and the corresponding  active repo for an executable K specification of the current EVM.  Like the Wasm spec they use a careful mix of prose and formal notation. ",
                    "links": [
                        "https://github.com/kframework/evm-semantics"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.629166666666666
                }
            ]
        }
    ],
    "group_index": "871"
}