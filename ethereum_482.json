{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/erc-1537-auditable-storage-passing/1722",
            "title": "ERC-1537: Auditable Storage Passing ",
            "index": 1722,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/johba",
                    "index": "1",
                    "likes": "1",
                    "time": "29/10/2018-15:27:43",
                    "content": "tl;dr Encapsulating contract storage into a transferable, ownable token allows contracts to migrate across chain with the state that they manage. We think a standard way to pass contract storage through bridges for Plasma and sidechains will allow for more flexible contract development and better user experience. Sumary We propose to extend non-fungible tokens (NFTs) with the ability to store data. This proposal wraps a store of data (eg. partricia tree) into the ERC721 interface. The ownership of the token can now grant access to the storage for writing and provides an audit trail for data updates across chains. contract StorageToken is ERC721Token {      mapping(uint256 => bytes32) public root;    function readRoot(uint256 _tokenId) public view returns (bytes32) {     return root[_tokenId];   }    function verifiedRead(     uint256 _tokenId,     // the token holding the storage root     bytes _key,           // key used to do lookup in storage trie     bytes _value,         // value expected to be returned     uint _branchMask,     // position of value in trie     bytes32[] _siblings   // proof of inclusion   ) public view returns (bool) {     require(exists(_tokenId));     return tree.verifyProof(root[_tokenId], _key, _value, _branchMask, _siblings);   }    function writeRoot(uint256 _tokenId, bytes32 _newRoot) public {     require(msg.sender == ownerOf(_tokenId));     root[_tokenId] = _newRoot;   } }  ",
                    "links": [],
                    "GPT-summary": "The post proposes a standard way to pass contract storage through bridges for Plasma and sidechains, which will allow for more flexible contract development and better user experience. The proposal extends non-fungible tokens (NFTs) with the ability to store data, wrapping a store of data (e.g. Patricia tree) into the ERC721 interface. The post also includes code for the proposed contract StorageToken.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Token economics",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.409090909090909
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/johba",
                    "index": "2",
                    "likes": "0",
                    "time": "29/10/2018-15:40:02",
                    "content": "EIP1537 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/johba",
                    "index": "3",
                    "likes": "0",
                    "time": "03/11/2018-08:31:04",
                    "content": "this might proof to be very relevant for efficient membership proofs, insertion and deletion: https://osf.io/8mcnh/ ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.6
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/johba",
                    "index": "4",
                    "likes": "0",
                    "time": "07/11/2018-08:45:32",
                    "content": "Jan has started some implementation of the CSMT here: https://github.com/parsec-labs/spending-conditions/issues/1 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "482"
}