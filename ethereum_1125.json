{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/scaling-concept/4552",
            "title": "Scaling Concept ",
            "index": 4552,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "scaling"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/solubrew",
                    "index": "1",
                    "likes": "1",
                    "time": "29/08/2020-00:56:35",
                    "content": "I need someone to poke holes in a scaling concept that I came up with and can\u2019t seem to get out of my head.  Currently much effort is spent mining the same block and then dumping that work when someone finds the block.  Why could we not implement a staged transaction inclusion scheme that breaks the transactions and miners into groups.  The major issue with this is obviously a double spend attack but what if you only let one transaction per address in the \u201cactive\u201d pool at a time?  The last block mined of the active pool would select the group of transactions to be included in all of the blocks of the active pool after the next one this way the 2 groups of miners aren\u2019t reliant on each other.  Various mechanisms implemented to random move miners between groups and clusters.  The division of work could then be clustered and distributed the added benefit here is that by imposing random clustering a 51% attack only has about 3.119% of creating a malicious block.  Any questions or insights into why this wouldn\u2019t be feasible please let me know. ",
                    "links": [],
                    "GPT-summary": "The author is seeking feedback on a scaling concept they came up with for mining blocks. They propose a staged transaction inclusion scheme that breaks transactions and miners into groups to distribute the workload and prevent double spend attacks. The author is open to questions and insights into the feasibility of their proposal.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [],
                    "Sentiment": 4.57421875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "2",
                    "likes": "0",
                    "time": "01/09/2020-23:25:53",
                    "content": "Hi @solubrew, thanks for posting this. You might try this topic over on https://ethresear.ch; a lot more folks over there pay attention to the underlying protocol and scaling approaches! ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party extending to proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "3rd party or author is advertising proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 7.0625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "3",
                    "likes": "0",
                    "time": "02/09/2020-15:54:37",
                    "content": "@solubrew what you describe sounds similar to Prism. It aims to i) decrease latency and ii) improve throughput. It achieves this by breaking up the single PoW problem into N problems with N subgroups mining on them and by pipelining the transaction data to consensus nodes to avoid long propagation delays upon solving the PoW puzzle. The nice thing is that Prism uses a sortition mechanism to determine which sub-problem the miner has solved, so one miner can\u2019t easily choose which sub-chain to mine. I don\u2019t follow why you\u2019d want to only allow one tx per address, but this is something that has been suggested as a DoS protection for Account Abstraction. Might be worth checking out for inspiration. ",
                    "links": [
                        "https://ethereum-magicians.org/t/implementing-account-abstraction-as-part-of-eth1-x/4020"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.865646258503401
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/solubrew",
                    "index": "4",
                    "likes": "1",
                    "time": "02/09/2020-22:59:55",
                    "content": "Thanks for the replies I\u2019ll followup on the resources provided.  Spefically about the one transaction per address that is only meant to be 1 transaction per address in a block pool at a time this would stop the potential of a double spend from the same address while allowing other transactions to be validated in parallel. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.053571428571429
                }
            ]
        }
    ],
    "group_index": "1125"
}