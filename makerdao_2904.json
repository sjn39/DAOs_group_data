{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://forum.makerdao.com/t/mip22-modulo-de-liquidacion-directa-de-centrifuge/5011",
            "title": "MIP22: M\\xc3\\xb3dulo de Liquidaci\\xc3\\xb3n Directa de Centrifuge ",
            "index": 5011,
            "category": [
                "Latin America"
            ],
            "tags": [
                "mips",
                "espa\\xc3\\xb1ol"
            ],
            "content": [
                {
                    "author_link": "https://forum.makerdao.com/u/Lozadaluis12",
                    "index": "#1",
                    "likes": "1",
                    "time": "05/11/2020-21:52:06",
                    "content": "MIP22: M\u00f3dulo de Liquidaci\u00f3n Directa de Centrifuge Pre\u00e1mbulo MIP#: 22 T\u00edtulo: Modulo de Liquidaci\u00f3n Directa de Centrifuge Autor(es): Lucas Vogelsang (@spin on forum.makerdao.com, [email\u00a0protected]) Colaborador(es): Lea Schmitt ([email\u00a0protected]), Lev Livnev (@equivrel on forum.makerdao.com) Tipo: T\u00e9cnica Estado: Aceptada Fecha de Propuesa: 2020-09-02 Fecha de Ratificaci\u00f3n: 2020-10-27 Dependencias: ninguna Reemplaza: ninguna Licencias: AGPL   Referencias  Publicaci\u00f3n introductoria sobre las econom\u00edas y beneficios legales de esta liquidaci\u00f3n:  Vault Liquidation Mechanism for Centrifuge Trade Finance Assets - A Pre MIP Discussion  Propuestas relevantes de MIP6 para las cuales podr\u00eda emplearse esta liquidaci\u00f3n: Paperchain, ConsolFreight, Harbor Trade Credit  C\u00f3digo de ejemplo: tinlake_flip.sol y drop_join.sol en este repositorio.  Sumario Abreviado Esta propuesta proporciona un mecanismo de liquidaci\u00f3n de vaults para los colaterales de pr\u00e9stamos a corto plazo basado en Tinlake que implica dejar madurar un portafolio de dichos activos a corto plazo o refinanciarlos de forma off-chain y utilizar reembolsos de pr\u00e9stamos para liquidar el saldo del Vault. Sumario Extendido Para los pr\u00e9stamos a corto plazo combinados de Vaults de Centrifuge, subastar un portafolio de pr\u00e9stamos a corto plazo no es necesariamente la forma m\u00e1s eficaz para que Maker liquide un Vault. Cuando estos activos son muy il\u00edquidos, el descuento que un poseedor querr\u00eda superar al beneficio de esperar el vencimiento de los pr\u00e9stamos subyacentes. Centrifuge ha construido los contratos de Tinlake para gestionar las liquidaciones de portafolios de pr\u00e9stamos on-chain. Este mecanismo permite a los contratos inteligentes de Maker obtener acceso directo a estos reembolsos sin la necesidad de ning\u00fan guardi\u00e1n externo. Sumario de Componentes MIP22c1: Prerrequisitos de Colateral Describe los requisitos para el tipo de colateral para hacer uso del m\u00f3dulo de liquidaci\u00f3n propuesto. MIP22c2: Mecanismo de Liquidaci\u00f3n Describe el mecanismo mediante el cual los Vaults son liquidados cuando el adaptador descrito es usado. MIP22c3: Definiciones Definiciones de Componentes del Adaptador MIP22c4: C\u00f3digo Propuesto Una explicaci\u00f3n de la l\u00f3gica junto con el c\u00f3digo MIP22c5: Uso del c\u00f3digo y Casos de Prueba A\u00fan pendiente MIP22c6: Consideraciones de Seguridad A\u00fan pendiente MIP22c7: Licencia El c\u00f3digo tiene licencia APGL. Motivaci\u00f3n Como hemos dicho en discusiones y hilos anteriores, creemos que agregar activos del mundo real (RWA) al MCD es el camino a seguir para escalar el suministro de Dai y equilibrar el portafolio de riesgo de colateral a trav\u00e9s de activos no correlacionados. Un problema clave que impide la adici\u00f3n de RWA al Protocolo Maker ha sido la ausencia de un proceso confiable para liquidar un Vault de Maker que est\u00e9 respaldado por estos activos. Cuando una entidad legal invierte en una pool de Tinlake respaldada por RWA, firma un contrato legal con el emisor y, por lo tanto, obtiene un reclamo legal sobre el colateral subyacente (el activo del mundo real). Cuando Maker liquida un Vault respaldada por estos tokens, debe tener una forma de recuperar el DAI que se gener\u00f3 del Vault sin tener que firmar un contrato legal con el emisor. Estamos proponiendo un mecanismo de liquidaci\u00f3n que resuelve eso siempre que un Vault est\u00e9 respaldado por un colateral de pr\u00e9stamo a corto plazo. Este mecanismo no requiere subasta ni estructuras legales adicionales. Vemos esta soluci\u00f3n como un gran impulso para hacer realidad los RWA en MCD a corto plazo. La soluci\u00f3n propuesta en esta MIP requiere que el grupo de pr\u00e9stamos que se tokeniza a trav\u00e9s de Centrifuge sea:  De muy corto plazo y esperar el vencimiento del pr\u00e9stamo es econ\u00f3micamente viable.  o  Los pr\u00e9stamos pueden ser vendidos (refinanciados) por el emisor off-chain y existe un proceso para la liquidaci\u00f3n de la pool en caso de que cualquier titular de un token DROP (como Maker)  Si el componente de liquidaci\u00f3n propuesto debe usarse para un tipo de colateral dado, debe ser parte de la Evaluaci\u00f3n de Riesgos y discutirse activo por activo. Si esto se desea, el siguiente c\u00f3digo debe configurarse para usarse al agregar un nuevo colateral con el voto ejecutivo de MIP12. Especificaci\u00f3n MIP22c1: Prerrequisitos de Colateral Los activos que deber\u00edan poder utilizar este colateral tienen algunos requisitos:  Esto solo funciona para colaterales que utilizan contratos inteligentes Tinlake de Centrifuge para tokenizar sus pr\u00e9stamos off-chain. Debe haber suficientes inversores adem\u00e1s de MakerDAO que aseguren el correcto funcionamiento del recurso legal. Los Equipos de Dominio de Riesgo consideran suficiente este mecanismo de liquidaci\u00f3n para el tipo de colateral.   MIP22c2: Mecanismo de Liquidaci\u00f3n Cuando se inicia la liquidaci\u00f3n de un Vault, el adaptador de liquidaci\u00f3n propuesto obliga a la pool de Tinlake a liquidarse al enviar una orden para canjear todos los colaterales dentro del Vault. Los contratos de Tinlake asignan entonces autom\u00e1ticamente todos los flujos de efectivo entrantes de los prestatarios a los inversores (es decir, el Vault de Maker) para reembolsos. https://camo.githubusercontent.com/b38fa723378c051616983a99d015c10e67518e1a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f63656e747269667567652d6861636b6d642f75706c6f61645f61363562396239326131376132333539366162346330643461323430346666372e706e67  MIP22c3: Definiciones   Tinlake Flipper: el contrato que puede liquidar un Vault al ir a los contratos de la Pool de Tinlake para canjear DROP por DAI y luego transferir el DAI obtenido al Vow   DROPJoin: un adaptador basado en gran medida en GemJoin que s\u00f3lo permite un contrato del grupo de Tinlake seleccionado para a\u00f1adir colateral al Vault de Maker.  Tinlake Pool: una pool de pr\u00e9stamos respaldados por activos liquidados en DAI.  DROP: el token ERC20 de acciones de la pool senior, que se puede canjear por una parte del DAI reembolsado por los pr\u00e9stamos en el Grupo Tinlake   MIP22c4: C\u00f3digo Propuesto El c\u00f3digo se ha mantenido al m\u00ednimo y cualquier cambio funcional se muestra a continuaci\u00f3n. Publicaremos un repositorio Git luego de recolectar opiniones sobre esta propuesta (que se modificar\u00e1). El c\u00f3digo completo se puede ver aqu\u00ed. Para cada pool de Tinlake solo habr\u00e1 un Vault de su propiedad. La pool tendr\u00e1 la l\u00f3gica necesaria para administrar el Vault. Modificamos el adaptador GemJoin est\u00e1ndar para solo permitir el m\u00e9todo join a ser llamado por wards (es decir, es una llamada autorizada). Esto prevendr\u00e1 que cualquier otra persona pueda abrir un CDP con tokens DROP, ya que no podr\u00e1n a\u00f1adir el colateral al sistema. El contrato TinlakeJoin se ve como a continuaci\u00f3n. N\u00f3tese el modificador auth agregado en la funci\u00f3n join. Este es el \u00fanico cambio necesario. contract DROPJoin is GemJoin {     function join(address usr, uint wad) external auth note {         require(live == 1, \"GemJoin/not-live\");         require(int(wad) >= 0, \"GemJoin/overflow\");         vat.slip(ilk, usr, int(wad));         require(gem.transferFrom(msg.sender, address(this), wad), \"GemJoin/failed-transfer\");     } }   El Tinlake Flipper toma todo el colateral de un Vault y solicita el reembolso de la pool. Entonces, los contratos Tinlake obligan a que cualquier pago de pr\u00e9stamos se desembolse a cualquier poseedor de DROP que solicite el reembolso. A medida que se canjea el DAI de la Pool, el adaptador transifere el DAI en el vow hasta que se recupera tab. En ese punto cualquier DAI adicional que puede ser canjeado por el DROP es devuelto al pool. El mecanismo de subasta es binario: desde el punto de vista econ\u00f3mico, no ser\u00eda deseable liquidar solo una parte del colateral. Por lo tanto, el mecanismo est\u00e1 dise\u00f1ado para liquidar todo y solo despu\u00e9s de devolver cualquier exceso de DAI recaudado a la pool. Cuando se liquida una Vault (se llama a Cat.bite), Cat llamar\u00e1 a Flipper.kick que da inicio a la liquidaci\u00f3n. Al principio, retira todo el colateral (los tokens DROP) del sistema y se coloca una redeemOrder en el contrato pool.    function kick(address dest_, address gal, uint256 tab_, uint256 lot, uint256 bid)        public auth returns (uint256 id)    {        vow = gal;        dest = dest_;        tab = tab_;        vat.flux(ilk, msg.sender, address(this), lot);        dropJoin.exit(address(this), lot);        pool.redeemOrder(drop.balanceOf(address(this)));        emit Kick(id, lot, bid, tab_, dest, vow);    }   La orden de canje ahora se tendr\u00e1 en cuenta siempre que los reembolsos de pr\u00e9stamos fluyan hacia el grupo o cuando otros inversores quieran unirse a la pool. A medida que la pool canjea los DROP, cualquier usuario puede llamar a la funci\u00f3n take. Esto mueve el DAI disponible para retiro de la pool y reembolsa la deuda pendiente (tab) al vow o la devuelve a la pool. Este m\u00e9todo se puede llamar varias veces para hacer que la pool disburse m\u00e1s DAI y lo devuelva a la pool como fondos disponibles para los prestatarios.     function take() public {         (uint returned, ) = pool.disburse();         uint tabWad = tab / RAY; // always rounds down, this could lead to < 1 RAY to be lost in dust         if (tabWad < returned) {             dai.transfer(dest, sub(returned, tabWad));             returned = tabWad;         }         if (tab != 0) {             daiJoin.join(vow, returned);             tab = sub(tab, mul(returned, RAY));         }     }   Los contratos inteligentes de Tinlake recopilan las \u00f3rdenes de canje y devuelven cualquier DAI devuelto por los prestatarios proporcionalmente a todos los poseedores de tokens DROP primero. Esto significa que para recibir la m\u00e1xima prioridad en el reembolso, la liquidaci\u00f3n debe solicitar que se reembolse todo el DROP. Esto se puede hacer estableciendo la variable dunk en uint (-1). Esto eleva el tama\u00f1o m\u00ednimo del colateral a subastar durante la liquidaci\u00f3n por encima del colateral m\u00e1ximo que puede existir, lo que obliga a la liquidaci\u00f3n de todo el Vault y no solo de parte de \u00e9l.  MIP22c5: Casos de Prueba Tinlake se est\u00e1 sometiendo a una auditor\u00eda que se publicar\u00e1 el 22 de septiembre. Modificaremos esta secci\u00f3n con informaci\u00f3n sobre los casos de prueba que tenemos que cubren tanto a GemJoin como al Flipper.  MIP22c6: Consideraciones de Seguridad Esta secci\u00f3n se completar\u00e1. Los contratos principales de Tinlake se han sometido a auditor\u00edas de seguridad en el pasado (informes) y publicaremos la auditor\u00eda que estamos realizando para el pr\u00f3ximo lanzamiento en las pr\u00f3ximas semanas, ya que est\u00e1 lista. En cuanto a los contratos que interact\u00faan directamente con MakerDAO (TinlakeFlipper y DROPJoin), se enviar\u00e1n con una amplia cobertura de pruebas y se redactaron siguiendo la gu\u00eda de estilo de contrato inteligente de MakerDAO / DappHub, no utilizan bibliotecas externas y son f\u00e1ciles de auditar con un total de menos de 100 l\u00edneas de c\u00f3digo.  MIP22c7: Licencia  Todo el c\u00f3digo tiene la licencia AGPL  Esto es una traducci\u00f3n libre del art\u00edculo original en ingl\u00e9s, gracias a @Lozadaluis12 y @JoseFerrari por la traducci\u00f3n. ",
                    "links": [
                        "https://forum.makerdao.com/t/pc-drop-mip6-application-paperchain-drop-tokenized-music-streaming-invoices/2215",
                        "https://forum.makerdao.com/t/cf-drop-mip6-application-consolfreight-drop-tokenized-freight-shipping-invoices/2214",
                        "https://forum.makerdao.com/t/htc-drop-mip6-application-harbor-trade-credit-drop-short-term-trade-receivables/3502",
                        "https://camo.githubusercontent.com/b38fa723378c051616983a99d015c10e67518e1a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f63656e747269667567652d6861636b6d642f75706c6f61645f61363562396239326131376132333539366162346330643461323430346666372e706e67",
                        "https://github.com/lucasvo/mips/tree/mip22/MIP22",
                        "https://github.com/centrifuge/security/tree/master/audits/tinlake",
                        "https://forum.makerdao.com/t/mip22-centrifuge-direct-liquidation-module/3930",
                        "https://forum.makerdao.com/t/g-r-snippets-en-espanol/4782/12"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.600198412698413
                }
            ]
        }
    ]
}