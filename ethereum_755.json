{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/more-frequent-smaller-hardforks-vs-less-frequent-larger-ones/2929",
            "title": "More frequent, smaller hardforks vs. less frequent, larger ones ",
            "index": 2929,
            "category": [
                "Process Improvement"
            ],
            "tags": [
                "hardfork",
                "ethereum-roadmap"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "1",
                    "likes": "2",
                    "time": "15/03/2019-18:22:04",
                    "content": "In today\u2019s AllCoreDevs call there was discussion about potentially moving from large hard forks containing several EIPs to smaller ones with less (or potentially only a single) EIPs. The goal of this thread is to start a discussion around the Pros and Cons of each approach. I\u2019ll begin by listing a few, but I don\u2019t feel like I have the full picture, so it would be valuable for others to chime in. Namely, @AlexeyAkhunov, as you had advocated for smaller hard forks in the past and brought it up again in today\u2019s call . I will keep editing the argument lists below as people comment on the thread. Arguments for Smaller, More Frequent Hard Forks  More frequent updates to the protocol; Can separate concerns better / isolate changes; Multi-hard-fork initiatives, such as State Rent, can drastically reduce their deployment time; \u201cUnless we make serious improvements in the way the EIPs are put it, there is little hope that Ethereum 1x will deliver what it is supposed to.\u201d Simplifies testing due to a more steady flow of less EIPs to test and less cross-EIP interactions to test.  Arguments for Larger, Less Frequent Hard Forks  Less frequent need for users to update clients; There is a coordination cost to each HF, so more frequent ones involve more coordination work across major stakeholders running clients (e.g. miners, exchanges, block explorers, etc.); Allows ample time for security evaluation If hard forks are too close to each other, bugs found in a given hard fork may delay/push back subsequent hard forks  Other Considerations  Ad-hoc vs. fixed schedule for hard forks Smaller hard forks may result in multiple hard forks happening in parallel (where various forks are at different deployment stages)  ",
                    "links": [
                        "https://ethereum-magicians.org/t/istanbul-eth1x-roadmap-planning-meeting-april-17th-18th-in-berlin/2899",
                        "https://ethereum-magicians.org/t/ethereum-core-devs-meeting-58/3053",
                        "https://ethereum-magicians.org/t/ensuring-eth-1-xs-success-without-disenfranchising-the-community/3457"
                    ],
                    "GPT-summary": "The author of the post is proposing a discussion on the advantages and disadvantages of having more frequent, smaller hard forks versus less frequent, larger ones in Ethereum. The author lists some arguments for both approaches and invites others to contribute to the discussion. The post also mentions some other considerations, such as the coordination cost of hard forks and the possibility of multiple hard forks happening in parallel.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 4.979960317460318
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/sneg55",
                    "index": "2",
                    "likes": "0",
                    "time": "15/03/2019-18:27:33",
                    "content": "We have to define that Users who need to update clients - it\u2019s mining pools, exchanges, light wallets and infrastructure providers such as Infura. They all benefiting from Ethereum ecosystem, and I think they will support more frequent updates. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "3",
                    "likes": "2",
                    "time": "15/03/2019-18:36:20",
                    "content": "For users also consider that exchanges tend to shut down trading in the hours before and after a hard fork. So is the question about smaller vs. larger hard forks or for ad hoc vs. scheduled hard forks?  If we want smaller more frequent hard forks we can still do that on a fixed schedule, perhaps every three months.  But if we do we will almost certainly have to pipeline and layer the process so that we may have three hard forks in flight: one is in the testing/deployment, one is in client implementation, and one is in EIP review. I think a predictable and short schedule will result in smaller forks.  A quarterly/semi-annual mandatory update is what would result from a fixed schedule, vs a random and unpredictable mandatory update schedule. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.614139515455305
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/sneg55",
                    "index": "4",
                    "likes": "0",
                    "time": "15/03/2019-18:44:47",
                    "content": "    shemnon:  I think a predictable and short schedule will result in smaller forks. A quarterly/semi-annual mandatory update is what would result from a fixed schedule, vs a random and unpredictable mandatory update schedule.   We could set a quarterly schedule for network updates so that everyone will benefit from predictable timelines. For exchanges, pools and other users it\u2019s easier to allocate resources for HFs when exact schedule is known. And in case if something goes wrong as it was with Constantinople, EIPs from such hardfork just moving to next scheduled date, instead of creating new hardfork in between. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.536421911421912
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "5",
                    "likes": "0",
                    "time": "15/03/2019-18:48:08",
                    "content": "    shemnon:  So is the question about smaller vs. larger hard forks or for ad hoc vs. scheduled hard forks?   Agreed, these two seem to be orthogonal. Will update the initial post. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 4.416666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AlexeyAkhunov",
                    "index": "6",
                    "likes": "3",
                    "time": "15/03/2019-20:06:07",
                    "content": "    shemnon:  But if we do we will almost certainly have to pipeline and layer the process so that we may have three hard forks in flight: one is in the testing/deployment, one is in client implementation, and one is in EIP review.   Yes, and I think this is absolutely fine. However, it does require to change the ways the changes are done. First and foremost, if we pipeline the changes, we cannot rely on a single testing team to do all the test generation - that would need to happen while EIP is prepared. Having more frequent upgrades (scheduled or not - it is orthogonal s @timbeiko noted) will help avoid half-baked changed that would need to be \u201csqueezed through\u201d before the deadline. Postponing something by 3 months is not as bad as postponing it by 9 months. Also, it looks like Ethereum 1x has invigorated the appetite for more changes in Ethereum, which is good, but I do not want it to have to create too much tension when changes compete for the limited space in the large releases. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.754120879120879
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "7",
                    "likes": "1",
                    "time": "15/03/2019-20:19:57",
                    "content": "    AlexeyAkhunov:  Also, it looks like Ethereum 1x has invigorated the appetite for more changes in Ethereum, which is good, but I do not want it to have to create too much tension when changes compete for the limited space in the large releases.   Good point. I think a related issue is that changes compete for limited client implementer resources. Whether hard forks happen every 3, 6, or 9 months, the amount of developers working on clients is more or less constant and if more time is spent implementing/testing/deploying EIPs, because of an overall growth in changes to the protocol, then less time is spent on non-EIP work. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.690126050420168
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AlexeyAkhunov",
                    "index": "8",
                    "likes": "1",
                    "time": "15/03/2019-20:27:42",
                    "content": "    timbeiko:  Whether hard forks happen every 3, 6, or 9 months, the amount of developers working on clients is more or less constant and if more time is spent implementing/testing/deploying EIPs   So far it looks to me that the actual time spent on implementing EIPs in the clients is not that large - especially if EIPs are well-prepared. It is only when EIPs are not well specified, missing tests, there are more iterations to figure things out. As much work as possible needs to be done pre-EIP, so that the client implementers aren\u2019t the bottleneck - and I don\u2019t think they usually are. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.266456582633054
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xazax310",
                    "index": "9",
                    "likes": "0",
                    "time": "18/03/2019-12:48:55",
                    "content": "I think the problem with more frequent HF could be more problems if something like EIP1283 happens again. A 3 month schedule is tight one to make, should something happen, that will then cascade down and possibly delay the rest. I know I may be the only one arguing for this, but I think one year release schedule where EIPs are chosen the previous year Audited, tested though-out the year on testnet etc then implemented at a set date/time/month every year. This gives ample time for bugs to be found. Processes to be improved and allows Pools and Exchanges the \u201cHF\u201d date every year to be prepared and ready to upgrade. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.444003527336861
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "10",
                    "likes": "0",
                    "time": "18/03/2019-13:26:09",
                    "content": "Thanks for your comment! Is it fair to rephrase this comment:  I think the problem with more frequent HF could be more problems if something like EIP1283 happens again. A 3 month schedule is tight one to make, should something happen, that will then cascade down and possibly delay the rest.  as \"Increases risk that bugs found in HF x cause delay in HF x+1 ? If that is fine with you, @xazax310, I can add it to the list in the original post. Similarly, can I rephrase this:  Audited, tested though-out the year on testnet etc then implemented at a set date/time/month every year. This gives ample time for bugs to be found. Processes to be improved and allows Pools and Exchanges the \u201cHF\u201d date every year to be prepared and ready to upgrade.  as \u201cAllows ample time for security evaluation\u201d ? The rest of your concern seems already captured by \" * There is a coordination cost to each HF, so more frequent ones involve more coordination work across major stakeholders running clients (e.g. miners, exchanges, block explorers, etc.);\", but let me know if it isn\u2019t. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.209387400793651
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xazax310",
                    "index": "11",
                    "likes": "0",
                    "time": "18/03/2019-13:39:05",
                    "content": " as \u201cAllows ample time for security evaluation\u201d ? The rest of your concern seems already captured by \" * There is a coordination cost to each HF, so more frequent ones involve more coordination work across major stakeholders running clients (e.g. miners, exchanges, block explorers, etc.);\", but let me know if it isn\u2019t.  Yeah, that seems right in line with what I\u2019m thinking.  as \"Increases risk that bugs found in  HF x  cause delay in  HF x+1  ?  Math has never been my favorite subject  so that works for me. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 6.272534013605442
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "12",
                    "likes": "0",
                    "time": "18/03/2019-14:04:08",
                    "content": "No worries. I meant that this increases the risk that a bug found in a planned hard fork delays the next one. I will rephrase in a less math-y way in the original post. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 4.895833333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AlexeyAkhunov",
                    "index": "13",
                    "likes": "2",
                    "time": "18/03/2019-14:24:08",
                    "content": "    xazax310:  I think the problem with more frequent HF could be more problems if something like EIP1283 happens again. A 3 month schedule is tight one to make, should something happen, that will then cascade down and possibly delay the rest. I know I may be the only one arguing for this, but I think one year release schedule where EIPs are chosen the previous year Audited, tested though-out the year on testnet etc then implemented at a set date/time/month every year.   It is my current intuition that unless we make serious improvements in the way the EIPs are put it, there is little hope that Ethereum 1x will deliver what it is supposed to. The current rate of change seems too slow to accommodate the crucial fixes + all the other stuff the people are now proposing since it looks like \u201cthe gates are open once again\u201d. I guess it will become very clear in a few months ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.884270282186948
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xazax310",
                    "index": "14",
                    "likes": "1",
                    "time": "18/03/2019-15:36:57",
                    "content": " It is my current intuition that unless we make serious improvements in the way the EIPs are put it, there is little hope that Ethereum 1x will deliver what it is supposed to.  That\u2019s how I\u2019m seeing it too. Is it the EIP process that needs to be reviewed in addition to HF times? I know it sounds unintuitive but would a Committee on EIPs resolve any of those issues? Such as Security concerns, release times, inclusions or exclusions due to security concerns. [ WIP ] -> [ DRAFT ] -> [ LAST CALL ] -> [ ACCEPTED ] -> [ FINAL ]  [ WIP ] -> [ DRAFT ] -> [ LAST CALL/REVIEWED ] -> [COMMITTEE  ACCEPTED] -> [PLANNED INCLUSION OF HF SCHEDULED DATE]-> [ FINAL ]  I\u2019ll post it here since it relevant but to me looks like another topic for discussion. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.877083333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/lrettig",
                    "index": "15",
                    "likes": "3",
                    "time": "18/03/2019-20:41:43",
                    "content": "    AlexeyAkhunov:  It is my current intuition that unless we make serious improvements in the way the EIPs are put it, there is little hope that Ethereum 1x will deliver what it is supposed to. The current rate of change seems too slow to accommodate the crucial fixes + all the other stuff the people are now proposing   Seconded, this is my concern and my fear as well. Combined with Higher standards for EIPs, I think we have the beginnings of what needs to be done to improve the EIP process and increase the pace of innovation. I think testing is definitely one bottleneck in the existing process and we should discuss how to improve throughput - I think a \u201clayered pipeline\u201d approach as discussed here would make sense. Does the testing team have sufficient resources today? CC @holiman (I don\u2019t see Dimitry here) Another thought to consider: instead of a waterfall approach, would a leaner approach with multiple \u201csprints\u201d maybe make sense here? It seems like Afri\u2019s proposal, which we\u2019ve been working with for Istanbul, works this way - we\u2019re pursuing multiple EIPs at the same time, with hard deadlines for EIP submission, implementations, testing, etc. and whatever makes it into the next upgrade goes in, whatever doesn\u2019t must wait until the following one. ",
                    "links": [
                        "https://en.ethereum.wiki/roadmap/istanbul#timelines"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.670833333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "16",
                    "likes": "3",
                    "time": "18/03/2019-22:02:32",
                    "content": "    lrettig:  Another thought to consider: instead of a waterfall approach, would a leaner approach with multiple \u201csprints\u201d maybe make sense here?   I think we get this from having planned HFs in advance, regardless of the size  At this point, we\u2019re mostly debating the length of the sprint  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "17",
                    "likes": "2",
                    "time": "29/03/2019-12:23:32",
                    "content": "    lrettig:  I think testing is definitely one bottleneck in the existing process and we should discuss how to improve throughput - I think a \u201clayered pipeline\u201d approach as discussed here would make sense. Does the testing team have sufficient resources today? CC @holiman (I don\u2019t see Dimitry here)   Sufficient resources - I\u2019d say no on that. Testing is a bit thankless task, and what complicates the matter is that it both requires very solid knowledge of EVM internals and Ethereum in general, and it\u2019s also much  case of not much happening, and then suddenly there is tons of work to be done, as we finalize eips. So from that respect, I think having a steadier flow of smaller eips would be a definite win. Then it wouldn\u2019t be this case of coordinating testcases for N new features which may or may have internal interaction in odd ways. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.383207070707071
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "18",
                    "likes": "0",
                    "time": "29/03/2019-13:15:59",
                    "content": "Thanks for sharing! I\u2019ve added this to the original post. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "19",
                    "likes": "1",
                    "time": "29/03/2019-14:30:21",
                    "content": "One thing that came up in the AllCoreDevs call today is that the this could potentially change before Istanbul. When and how should we get consensus on whether we want to change this? ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boris",
                    "index": "20",
                    "likes": "0",
                    "time": "29/03/2019-14:33:02",
                    "content": "I think this should be an Informational EIP (of which we have very few). We can update 233 to say that dates are picked based on those guidelines. Let\u2019s get it in and finalized @shemnon. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal"
                    ],
                    "Sentiment": 3.7
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/lrettig",
                    "index": "21",
                    "likes": "3",
                    "time": "29/03/2019-15:07:16",
                    "content": "On the all core devs call just now @holiman proposed an \u201cEIP-centric\u201d upgrade process rather than a hard-fork centric model like we have now. @AlexeyAkhunov also expressed concern about a deadline, like the May 17 Istanbul deadline, meaning that folks would have to rush their EIPs in before the deadline lest they \u201cmiss the boat\u201d and have to wait 9 or 12 months until the next hard fork. I\u2019m also concerned about people submitting half-baked \u201cplaceholder\u201d EIPs before the deadline. I like Martin\u2019s idea a lot, especially in combination with smaller, more frequent hard forks. @shemnon\u2019s proposal at https://github.com/shemnon/EIPs/blob/4e3069b4f9a30a639b142151dc6295f634712786/EIPS/eip-network_upgrade_windows.md looks reasonable to me. ",
                    "links": [
                        "https://ethereum-magicians.org/t/shanghai-core-eip-consideration/10777/26"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.12037037037037
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "22",
                    "likes": "6",
                    "time": "12/04/2019-15:12:29",
                    "content": "Advantages to fast enough upgrade schedule:  If a feature isn\u2019t ready on time it\u2019s not a huge slip to wait for the next upgrade. Upgrades happen too fast for the mob to get mobilized. Discussion of EIPs gets pushed further back into the process where it belongs. Upgrades may become as uneventful as Apple point releases.  Disadvantages:  Developers are testing more than developing. The mob never stops screaming that they weren\u2019t consulted. More work and coordination for miners.  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.699999999999999
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "23",
                    "likes": "0",
                    "time": "12/04/2019-20:40:09",
                    "content": "Testing is a thankless task for developers.  It\u2019s a job that real testers like to do.     holiman:  Testing is a bit thankless task   ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "24",
                    "likes": "2",
                    "time": "12/04/2019-20:43:39",
                    "content": "From AllCoreDevs: Nick Sawinyh @sneg55 09:06  More work and coordination for miners.  It\u2019s not a big deal actually for most of mining pools. Peter Salanki @salanki 13:00 +1 on Nicks comment. Updating node software for mining pools is very painless. Takes 5 minutes for me Greg Colvin @gcolvin 14:34 Then we are down to the mob, which I don\u2019t care about, and the lack of testing resources. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.87037037037037
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/fubuloubu",
                    "index": "25",
                    "likes": "0",
                    "time": "13/04/2019-15:31:51",
                    "content": "+1 Lack of testing resources. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cdili",
                    "index": "26",
                    "likes": "1",
                    "time": "20/04/2019-09:34:28",
                    "content": "Top developers and engineers know to own their code. They know that the engineering includes testability, including all the code for testing, keeping tests reliable, efficient, maintainable, extensible, etc. Yes, other eyes and engineers are required for producing robust code, but the culture needs to be more on ownership rather than on other people/testers to find the bugs or security issues. There are engineers that come from such cultures but usually they are very comfortable in their big company jobs. I\u2019m not writing this to argue but to clarify your points further. +1 to a lack of engineers on fronts like testing, security, performance\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match."
                    ],
                    "Sentiment": 5.81
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gcolvin",
                    "index": "27",
                    "likes": "3",
                    "time": "21/04/2019-06:23:16",
                    "content": "    cdili:  Top developers and engineers know to own their code. They know that the engineering includes testability, including all the code for testing, keeping tests reliable, efficient, maintainable, extensible,   Over the years I\u2019ve seen many patterns on the relationship of development and testing.  But when I have worked with professional test engineers I\u2019ve found that they are simply much better at it than I am, as you would expect. When I have been sole owner and tester of my code I can do fine.  I spent three years writing one system that manifested only one bug in the next seven years in production.  But I\u2019m more productive when I can concentrate my efforts where I am most skillful, and let test engineers concentrate their efforts where they are most skillful. This is independent of big vs. small company.  The best test engineer I ever worked with was at a tiny startup.  But it\u2019s true that no big company I worked at failed to have professional test engineers on staff.  Lots of them. What\u2019s been hardest here is maintaining ownership in an open-source environment that lets anybody on earth make PRs. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None",
                        "None"
                    ],
                    "Sentiment": 6.071969696969697
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "28",
                    "likes": "3",
                    "time": "22/04/2019-05:04:30",
                    "content": "So one of the questions at 1x Berlin related to the preferred cadence of 1.x network upgrades.  6 month vs 4 month was the point where consensus broke down.  As an advocate of 6 month the big advantage I see for client developer is that it will keep the clients focused to one upgrade at a time.  With a 4 or 3 month cadence there will start to be some overlap between the upgrades before they are \u201cdone.\u201d Here\u2019s a chart I put together with some cheesy placeholder names for future upgrades that illustrates the overlap.  EIPs is the deadline for EIPs to be considered.  Clients is the client development soft deadline.  Testnet and Mainnet are respective hard fork dates.  These landmarks are presuming we keep the same Istanbul landmarks for future network upgrades. 6 month Cadence     Date Istanbul \u2018Asiago\u2019 \u2018Brie\u2019 \u2018Cheddar\u2019     May 2019 EIPs      Jun 2019       Jul 2019 Clients Kickoff     Aug 2019 Testnet      Sep 2019       Oct 2019 Mainnet      Nov 2019  EIPs     Dec 2019       Jan 2020  Clients Kickoff    Feb 2020  Testnet     Mar 2020       Apr 2020  Mainnet     May 2020   EIPs    Jun 2020       Jul 2020   Clients Kickoff   Aug 2020   Testnet    Sep 2020       Oct 2020   Mainnet    Nov 2020    EIPs   Dec 2020       Jan 2021    Clients   Feb 2021    Testnet   Mar 2021       Apr 2021    Mainnet    4 month Cadence     Date Istanbul \u2018Asiago\u2019 \u2018Brie\u2019 \u2018Cheddar\u2019     May 2019 EIPs Kickoff     Jun 2019       Jul 2019 Clients      Aug 2019 Testnet      Sep 2019  EIPs Kickoff    Oct 2019 Mainnet      Nov 2019  Clients     Dec 2020  Testnet     Jan 2020   EIPs Kickoff   Feb 2020  Mainnet     Mar 2020   Clients    Apr 2020   Testnet    May 2020    EIPs   Jun 2020   Mainnet    Jul 2020    Clients   Aug 2020    Testnet   Sep 2020       Oct 2020    Mainnet   Nov 2020        With a 4 month cadence we need to lock in EIPs prior to a successful launch of the previous upgrade.  And the hard fork window is the same time period where devs would need to work on client implementation for the next version.  If something goes bad on the pending upgrade the next upgrade will be severely impacted as well. Because of this mainnet launch and next upgrade overlap that I think anything less than 6 months is a higher risk cadence than we should be looking to take on. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.720899470899472
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/AlexeyAkhunov",
                    "index": "29",
                    "likes": "3",
                    "time": "22/04/2019-10:04:14",
                    "content": "    shemnon:  With a 4 month cadence we need to lock in EIPs prior to a successful launch of the previous upgrade. And the hard fork window is the same time period where devs would need to work on client implementation for the next version. If something goes bad on the pending upgrade the next upgrade will be severely impacted as well. Because of this mainnet launch and next upgrade overlap that I think anything less than 6 months is a higher risk cadence than we should be looking to take on.   Makes sense. Though I would say that most of this is based on the our \u201cconventional\u201d way of doing things, like:  Assumption that people working on the EIPs are the same people who are developing major clients - this does not need to be the case. Working Groups are the attempt to change that. EIPs are often under-researched when they hit the roadmap, and there is a large uncertainty of their implementability (effectively EIP process is used as a research process). If EIPs are higher quality and properly researched and prototyped, the risk of them being thrown out and causing knock-on effect are lower Test preparation is a fairly centralised process  Challenging these assumptions is something that would have benefits regardless of whether the cadence is increased. And therefore, it is something to strive for ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.625446428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boris",
                    "index": "30",
                    "likes": "1",
                    "time": "22/04/2019-10:38:03",
                    "content": "@shemnon thank you this is great! I still have to figure out how to pull this into a summary so we can gather everything \u2014 thanks for doing \u201chomework\u201d. @AlexeyAkhunov I think we can move to a more continuous / faster cycle, it will take time for people & processes to adjust rather than time to get work done! Essentially \u201ckanban\u201d where EIPs are pushed through to ready and then bundled into releases. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 7.025
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "31",
                    "likes": "1",
                    "time": "27/04/2019-19:49:21",
                    "content": "To formalize what I said on AllCoreDevs on 26 April, for @AlexeyAkhunov\u2019s point 1 if a fork goes poorly, like Constantinople did (with both testnet and mainnet problems) the same devs that would implement the change for the next network upgrade would be the same people fixing the problematic deployments of the previous network upgrade.  If things go well you are correct they will not be the same people working them. If we get to a point where things are going smoothly at 6 months (both Istanbul and Asaigo) we can re-evaluate for 4 months (with Brie and Cheddar or Cheddar and Derby overlapping).  But both Byzantium and Constantinople were not what I would consider smooth.  Alexey\u2019s points 2 and 3 are the indicators we will need to see to consider a 4 month cycle. And to be clear, these cheesy names are placeholders until we get more formal ones.  But when talking about particular network upgrades in the future we need some mnemonic that implies monotonic order. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.1923076923076925
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "32",
                    "likes": "4",
                    "time": "21/05/2019-22:45:22",
                    "content": "A couple of things on my mind for Asaigo -  Create a new \u201cEIPs Proposed\u201d checkpoint two to three months after kickoff.  6-7 months before mainnet. Change the \u201cEIPs\u201d Proposed checkpoint to \u201cEIP ready.\u201d 4 months after kickoff and 5 months before launch.  This new checkpoint will be when we close the door to new EIPs for the upgrade, rather than 5 months before upgrade it will be 6-7 months.  This will then give time to discuss and hash over the proposed EIPs for two to four all-core-devs calls.  Anything that gets kicked out of the previous upgrade (such as EIP-1283 was) would automatically be considered as proposed. EIPs don\u2019t need to be well formed, they just need to be communicated as proposed with some reasonable bounds.  Like \u201cMy fee market proposal as per my talk at Conference Y\u201d or \u201cState Fees steps W, X, and Z.\u201d The existing 5 months to go mark the EIPs proposed would need to be \u201cready\u201d - i.e. someone would have been on ACD to champion the EIP, ACD had discussion on it on the call or in FEM (or some other appropriate forum) and the EIP would be in a condition it could go into last call, accepted, or final.  The idea being it is ready for client implementors to implement without concern for it being incomplete. The 3 month (client implementations soft deadline) and 2 month (Testnet launch) checkpoints would remain the same.     Date Istanbul \u2018Asiago\u2019 \u2018Brie\u2019 \u2018Cheddar\u2019     May 2019 EIPs      Jun 2019       Jul 2019 Clients Kickoff     Aug 2019 Testnet      Sep 2019  Proposals     Oct 2019 Mainnet      Nov 2019  EIP Ready     Dec 2019       Jan 2020  Clients Kickoff    Feb 2020  Testnet     Mar 2020   Proposals    Apr 2020  Mainnet     May 2020   EIP Ready    Jun 2020       Jul 2020   Clients Kickoff   Aug 2020   Testnet    Sep 2020    Proposals   Oct 2020   Mainnet    Nov 2020    EIP Ready   Dec 2020       Jan 2021    Clients   Feb 2021    Testnet   Mar 2021       Apr 2021    Mainnet    Future cheesy placeholder names: \u2018Danbo\u2019 - Oct `21 \u2018Edam\u2019 - Apr '22 \u2018Fetta\u2019 - Oct '23 \u2018Gouda\u2019 - Apr '23 \u2018Hoop\u2019 - Oct '23 \u2018Infossato\u2019 - Apr '24 This will get us 5 years out, which is what, two major bear markets? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.336822169059011
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "33",
                    "likes": "3",
                    "time": "22/05/2019-10:42:03",
                    "content": "I suggest to use Devcon locations past Istanbul:  (devcon 0: berlin?) devcon 1: london devcon 2: shanghai devcon 3: cancun devcon 4: prague devcon 5: osaka  After 2.5 (?) years that would mean we need to have more devcons or switching naming convention  ",
                    "links": [
                        "https://ethereum-magicians.org/t/ethereum-roadmapping-improvements/6653/12",
                        "https://ethereum-magicians.org/t/e-star-name-for-consensus-layer-upgrade-after-deneb/13248",
                        "https://ethereum-magicians.org/t/rfc-post-merge-network-upgrade-naming-schemes/11977"
                    ],
                    "GPT-discussion-categories": [
                        "Constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 3.984375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "34",
                    "likes": "1",
                    "time": "22/05/2019-18:36:08",
                    "content": "There was a joke told at CoreDevsBerlin that we should auction off the naming rights.  I\u2019m not convinced that is a bad idea. a) Names must be flavorful and meaningful.  A proposal should include the meaning.  e.g. the \u201clima bean\u201d upgrade would be rejected without some meaning. b) Names cannot be the names of existing or known future projects or companies.  e.g. the \u201cEthereum Foundation\u201d, \u201cParity\u201d, and \u201cPegaSys\u201d upgrades would not be valid names. c) The name should be relatively benign and non-controversial.  I would give examples of objectionable names but I\u2019m pretty sure we all can think of some. Why auction?  The funds could be used for paying for AllCoreDevs meeting venue fees and catering/paying for 1-6 meals during these meetings. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.458333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boris",
                    "index": "35",
                    "likes": "0",
                    "time": "22/05/2019-18:51:42",
                    "content": "Hey @axic \u2013 @shemnon very much means these names as bad placeholders. We don\u2019t need to pick the real ones until a meta EIP is filed. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.6000000000000005
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "36",
                    "likes": "1",
                    "time": "23/05/2019-19:36:10",
                    "content": "As a suggestion to reduce confusion, we should use protocol version numbers with \u201cUnnamed\u201d or \u201cTBD\u201d if we don\u2019t yet have one, and still keep the version number once we know the names. v8 - Istanbul v9 - TBD v10 - TBD ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "37",
                    "likes": "0",
                    "time": "23/05/2019-23:32:53",
                    "content": "    shemnon:  There was a joke told at CoreDevsBerlin that we should auction off the naming rights. I\u2019m not convinced that is a bad idea.   If you restrict what can be a name severely, then who would sponsor a generic random name? I\u2019m not convinced it is a useful idea.     boris:  very much means these names as bad placeholders.   That\u2019s fine but the longer people refer to them, the more likely they are going to be sticky. Who wants sticky cheese?      boris:  We don\u2019t need to pick the real ones until a meta EIP is filed.   I was actually going to file one to get started and not leave submissions/reviews to the deadline (as with Istanbul). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.990277777777778
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "38",
                    "likes": "0",
                    "time": "24/05/2019-01:51:03",
                    "content": "    axic:  If you restrict what can be a name severely, then who would sponsor a generic random name? I\u2019m not convinced it is a useful idea.   I would want to avoid to avoid stuff like the \u201cSony Playstation 5\u201d upgrade or a hate-speech derived fork name.     axic:  That\u2019s fine but the longer people refer to them, the more likely they are going to be sticky. Who wants sticky cheese?    You will notice the alphabetical progression, that\u2019s more important than the cheesy theme for the placeholders.  We could call it the \u201ca\u201d upgrade as a placeholder, but the state rent proposal already has the letter space taken.     axic:  I was actually going to file one to get started and not leave submissions/reviews to the deadline (as with Istanbul).   I was hoping we could wait until the kickoff checkpoint for the next meta so we are only juggling one mutable network upgrade document at a time.  It also (currently) lines up with the client implementation checkpoint so stuff can easily move from one list to the next. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.546875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "39",
                    "likes": "0",
                    "time": "24/05/2019-14:12:45",
                    "content": "    shemnon:  I was hoping we could wait until the kickoff checkpoint for the next meta so we are only juggling one mutable network upgrade document at a time.   Too late: Add hardfork meta after Istanbul (Berlin) by axic \u00b7 Pull Request #2070 \u00b7 ethereum/EIPs \u00b7 GitHub  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "40",
                    "likes": "1",
                    "time": "03/06/2019-14:49:08",
                    "content": "I\u2019m thinking that perhaps we should just use numbers for future network upgrades, instead of names.  That should paint the bike shed once and for all.  This aligns with EIP-1846 that wants to move the reference tests away from names and towards numbers upgrades. So \u2018asiago\u2019 would formally be ETH-009-00, and informally \u2018version 9\u2019, \u2018brie\u2019 would be ETH-010-00 and informally \u2018version 10\u2019, and so on. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "41",
                    "likes": "0",
                    "time": "26/07/2019-16:21:00",
                    "content": "Cross-linking this for context based on today\u2019s AllCoreDevs call:   twitter.com          Tim Beiko (TimBeiko)     What we did have consensus on was that the August 14th Testnet fork date was too soon. We agreed to push this back to September 4th.   \ud83d\udce2\ud83d\udce2\ud83d\udce2 Istanbul Testnet Hardfork is now September 4th instead of August 14th \ud83d\udce2\ud83d\udce2\ud83d\udce2   8:56 AM - 26 Jul 2019     1          1             TL;DR:  Istanbul testnet upgrades on Sept 4th vs. Aug 14th Istanbul may be split in two upgrades We need to agree on what makes sense for the next fork after that  ",
                    "links": [
                        "https://twitter.com/TimBeiko/status/1154785971067609088",
                        "https://twitter.com/TimBeiko/status/1154785971067609088"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "42",
                    "likes": "1",
                    "time": "11/08/2019-14:55:15",
                    "content": "    axic:  I suggest to use Devcon locations past Istanbul:   Proposed this forACD#68. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "43",
                    "likes": "0",
                    "time": "11/08/2019-15:16:13",
                    "content": "I like the pun on \u201ccheesy hardfork names\u201d, but agreeing on cheese names for forks just shouts bike shedding. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/timbeiko",
                    "index": "44",
                    "likes": "0",
                    "time": "12/08/2019-13:37:00",
                    "content": "I think this is a good idea. My personal preference would be to auction off the name, and I have a few ideas for it, but realistically this will take a while to get consensus on, and subsequently implement. Devcon locations is non-contentious, and could easily be made a default in case another scheme failed (i.e. an auction with no bidders). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match."
                    ],
                    "Sentiment": 5.361111111111111
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shemnon",
                    "index": "45",
                    "likes": "0",
                    "time": "12/08/2019-17:15:08",
                    "content": "Starting with the January upgrade I really do think we should split the internal names from the external names. Internally we should use something very simple and derivative, like numbers. Natural numbers without multiple layers of decimals and rule about compatibility.  Specifically the number of forks (or attempted forks) since the beginning, like we number our blocks. By internally I mean stuff like reference tests, genesis file flags, etc.  This way we don\u2019t require people working on the code to keep mental models of where devcon was, what cities were at the entrance to the black sea, what cheese starts with the letter \u2018E\u2019, etc.  The code and ordering then are obvious when deciding if ETH09ForkBlock comes before ETH10ForkBlock without having to remember if devs met in Berlin before they met in London. This sequential fork number would be set in the meta-eip when the first testnet fork is set.  This provides a hedge against emergency forks like occurred with the shanghai attacks to help ensure natural fork number ordering.  Perhaps we could re-edit the other meta-eips to add their associated fork numbers as part of this. We can still use marketing designations as part of the fork block, but these don\u2019t live in symbols in the code and don\u2019t require lines in testing docs reminding test developers what the order of the blocks is.  We can put the name in a comment next to the block table in our code, and use the friendlier marketing name in blog posts, twitter updates, conference talks, and other such collateral.  But where the number meets the road it is simply a fork number.  A sysadmin adage I heard that applies is \u201cName your pets, but number your herd.\u201d ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.989299242424242
                }
            ]
        }
    ],
    "group_index": "755"
}