{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-5606-multiverse-nfts-for-digital-asset-interoperability/10698",
            "title": "EIP-5606: Multiverse NFTs for digital asset interoperability ",
            "index": 10698,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/gaurangtorvekar",
                    "index": "1",
                    "likes": "4",
                    "time": "06/09/2022-09:50:27",
                    "content": "This specification defines a minimal interface to create a multiverse NFT standard for digital assets such as wearables and in-game items that, in turn, index the delegate NFTs on each platform where this asset exists. These platforms could be metaverses, play-to-earn games or NFT marketplaces. This proposal depends on and extends EIP-721 and EIP-1155. The ERC specification defines an interface, which acts as an abstract layer on top of existing NFTs that we call a \u2018Multiverse NFT\u2019. A multiverse NFT indexes a digital asset and tracks its various incarnations across different metaverse platforms, games and such. We call the individual representations of this digital asset on the various platforms \u2018delegate NFTs\u2019. The standard also allows for the \u2018bundling\u2019 and \u2018unbundling\u2019 of these delegate NFTs within the multiverse NFT so holders can trade them individually or as a bundle. status: Draft type: Standards Track category: ERC Link to the PR Explanatory Blog ",
                    "links": [
                        "https://gaurangtorvekar.medium.com/proxy-nfts-soulbond-nfts-for-a-digital-asset-6f59922aab55"
                    ],
                    "GPT-summary": "The post introduces a new proposal, EIP-5606, which aims to create a multiverse NFT standard for digital assets such as wearables and in-game items. The proposal extends EIP-721 and EIP-1155 and defines an interface for a 'Multiverse NFT' that indexes a digital asset and tracks its various incarnations across different metaverse platforms, games, and such. The proposal also allows for the bundling and unbundling of delegate NFTs within the multiverse NFT. The post is open for feedback and questions, and it is currently in draft status.",
                    "GPT-proposal-categories": [
                        "Interoperability and Scalability",
                        "Token economics",
                        "Smart contract updates",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.133333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "2",
                    "likes": "1",
                    "time": "20/09/2022-15:33:42",
                    "content": "Might be worth looking into EIP-4955: Vendor Specific Metadata Extension for Non-Fungible Tokens. Not exactly the same, but seems related. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.175
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gaurangtorvekar",
                    "index": "3",
                    "likes": "1",
                    "time": "21/09/2022-15:50:28",
                    "content": "Thanks for that! This is quite relevant, it is trying to solve a similar use case, and the NFTs implementing our standard - \u201cMultiverse NFTs\u201d - can use this metadata schema. While EIP-4955 only deals with a few new schema entries for NFT metadata, our EIP encompasses a new NFT standard, which allows the ownership of the child NFTs on the various metaverses through bundling and unbundling! Hence, it goes beyond the EIP-4955 and adds much more functionality to the implementation. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.555785123966942
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/poojaranjan",
                    "index": "4",
                    "likes": "1",
                    "time": "01/11/2022-16:07:57",
                    "content": "EIP-5606: Multiverse NFTs with Gaurang Torvekar      ",
                    "links": [
                        "https://www.youtube.com/watch?v=PajykC_RV9Q"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jcbdev",
                    "index": "5",
                    "likes": "0",
                    "time": "23/11/2022-17:26:28",
                    "content": "I just had a look through the EIP and the stock implementation.  I really like the idea but I think there are potentially a few avenues for abuse currently This relies on the honesty of the \u201cbundler\u201d and/or the current owner such that when it comes to trading the bundles as there is no protection for the purchaser on bad actions performed by the current owner.  My primary scenario I am thinking of is bait and switch - where the bundle is listed for sale but when it comes to transfer the bundle is unbundled and then rebundled with different items using the same multiverseTokenID before transfer.  Maybe there is and I missed it when I read through the contract? The other scenario is using a bundle to trojan horse a forgery/fake on one platform through by bundling it with some genuine versions of the item on other platforms. Just my initial thoughts. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal"
                    ],
                    "Sentiment": 4.946428571428571
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gaurangtorvekar",
                    "index": "6",
                    "likes": "0",
                    "time": "24/11/2022-09:49:19",
                    "content": "Thanks for your feedback. We have considered this issue and we have already addressed by introducing the initBundle functionality. I would like to point you to this section in the EIP documentation -  Any dapp implementing this standard would initialise a bundle by calling the function initBundle . This mints a new multiverse NFT and assigns it to msg.sender. While creating a bundle, the delegate token contract addresses and the token IDs are set during the initialisation and cannot be changed after that. This avoids unintended edge cases where non-related NFTs could be bundled together by mistake.  I am assuming this safeguard can resolve the issue that you mentioned\u2026 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.5606060606060606
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jcbdev",
                    "index": "7",
                    "likes": "1",
                    "time": "24/11/2022-19:59:19",
                    "content": "Thanks for the quick reply. I didn\u2019t notice that part so thanks. It doesn\u2019t fully solve it in it\u2019s current form.  In the stock implementation the initBundle function is public and unsecured so any person can initialise their own bundle (Obviously a dApp could secure this in their particular implementation but they would need to remember to do that). But the most important issue is still the ability to sell the bundles and to unbundle all NFTs at any time with no purchase or transfer protections for buyer. A bad party could list the bundle for sale on a marketplace and just prior to transfer of the bundle they could unbundle all the items. This would leave the purchaser receiving an empty bundle without the NFTs they thought they were buying. Perhaps transfer should be blocked whilst some items are currently unbundled? Or perhaps a way to lock the bundle for sale temporarily removing the current owners ability to unbundle until the next transfer? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.588235294117647
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/gaurangtorvekar",
                    "index": "8",
                    "likes": "2",
                    "time": "25/11/2022-17:47:02",
                    "content": " It doesn\u2019t fully solve it in it\u2019s current form. In the stock implementation the initBundle function is public and unsecured so any person can initialise their own bundle (Obviously a dApp could secure this in their particular implementation but they would need to remember to do that).  While writing the EIP, we define an interface, and the implementation can vary from one use case to another. Each DAPP or marketplace could define the internal logic and the safeguards when implementing this EIP. Also, the purpose of the initBundle function is to publicly initialize a bundle and define it beforehand so that it deters these kinds of malicious users in the first place   A bad party could list the bundle for sale on a marketplace and just prior to transfer of the bundle they could unbundle all the items. This would leave the purchaser receiving an empty bundle without the NFTs they thought they were buying. Perhaps transfer should be blocked whilst some items are currently unbundled? Or perhaps a way to lock the bundle for sale temporarily removing the current owners ability to unbundle until the next transfer?  I believe the problem has already been resolved by existing marketplaces out there - firstly, marketplaces can show the status of the delegates in real-time and the buyers can make sure that the delegate NFTs are really present in this contract before buying. Secondly, \u201catomicMatch\u201d as defined in Wyvern protocol is exactly meant for this purpose - to ensure the safety of both the seller and the buyer. In any case, if Wyvern and atomic match is not used, then this issue can plague any sort of buying transaction even for normal NFTs. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party or author wants to collaborate on proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.42063492063492
                }
            ]
        }
    ],
    "group_index": "95"
}