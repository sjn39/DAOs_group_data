{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-6682-nft-flashloans/13294",
            "title": "EIP-6682: NFT Flashloans ",
            "index": 13294,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft",
                "defi"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/outdoteth",
                    "index": "1",
                    "likes": "1",
                    "time": "14/03/2023-11:25:14",
                    "content": "This standard is an extension of the existing flashloan standard (EIP-3156) to support ERC-721 NFT flashloans. It proposes a way for flashloan providers to lend NFTs to contracts, with the condition that the loan is repaid in the same transaction along with some fee. The current flashloan standard, EIP-3156, only supports ERC-20 tokens. ERC-721 tokens are sufficiently different from ERC-20 tokens that they require an extension of this existing standard to support them. I tried quite hard to make this EIP have as minimal additional requirements from EIP-3156 as possible. There are only 2 methods: interface IERC6682 {     /// @dev The address of the token used to pay flash loan fees.     function flashFeeToken() external view returns (address);      /// @dev Whether or not the NFT is available for a flash loan.     /// @param token The address of the NFT contract.     /// @param tokenId The ID of the NFT.     function availableForFlashLoan(address token, uint256 tokenId) external view returns (bool); }  Here is the link to the EIP:  github.com/ethereum/EIPs         Add ERC-6680: NFT Flashloans   ethereum:master \u2190 outdoteth:master              opened 11:12AM - 14 Mar 23 UTC                 outdoteth               +161 -0       This standard is an extension of the existing flashloan standard ([EIP-3156](./e\u2026ip-3156.md)) to support ERC-721 NFT flashloans. It proposes a way for flashloan providers to lend NFTs to contracts, with the condition that the loan is repaid in the same transaction along with some fee.       I\u2019ve also created an example implementation here (in addition to the reference implementation in the spec): GitHub - outdoteth/ERC-6682-example: Example implementation of NFT flashloans ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/6682",
                        "https://github.com/outdoteth",
                        "https://github.com/ethereum/EIPs/pull/6682/files",
                        "https://github.com/ethereum/EIPs/pull/6682",
                        "https://github.com/outdoteth/ERC-6682-example"
                    ],
                    "GPT-summary": "The post introduces a new standard, EIP-6682, which is an extension of the existing flashloan standard to support ERC-721 NFT flashloans. The proposal suggests a way for flashloan providers to lend NFTs to contracts, with the condition that the loan is repaid in the same transaction along with some fee. The post also includes a link to the EIP and an example implementation. The post is mainly explaining the proposal, but also extends to provide an example implementation and advertises the proposal. Additionally, the post may receive constructive criticism from third parties.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Interoperability and Scalability",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author is advertising proposal"
                    ],
                    "Sentiment": 5.002314814814815
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/shazow",
                    "index": "2",
                    "likes": "1",
                    "time": "18/03/2023-14:07:44",
                    "content": "Since NFTs are non-fungible, would it make sense to give each token the ability to decide its own willingness to flashloan, its own fee, and its own recipient? This might be too overloaded for a single function, but maybe something like: function availableForFlashLoan(address token, uint256 tokenId) external view returns (bool isLoanable, address sendFeeTo, uint256 feeAmount);  I\u2019m specifically imagining a scenario where an NFT has native flashloan support, and the owners can set their own settings. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.94047619047619
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ashhanai",
                    "index": "3",
                    "likes": "0",
                    "time": "20/03/2023-17:51:21",
                    "content": "Interesting proposal. Can you elaborate on some use cases for borrowing an NFT and returning it in the same transaction? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.666666666666666
                }
            ]
        }
    ],
    "group_index": "394"
}