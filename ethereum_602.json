{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/guided-on-boarding-for-potential-contributors/2244",
            "title": "Guided On-boarding for Potential Contributors ",
            "index": 2244,
            "category": [
                "Working Groups",
                "Education Ring"
            ],
            "tags": [
                "core-devs",
                "education",
                "contributing"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "1",
                    "likes": "3",
                    "time": "18/12/2018-18:07:55",
                    "content": "I saw a post on the AllCoreDevs gitter channel from Mudit Gupta which illustrates a problem in the community. This person was hoping to get up to speed enough to help with go-ethereum contributions, perhaps unrealistically, but earnestly. There is a need for advanced on-boarding, but the core devs don\u2019t have time to do it and expect new contributors to do the work themselves. Mudit Gupta:  Some architecture diagrams of go ethereum or perhaps a video of someone going over the architecture will greatly help Imo. Otherwise, it will just take hours and hours for a new programmer to start contributing (which, as everyone can see, not many are willing to do).  Martin Swende:  Docs about implementation internals have a tendency to rot fast. Docs about structures like patricia trees are great, but for a lot of things, the code will always be the best reference. It will take hours and hours to grasp it all, but we try to flag 'good-first-ticket\u2019s to help on-board new devs. And the geth discord server is better suited for general geth-discussion  Mudit Gupta:  I am not requesting detailed docs about the implementation. Just a 30 min video walkthrough maybe that says what is where.  And later on this person writes something about contributor motivations:  I don\u2019t want to just pick issues and solve them, I want to get the feel of the code first. I want to learn new things while doing that. I need to enjoy something if I am going to do it for free. I am just not ready enough to do chores that I don\u2019t enjoy doing without any gains.  Are there any ideas about what can be done here? ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.373966942148761
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "2",
                    "likes": "1",
                    "time": "18/12/2018-18:30:29",
                    "content": "Thanks @AlexeyAkhunov for engaging with Mudit. @holiman too. Advanced on-boarding is overall a problem in many open source projects; I\u2019ve experienced it myself in civic projects involving much more common/traditional web-based systems. \u201cOnboarding in Open Source Projects\u201d http://www.juergenmuench.com/publications/uploads/09162b2358b531ccfd186a98461314fd528f3ba1.pdf  This case study on open source software projects shows that mentoring can have a significant impact on onboarding new members into virtual software development teams.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.379734848484848
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/boris",
                    "index": "3",
                    "likes": "2",
                    "time": "19/12/2018-01:47:00",
                    "content": "A commitment to onboarding new contributors. Planning to have the documentation & person power to get them productive. Running the project with active PRs and issue grooming (\u201ccommunity management\u201d) that welcomes outside contributions. Major Eth Clients have not had a focus on this to date, and haven\u2019t had big company backing either. I\u2019d love to see more on the contributor onboarding side, but current maintainers also have to want this. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.6659564393939394
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/holiman",
                    "index": "4",
                    "likes": "2",
                    "time": "19/12/2018-08:54:25",
                    "content": "I promise you we want this. The problem is that onboarding new developers is a very time-consuming task. We do spend a lot of time trying to help people out and shepherd people through their PRs, but unless the person is ready to dig in and spend the time that is needed to there\u2019s no way we can do that work for them. What time is \u2018needed\u2019? In my opinion, a contributor should spend enough time that he/she can ask relevant questions. A question may be \u2018If I want to add a new RPC method, where do I define it?\u2019. That\u2019s an on-topic question with sufficient context that we can answer it immediately when it pops up. We have a discord-server for that purpose: https://discord.gg/nthXNEv A question like \u2018Can someone give me a 30 minute explanation about geth architecture?\u2019 is unfortunately not as easy to accommodate. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.611471861471862
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/pet3rpan",
                    "index": "5",
                    "likes": "2",
                    "time": "20/12/2018-00:29:38",
                    "content": "I also believe that the people who have the right aptitude and skills fit for such a role aren\u2019t necessarily in the loop. It takes the investment of time to learn and get up to date before one can provide value. Most people who are up to date are mostly engineers and researchers - not necessarily folks skills in community management. Usually in many companies, this progress happens after the right person with the potential underlying ability + attitude / right fit are hired. With most hiring, it is a bet that they are the one that can do the best job. The problem is that this initial contextual process of getting up to date on research, progress and everything else is expected. I\u2019d say to tackle issues such as talent and having the right people, we need to invest more in people and less in hard knowledge. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.16298185941043
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/RexShinka",
                    "index": "6",
                    "likes": "2",
                    "time": "30/12/2018-23:39:47",
                    "content": "One suggestion is each project having standard documentation.  The SecurEth guidelines (which I contribute to , so yes a shill) have a top level System Description Doc, an architecture doc and requirements in code.  Yes it is extra work, but if developers used this, especially if everyone made the docs in a similar manner, then among the advantages is easier onboarding.  If you look at the examples we have, the actual amount of extra work is not significant.  We have tried hard to minimize the extra docs. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.010416666666667
                }
            ]
        }
    ],
    "group_index": "602"
}