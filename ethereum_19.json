{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-5380-eip-721-entitlement-extension/10190",
            "title": "EIP-5380: EIP-721 Entitlement Extension ",
            "index": 10190,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "1",
                    "likes": "1",
                    "time": "31/07/2022-12:15:57",
                    "content": "  github.com/ethereum/EIPs         PR-5380: EIP-721 Entitlement Extension   ethereum:master \u2190 Pandapip1:patch-4            opened 01:12AM - 31 Jul 22 UTC               Pandapip1             +99 -0       Like EIP-4907 but completely different.       ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/5380",
                        "https://github.com/Pandapip1",
                        "https://github.com/ethereum/EIPs/pull/5380/files"
                    ],
                    "GPT-summary": "The post is an announcement of a new Ethereum Improvement Proposal (EIP) called EIP-5380, which is an extension of EIP-721. The author briefly explains that it is similar to EIP-4907 but different. A third party gives entirely positive feedback by adding a +99 to the proposal. The post can also be seen as an advertisement for the new proposal, and it extends the EIP-721 standard.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "None",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author is advertising proposal",
                        "None"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "2",
                    "likes": "0",
                    "time": "02/08/2022-18:16:07",
                    "content": "Originally from this comment but now a completely different proposal: EIP4907: ERC-721 User And Expires Extension - #17 by TimDaub ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.9375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "3",
                    "likes": "0",
                    "time": "02/09/2022-16:04:11",
                    "content": "Why use the zero address as the owner for EntitlementChanged? Seems like you\u2019d have two possible representations for the owner (the zero address, and their own address). Do they mean different things? What are the fields of that event supposed to represent (specifically contract)?  How is the reason argument supposed to be used? If it\u2019s important, should it be logged? If it isn\u2019t, should it be removed from the interface? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party asking questions about proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party auditing and reviewing proposal"
                    ],
                    "Sentiment": 5.6875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "4",
                    "likes": "0",
                    "time": "02/09/2022-16:29:11",
                    "content": " Why use the zero address as the owner for EntitlementChanged? Seems like you\u2019d have two possible representations for the owner (the zero address, and their own address). Do they mean different things?  The default value of address is address(0). In order to save gas, setting address(0) to mean the current user means that contracts can just return the user\u2019s address if the entitlement is set to address(0). This ends up being a not insignificant saving over a large user base. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 4.618303571428571
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "5",
                    "likes": "0",
                    "time": "02/09/2022-16:29:39",
                    "content": "    SamWilsn:  What are the fields of that event supposed to represent (specifically contract)?   contract represents the contract address of the EIP-721 token. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "6",
                    "likes": "0",
                    "time": "02/09/2022-16:30:09",
                    "content": "    SamWilsn:  How is the reason argument supposed to be used? If it\u2019s important, should it be logged? If it isn\u2019t, should it be removed from the interface?   That was a suggestion by @xinbenlv. I would be happy to remove it, and I do think that it should be logged if kept. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 8.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "7",
                    "likes": "0",
                    "time": "02/09/2022-20:01:09",
                    "content": "I\u2019m not sure I follow, but that isn\u2019t particularly important. This is good content for the rationale section, as I\u2019m sure you know  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving entirely positive feedback on proposal",
                        "3rd party extending to proposal",
                        "3rd party giving constructive criticism of proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.6875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "8",
                    "likes": "0",
                    "time": "06/09/2022-01:27:20",
                    "content": "    SamWilsn:  How is the reason argument supposed to be used? If it\u2019s important, should it be logged? If it isn\u2019t, should it be removed from the interface?   One example of the use of extraParams is that in GovernorBravo function castVoteWithReason(uint proposalId, uint8 support, string calldata reason)  When I am designing the EIP-5453 (Endorsemen) it turns out to me having the ability to give extraParams makes future extension more available. Obviously this is my author peer-review comment, please feel free to make your own authorship judgement, Pandapip1 ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party extending to proposal",
                        "3rd party or author wants to collaborate on proposal"
                    ],
                    "Sentiment": 6.642857142857144
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "9",
                    "likes": "0",
                    "time": "06/09/2022-17:21:20",
                    "content": "    xinbenlv:  When I am designing the EIP-5453 (Endorsemen) it turns out to me having the ability to give extraParams makes future extension more available.   Why couldn\u2019t an EIP just extend this EIP and have an additional implementation that has an additional function signature? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 6.5
                }
            ]
        }
    ],
    "group_index": "19"
}