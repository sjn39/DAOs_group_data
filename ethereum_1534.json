{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/erc-721-safetransferfrom-function-modification-idea/7698",
            "title": "ERC-721; safeTransferFrom function, Modification idea ",
            "index": 7698,
            "category": [
                "Tokens"
            ],
            "tags": [
                "nft",
                "erc-721"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/serCorp",
                    "index": "1",
                    "likes": "0",
                    "time": "06/12/2021-09:03:50",
                    "content": "Hi all, Concerning the ERC721.sol safeTransferFrom function, I propose to move the code line and invert the require by the call to transferFrom: Current code: function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public { transferFrom(from, to, tokenId); require(_checkOnERC721Received(from, to, tokenId, data), \u201cERC721: transfer to non ERC721Receiver implementer\u201d); } I propose: function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public { require(_checkOnERC721Received(from, to, tokenId, data), \u201cERC721: transfer to non ERC721Receiver implementer\u201d); transferFrom(from, to, tokenId);** } In my point of view, the require must be always before the call to any function that should be called if the require is confirmed. Thanks! Sergio ",
                    "links": [],
                    "GPT-summary": "The author of the post is proposing a modification to the safeTransferFrom function in ERC721.sol. The proposal is to move the code line and invert the require by the call to transferFrom. The author explains the reasoning behind the proposal and asks for feedback. A 3rd party gives constructive criticism of the proposal and asks a question.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.6499999999999995
                }
            ]
        }
    ],
    "group_index": "1534"
}