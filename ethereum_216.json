{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/mzero-instruction/11713",
            "title": "MZERO instruction ",
            "index": 11713,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "evm"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/axic",
                    "index": "1",
                    "likes": "1",
                    "time": "11/11/2022-14:23:15",
                    "content": "I would like to float the idea of an MZERO opcode here. It would take two arguments, ptr and len, and would set each byte in the memory between [ptr, ptr+len] to the value zero. Zeroing out memory is a common task, mostly for overwriting previously potentially-used memory (i.e. during memory allocation). Solidity sometimes does tricks like calldatacopy(ptr, calldatasize(), len) to use the zero-padding feature of calldatacopy, codecopy or extcodecopy. See also this Solidity proposal for making that pattern more prevalent. While this pattern works, it sounds like an abuse of those opcodes and we could do better, both in terms of clarity, cost, and aiding analysis/optimisation. The usual counter argument is that it \u201cwastes\u201d the opcode space and it is yet another instruction. P.S. There\u2019s an adjacent MCOPY proposal already. ",
                    "links": [
                        "https://ethereum-magicians.org/t/eip-5656-mcopy-instruction/10890"
                    ],
                    "GPT-summary": "The author proposes the addition of an MZERO opcode to set each byte in memory to zero, which is a common task in memory allocation. The author argues that this would be a better solution than the current practice of using zero-padding features of other opcodes. The author acknowledges the counterargument that it would \"waste\" opcode space and proposes the idea for feedback. A third party could give constructive criticism or ask questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.416666666666666
                }
            ]
        }
    ],
    "group_index": "216"
}