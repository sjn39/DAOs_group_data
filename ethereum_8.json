{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-5320-harberger-taxes-nft/10084",
            "title": "EIP-5320: Harberger Taxes NFT ",
            "index": 10084,
            "category": [
                "EIPs"
            ],
            "tags": [
                "nft",
                "erc-721",
                "erc",
                "erc-20"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/green",
                    "index": "1",
                    "likes": "2",
                    "time": "24/07/2022-09:30:31",
                    "content": "GitHub PR ",
                    "links": [
                        "https://ethereum-magicians.org/t/eip-5548-eip-721-approve-operator-denylist/10549/2"
                    ],
                    "GPT-summary": "The post is a GitHub PR for EIP-5320, which proposes the implementation of Harberger Taxes NFT. The post explains the proposal and provides a link to the PR for further review and auditing.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Privacy, Security and risk management",
                        "Law and regulations",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "2",
                    "likes": "0",
                    "time": "24/07/2022-15:54:07",
                    "content": "I\u2019ve been trying to find useful interfaces around implementing Harberger Taxes for NFTs that have maximal backward compatibility with EIP-721. Some of my work:  Incomplete Solidity implementation: GitHub - rugpullindex/libharberger: A dapptools/foundry-ready library for charging Harberger taxes on partial common non-fungible property.  blog posts:  Harberger Taxes can be Crypto's Sustainable Business Model Non-Skeuomorphic Harberger Properties may not be implementable as ERC721 NFTs    My initial idea had been to use a Soulbound token bound to a smart contract as the base object that can then be harberger-taxed. For that, I had attempted to standardize two EIPs:   EIP-4973: Account-bound Tokens (which has arguably diverged from this idea a lot)  Add EIP-5192 - Minimal Soulbound NFTs by TimDaub \u00b7 Pull Request #5192 \u00b7 ethereum/EIPs \u00b7 GitHub (which may neither be super useful)  Here are a few critical questions that you hopefully deem helpful for further developing the document:  Why mix auction logic into the NFT ownership logic? Auction houses like Zora and OpenSea implement auction houses such that any EIP-721 can move through them for allocating new owners. In fact, it\u2019d be elegant if we could standardize around auctioning scheme interfaces for EIP-721. It seems unnecessary to conflate Harberger tax auctioning and NFT logic in one contract, as you suggest using Solidity inheritance. Ownership is a preexisting topic defined outside of Ethereum or Solidity. Some say Ownership is the bucket of rights, permissions, and license opportunities that make a property ownable. E.g., there\u2019s a difference between possessing and owning: As EIP-5320 introduces possession-based Harberger tax interest to users, what should function ownerOf(...) return? The collection\u2019s address or that of the \u201cNFT owner\u201d? I\u2019d argue an Harberger-taxed property isn\u2019t truly owned by a user but by the taxing contract (which has the right to foreclose when taxes aren\u2019t paid). When can transfer functions of EIP-721 be called? When do they throw? I assume there is a connection between paying taxes and being able to call those functions? As the variability and connection of tax rates to turnover rates seem to be fundamental (at least Radical Markets and Anthony Lee Zhang say so): What made you decide not to include them in the specification? E.g. a view function returning the current tax rate or a function to set a tax rate. Also: Do all items have the same tax rate? E.g. how would a Harberger tax possessor know what taxes are necessary to be paid at time t?  Regarding building a Harberger property contract, I\u2019ve found this EIP very interesting: EIP-4907: Rental NFT, ERC-721 User And Expires Extension It would allow building an auction house that treats the Harberger property possessor to be the user and the taxation authority to be the NFT owner. ",
                    "links": [
                        "https://timdaub.github.io/2022/03/28/harberger-tax-can-cryptos-sustainable-business-model/",
                        "https://timdaub.github.io/2022/02/19/non-skeuomorphic-harberger-properties-erc721-nfts/",
                        "https://eips.ethereum.org/EIPS/eip-4973",
                        "https://github.com/ethereum/EIPs/pull/5192",
                        "https://eips.ethereum.org/EIPS/eip-4907"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party extending to proposal",
                        "3rd party or author wants to collaborate on proposal"
                    ],
                    "Sentiment": 5.2124368686868685
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/will-holley",
                    "index": "3",
                    "likes": "1",
                    "time": "25/07/2022-12:54:34",
                    "content": "Several of us, including Tim, are working towards this HT token standards over at https://partialcommonownership.com/.  Our next community meeting is this Wednesday; it would be great for you to attend. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.333333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "4",
                    "likes": "0",
                    "time": "31/07/2022-07:11:10",
                    "content": "One could imagine a mechanism for depositing ETH into some contract and then having multiple NFTs pull from that. This would allow someone to put say 10 ETH into a contract that is used to pay taxes on a hundreds of NFTs until the pot ran out. The owner then wouldn\u2019t need to constantly top up each individual property all of the time, but instead just top up their funding source account. Even better would be to use approvals and disallow ETH (WETH can be used instead).  This way the owner can just approve the NFT to draw on their TOK as necessary, so as long as they have TOK in their account they can pay taxes as they are collected. Already addressed in the rationale, good job! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.453125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "5",
                    "likes": "0",
                    "time": "31/07/2022-07:20:28",
                    "content": " Instead of doing this, buy could have simply accepted the valuation of the item as the buy price. This, however, has frontrunning concerns, as the current owner can frontrun and increase the valuation.  It seems like this could be avoided by having a time delay on valuation changes.  When changeValuation is called, it wouldn\u2019t take effect for n blocks, thus preventing the seller from frontrunning the purchase.  This does make the collect function a bit more complex, but I don\u2019t think it would be too bad. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "6",
                    "likes": "0",
                    "time": "02/08/2022-06:09:15",
                    "content": "Thank you for this proposal, we needed a standard like this a while ago, and will still need it for several future projects. We implemented Harberger Tax for our collaborative pixel canvas TheSpace.Game, and it has been played by several thousands of users. Here are some of my thoughts regarding the proposal based on that experience. Offer or buy When there is competition, buying a token is not guaranteed since only the first one will acquire it. We implemented an offer logic (it\u2019s called \u201cbid\u201d since it\u2019s an auction): the bidder agrees to pay the current valuation as long as it is lower than the bid price. In this way, there is no racing condition and no front runs. Prepaid tax or tax allowance Prepaid tax is definitely a clearer logic. But with tax allowance, users need fewer ERC20 tokens to start playing the game, which turned out to be important in onboarding users for us. Tax allowance needs to be combined with a mint tax mechanism, so users are discouraged to repeat the following: \u201cbuy at a low price \u2192 increase price \u2192 default / burnt \u2192 mint again at a low price\u201d. Using tax allowance also means tax needs to be collected frequently. We opened up the tax collection function for anyone to call, and among the players emerged a role called \u201ctax collectors\u201d, who volunteer to collect tax and have become part of the game. Also in our case, taxes and funds per token are not possible since the mental complexity it brings discourages users from playing the game. I believe the choice of tax collection method should be left to the implementation of the contract. ",
                    "links": [
                        "https://thespace.game/"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.85
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/mdnorman",
                    "index": "7",
                    "likes": "1",
                    "time": "03/08/2022-11:03:32",
                    "content": "since there\u2019s no \u201ctax period\u201d, it\u2019s hard to know when taxes must be paid for someone who owns this token. I was working with CityDAO on this a proposal for using Harberger taxes on a parcel of land, and one of the things that folks need to know is when the collection period is. You don\u2019t want to make it a single date because then folks will try to game the system, and you don\u2019t want to make it \u201call year long\u201d because you don\u2019t know when it will actually be assessed. I wrote up quite a bit of detail here if you want to take a look. It may inform this EIP in some ways to make tax collection more standardized. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.7369047619047615
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/JasoonS",
                    "index": "8",
                    "likes": "1",
                    "time": "03/08/2022-11:08:34",
                    "content": "Cool to see this topic come up again! We implemented harberger tax contracts first at wildcards[dot]world (sorry - unable to share more than two links) where users could share deposits between their harberger NFTs, and the harberger tax of those NFTs could go to multiple different beneficiaries. (Hence it is \u201cscalable\u201d for users to own multiple NFTs that share a deposit and fund multiple beneficiaries). We re-used these contracts for a variety of hackathons and experiments over the years. I gave a presentation on this a while ago which can be found here: Mechanisms for Scalable Harberger Tax Smart Contracts: Wilcards GitxChange Workshop - YouTube and here is the slideshow: Harberger Tax Contract Overview.pdf The contracts are on github at wildcards-world/contracts, which might be an interesting reference too. Quick thoughts:     TimDaub:  Why mix auction logic into the NFT ownership logic?   At wildcards we always used a \u2018Steward\u2019 contract that acted as an NFT operator that managed the harberger tax side of things.     TimDaub:  When can transfer functions of EIP-721 be called? When do they throw? I assume there is a connection between paying taxes and being able to call those functions?   Lots of thought needed here. Lots of trickery can happen if users don\u2019t understand this. Also might depend on the use case.     TimDaub:  a view function returning the current tax rate or a function to set a tax rate   Yes, this is essential IMO. In wildcards as a case study each NFT has a different rate.     TimDaub:  It would allow building an auction house that treats the Harberger property possessor to be the user and the taxation authority to be the NFT owner.   I think this makes sense, but if it is possible for the NFT to ever be withdrawn from the taxation authority, it kind of defeats the point (although there are likely lots of fun mechanisms that could use this). There are so different variations you can make to harberger tax. For example, realitycards[dot]io have their own variation on harberger tax. So I think this EIP should aim to be high level enough to accommodate future variations and explorations. ",
                    "links": [
                        "https://github.com/ethereum/EIPs/files/9244225/Harberger.Tax.Contract.Overview.pdf"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.768292124542125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "9",
                    "likes": "1",
                    "time": "04/08/2022-00:09:24",
                    "content": "    mdnorman:  since there\u2019s no \u201ctax period\u201d, it\u2019s hard to know when taxes must be paid for someone who owns this token.   It seems to me that the concept of \u201ctax period\u201d is not needed, since the calculation of tax obligation should be continuous (or in practice, with 1 block as the calculation period).  Whether using prepaid tax or tax allowance, tax collection can be triggered at any time, including but not limited to ownership and price change. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.3601190476190474
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/will-holley",
                    "index": "10",
                    "likes": "1",
                    "time": "04/08/2022-00:16:44",
                    "content": "This depends on whether you\u2019re using a deposit or non-deposit model to pay the taxes[1].  In the case of a deposit, there will be a tax period, the foreclosure time of which is easily calculable (see example here). Footnotes  There is an inherent tradeoff between requiring the leasor to deposit funds and the risk that the leasor does not make a deposit, does not have the funds when collection is required, and the collector loses out on her tax revenue.  A depreciating license model may be an alternative to this problem.  ",
                    "links": [
                        "https://inequality.stanford.edu/sites/default/files/Zhang-paper.pdf"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 3.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "11",
                    "likes": "1",
                    "time": "04/08/2022-04:36:09",
                    "content": "    JasoonS:  When can transfer functions of EIP-721 be called? When do they throw? I assume there is a connection between paying taxes and being able to call those functions?   I think a broader issue related is that \u201ctransfer\u201d in the context of Harberger Tax should be different from that in ERC721. ERC721 is designed for private ownership, while Harberger Tax is designed for partial common ownership. Ownership under Harberger Tax corresponds to tax obligation, so transferring token is also transferring tax obligation. This can be used as a form of attack, where the attacker set the price very high and then transfer it to the victim. (In the case where tax is prepaid/deposited and allocated for each token, it can be mitigated by clearing deposits of all tokens I do not own, but it can still cause unwanted consequences) In our case, we automatically set the token price to 0 when a transfer is triggered. \u201cTransfer\u201d thus still follows the continuous auction logic of Harberger Tax, where the owner set the price to 0 then the receiver gets it for free. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.166500000000001
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "12",
                    "likes": "1",
                    "time": "04/08/2022-07:20:22",
                    "content": "    will-holley:  A depreciating license model may be an alternative to this problem.   This is a clever solution, and I generally like it.  Can you draft up a simple example (Alice mints token, sells to Bob who values it at some price, then a year later Carol buys it)?  I\u2019m particularly curious how valuation changes are handled.  When I go through the construction in my head, I end up with no change in capital efficiency, just a change in mechanics and who has to escrow the money (the minter vs the renter). ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.116666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/MicahZoltu",
                    "index": "13",
                    "likes": "1",
                    "time": "04/08/2022-07:22:49",
                    "content": "    guoliu:  Ownership under Harberger Tax corresponds to tax obligation, so transferring token is also transferring tax obligation. This can be used as a form of attack, where the attacker set the price very high and then transfer it to the victim. (In the case where tax is prepaid/deposited and allocated for each token, it can be mitigated by clearing deposits of all tokens I do not own, but it can still cause unwanted consequences)   If the tax is pre-paid in escrow, transferring it wouldn\u2019t do you any good because either there is a requirement for the asset to always remain funded, or the valuation would immediately go to 0 when the escrowed funds are cleared out so no taxese are due.  There is no way to force someone else to pay for something in crypto as users have to sign any asset transfer. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.4079999999999995
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/JasoonS",
                    "index": "14",
                    "likes": "0",
                    "time": "04/08/2022-07:45:18",
                    "content": "    guoliu:  In our case, we automatically set the token price to 0 when a transfer is triggered. \u201cTransfer\u201d thus still follows the continuous auction logic of Harberger Tax, where the owner set the price to 0 then the receiver gets it for free.   That is the same as giving away the NFT, since anyone could claim it for zero too (this sounds undesirable for almost all use cases). There could be a \u201capproveReceipt\u201d function of sorts that allows a recipient to add deposit+chose price before a token gets sent. In wildcards we have a gift function that requires the sender to give some time-period amount of deposit along with the NFT so that it doesn\u2019t auto foreclose as soon as it is sent (it is sort of \u2018gift of giving\u2019 function). Additionally, this means it is less likely to be a predatory attack on the rest of the users deposit given the minimum time is long enough and participants are relatively active. Once again, I think this kind of mechanism is project dependant. In any case, I don\u2019t think one rule fits all here, and I think many projects may decide to completely remove the transfer function from erc721 standard (ie, a new type of token that isn\u2019t erc721 compliant). ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.577651515151515
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "15",
                    "likes": "1",
                    "time": "04/08/2022-08:40:41",
                    "content": "    mdnorman:  You don\u2019t want to make it a single date because then folks will try to game the system, and you don\u2019t want to make it \u201call year long\u201d because you don\u2019t know when it will actually be assessed.   In libharberger, a tax period is the block time of Ethereum. IMO this will always work considering that the percentage can be adjusted to low or high depending on the frequency of new blocks being mined. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.854112554112554
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "16",
                    "likes": "1",
                    "time": "04/08/2022-08:59:54",
                    "content": "    guoliu:  Ownership under Harberger Tax corresponds to tax obligation, so transferring token is also transferring tax obligation. This can be used as a form of attack, where the attacker set the price very high and then transfer it to the victim. (In the case where tax is prepaid/deposited and allocated for each token, it can be mitigated by clearing deposits of all tokens I do not own, but it can still cause unwanted consequences)   I actually like this model as it may simplify implementation with deprecating licenses. Essentially, to start possessing a Harberger Token, one attaches ETH that then gets continuously taxed until the ETH amount is zero.  By sending more ETH, the token\u2019s self-assessed value goes up By letting ETH get taxed, the token\u2019s self-assessed value goes down By transferring the token to another account, the token\u2019s ETH credit is transferred to that account too In case a token has an ETH balance of zero, anyone can buy it directly from the tax authority  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.173402777777778
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "17",
                    "likes": "0",
                    "time": "04/08/2022-09:03:48",
                    "content": "    will-holley:  (see example here ).   I know I\u2019ve been beating this dead horse for too long but isn\u2019t this function vulnerable to attacks? Integer Division - Ethereum Smart Contract Best Practices ",
                    "links": [
                        "https://consensys.github.io/smart-contract-best-practices/development-recommendations/solidity-specific/integer-division/"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.761904761904762
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "18",
                    "likes": "1",
                    "time": "06/08/2022-22:32:19",
                    "content": "    TimDaub:  Essentially, to start possessing a Harberger Token, one attaches ETH that then gets continuously taxed until the ETH amount is zero.   It is a neat mental model. Each token has its own deposit account, which does not change with ownership transfer, but determines if current ownership should be revoked. One implication is that one cannot get back the deposit after losing ownership, whether intentionally or bid by another buyer. And there would be one strategy to buy in tokens with a higher deposit balance. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "19",
                    "likes": "0",
                    "time": "06/08/2022-22:38:38",
                    "content": "    MicahZoltu:  There is no way to force someone else to pay for something in crypto as users have to sign any asset transfer.   It is true with the following implementation:  tax is pre-paid pre-paid tax is per token after ownership changes, the balance in pre-paid tax is returned to the previous owner  But in other implementations, transferring tokens can still drain tax (pre-paid or allowance) unintentionally. @TimDaub 's idea above should also be able to avoid such tax drain since the tax account is only attached to the token and detached from the payer address. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.348958333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/will-holley",
                    "index": "20",
                    "likes": "0",
                    "time": "10/08/2022-16:33:45",
                    "content": "When using a deposit model, the leaser should be remitted their deposit, post tax-collection, on lease takeover or foreclosure, unless they are actively transferring their lease, in which case the deposit should also transfer. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.333333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/will-holley",
                    "index": "21",
                    "likes": "0",
                    "time": "10/08/2022-16:38:44",
                    "content": "Can you specify the type of attack your thinking of?  I have encountered overflow issues with the division here when fuzzing during testing: partial-common-ownership/Taxation.sol at 3e7713bc60b6bb2e103320036ec5aeaaaceb7d2b \u00b7 721labs/partial-common-ownership \u00b7 GitHub.  I\u2019ve looked into solving it by switching over to DSMath but haven\u2019t spent much time on the implementation. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "22",
                    "likes": "0",
                    "time": "10/08/2022-17:07:20",
                    "content": "    will-holley:  I\u2019ve looked into solving it by switching over to DSMath but haven\u2019t spent much time on the implementation.   I\u2019m confident that this implementation addresses it properly: libharberger/Harberger.sol at master \u00b7 rugpullindex/libharberger \u00b7 GitHub (test: libharberger/Harberger.t.sol at master \u00b7 rugpullindex/libharberger \u00b7 GitHub)     will-holley:  Can you specify the type of attack your thinking of?   Unfortunately, I don\u2019t have enough time to plan a concrete attack. I think it\u2019d be where you try to, e.g., divide such that the outcome is close to 0.5, and then you can make something go to zero because of Solidity\u2019s integer flooring. Not suggesting that this CAN actually happen - but I think striving for perfect accounting precision must be the goal. From my understanding scaling the calculation\u2019s numbers up using the parts-per concept is sufficient. Cool that you\u2019ve fuzzed this! Should look into it! ",
                    "links": [
                        "https://github.com/rugpullindex/libharberger/blob/master/src/Harberger.t.sol#L143-L147"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.816761363636363
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "23",
                    "likes": "0",
                    "time": "11/08/2022-20:03:02",
                    "content": " I wanted to make another comment on the original submission of EIP-5320. It features 6 different functions to interact financially with the Harberger property. A recent implementation of depreciating licenses I did just necessitates two (function assess and function fiscal): hdmap/hdmap.sol at 640ebbe5b5daaf94225224611a974dd97143f619 \u00b7 rugpullindex/hdmap \u00b7 GitHub   function assess can increase and decrease taxes and allows a buyer to fulfill their order. Taxes are calculated whenever it\u2019s run.  function fiscal returns the property\u2019s new price and the amount of taxes due (which will go into effect the next time assess is called.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.275974025974026
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "24",
                    "likes": "0",
                    "time": "12/08/2022-07:41:05",
                    "content": "A decentralized tax collector? Can we get a decentralized Roko\u2019s Basilisk too? And of all the taxes, we choose the one that\u2019s incompatible with ownership? Owning things is pretty popular. Much unlike a basilisk. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "25",
                    "likes": "1",
                    "time": "12/08/2022-08:47:54",
                    "content": "please comment here when you have constructive things to say about the document. Please don\u2019t comment here if your intention is to bash other people\u2019s work. Thanks. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.1875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "26",
                    "likes": "0",
                    "time": "12/08/2022-09:13:49",
                    "content": "Assume my pronouns, not my intentions. My suggestion is to reconsider the roadmap. I haven\u2019t so much as glanced at your work. But I reserve the right to criticize EIP 1057, 5320, and others. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.214285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "27",
                    "likes": "0",
                    "time": "12/08/2022-10:09:20",
                    "content": "Look, if you feel like needing to complain about something, I recommend https://twitter.com. For this forum, you must make a substantiated complaint about the subject matter, e.g., that you don\u2019t like certain things in @green\u2019s PR: Add EIP-5320: Harberger Taxes NFT by greenlucid \u00b7 Pull Request #5320 \u00b7 ethereum/EIPs \u00b7 GitHub Sadly, Glen Weyl has the strength for naming things such that people go crazy about them. Soulbound tokens, next to Harberger taxes is one such example. But in reality and if you look into the source code, this has nothing to do with the taxes that a government collects. Nothing at all. Any marketplace taking a fee e.g. does the exact same thing. So Harberger fees would be the equivalent. But don\u2019t expect us to take your deontic criticism seriously: We\u2019re not working for you, and there is no moral high ground here. The path to being heard is where you make a substantiated argument against the specification on an epistemic basis and not on what \u201cshould be\u201d because you think it\u2019s right. ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/5320"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.646428571428571
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "28",
                    "likes": "1",
                    "time": "12/08/2022-17:49:34",
                    "content": "I\u2019m not even the slightest bit familiar with Harberger taxes so please forgive any stupid questions.  Is it important to differentiate between Harberger transfers and non-Harberger transfers? As I understand the document, a Transfer event will be emitted for every TokenBought event. The event names are somewhat inconsistent. TokenBought has token but TaxesPaid does not, even though they are both events applicable to a single token. Should increasing the valuation require some kind of back-taxes? Seems like an owner could always frontrun buy attempts by increasing the valuation by one wei. Would a taxFor(uint256 tokenId, uint256 valuation, uint256 duration) returns (uint256) function make sense, or are there reasonable tax rate schemes that would break with that signature?  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.586309523809524
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/green",
                    "index": "29",
                    "likes": "1",
                    "time": "14/08/2022-12:43:40",
                    "content": "Hey, thanks everyone for the interest in this EIP. I\u2019m going to try to shed some light in the rationales of why some features weren\u2019t put into the standard draft:  owner vs leasor Ownership is understood \u201cin the context of the contract\u201d. The contract (or the collector) are known to be the ultimate \u201cowners\u201d of the item. Also, owner is a standard label. Changing owner to leasor would make no functional changes. There as discussion by Tim on what to do about ERC-721 functions, should they revert? It would depend on the implementation, but the implementer is free to separate the taxpayer from the owner of the item as separate parties. Then, owner-exclusive functions can be called by owner, ERC-721 transfers don\u2019t need to revert (because ownership is not a liability), and leasor remains the one paying the cost. This consideration to implementers can be added to the EIP.  views and setters for \u201ctax rate\u201d Flat tax rates aren\u2019t the only way to do taxes. For example, there\u2019s progressive taxes. Or, you could create address dependent systems, for example, giving a lower rate to addresses registered in Proof of Humanity, or owning some NFT that makes you eligible for a discount. If a flat tax rate interface was desirable, it should be extended from this EIP-5320.  on calculating taxes The standard doesn\u2019t indicate how should they be calculated. In our PoC implementation we used timestamps, and calculated the tax rate over seconds. But taxes could be calculated by block counts, periods, or something else. It\u2019s up to the implementation. There a consideration to make here. If seconds are being used and the ERC-20 token to pay taxes with has \u201clow precision\u201d, the valuation is small, or the unpaid period is small, a naive implementation could have a divisor too large and turn the owed taxes for the collect call to zero.  security concerns over this implementation In this Proof of Humanity proposal I outlined a few caveats:  Excluding collect, interactions must revert if the funds available to pay for the taxes on the seat are not enough to go over the cooldown period.  Then, I proposed a cooldown period of 3 months. What this means, is that if you were to acquire a token, you\u2019d have to prepay taxes for 3 months. If something similar to this isn\u2019t done, someone may acquire the token at a high price, do a damaging action, and then revoke it in some way, paying close to no taxes in the process. Actions that wouldn\u2019t be allowed (or, they could be allowed on the condition of forfeiting a portion of prepaid taxes):  revoking (or, if allowed, the prepaid taxes from timestamp to timestamp + period are not reimbursed) defunding (likewise, defunding more than the taxes to complete the period is not allowed) changing valuation (changing to something high is disallowed if prepaid taxes aren\u2019t enough to cover the period. changing to something lower isn\u2019t allowed during the period)   prepaid taxes vs allowance Anyhow, I believe this is standard level worthy. Keeping it up to the implementer would make the main functions that are relevant to the standard unable to be standarized. So the discussion is relevant to the ERC. I\u2019m divided between these two.  how to allowance-based taxes If taxes are not pre-paid, then the leasor makes an allowance, and a function is open for everyone to collect taxes. If there\u2019s not enough allowance or balance to pay the pending taxes, the token is revoked. Considerations:  either collector or a third party need to manually claim the pending taxes. on the implementation level, a compensation for the gas expenses of collecting the taxes could be provided, for example, by sending a portion of the claimed taxes to the one that calls the function. leasor can default on the latest unpaid taxes at any time. no longer is it possible to force them to prepay a given amount, so \u201cflash buy\u201d attacks are possible. you can still impede the flash-buyer leasor to lower the valuation, but you cannot force them to sell the token for a certain amount.  flash-buyer defaults on the taxes and loses the token. the loss will be, at the very least, equal to how much they paid for the item. flash-buyer makes a contract to effectively sell the token for less than the valuation (the contract buys at current price, they reimburse the difference to new leasor). The Harberger Tax contract can still forbid lowering the valuation, so leasors that acquire the item through this scheme could have to endure high taxes for a minimum period.     how to prepaid taxes (This flow doesn\u2019t need to be followed exactly, this is just an indication on how could it work) When you buy a token, you also prepay a certain amount in taxes. You may choose this amount, and the contract may enforce a minimum. A collect function is still there so that collector can realize partial tax payments, but no longer has to be called continuously to defend against defaulting. Only once, if there are not enough prepaid taxes to continue supporting the token. If an action occurs that makes the previous leasor stop paying taxes, the remainder of prepaid taxes, if it exists, is reimbursed to the leasor. Considerations:  It\u2019s not as capital efficient Doesn\u2019t require collecting taxes manually and continuously to mitigate the loss of the leasor defaulting on the taxes Prepaying taxes allows the contract to enforce leasors to prepay a minimum period. This makes flash-buy attacks more expensive, because the attacker would need to pay for the token to the previous leasor, plus a minimum period to the collector.   miscellaneous consideration for implementers To increase the cost of attacks (such as flash-buy), or acquire a compensation, a fee could be included on every buy transaction, which could substitute the \u201cminimum period\u201d concept. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.337641047477113
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "30",
                    "likes": "0",
                    "time": "14/08/2022-23:05:38",
                    "content": "Are you kidding? Glen Weyl literally wrote something called \u201cProperty Is Only Another Name for Monopoly\u201d. I\u2019ve had that bookmarked for over a year. Why you think I might be triggered by the word \u201ctax\u201d but somehow simultaneously okay with the outright abolition of private property, I do not know. Harberger causes forced sales as if everyone is constantly in bankruptcy proceedings. It\u2019s deranged. It would have forced Elon Musk to sell SpaceX to Lockheed and Boeing. Perhaps that is why you like it.  there is no moral high ground here  Against standardizing communism? Au contraire. Build your communist utopia on Ethereum, by all means. But I will always oppose its standardization. If for no other reason than it sends a terrible message to the youth. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.56125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "32",
                    "likes": "1",
                    "time": "15/08/2022-05:34:42",
                    "content": "    esaulpaugh:  Harberger causes forced sales as if everyone is constantly in bankruptcy proceedings. It\u2019s deranged.   It is indeed ridiculous to abolish private property. But there are many cases where properties are publicly owned. In the physical world, there are examples such as the usage of the radio spectrum, and the land of national parks. In the digital world, there is user attention (or ad spaces), since it is derived from the collective contribution of the users and developers and therefore should be owned collectively. These are the cases where partial common ownership is applicable, not the cases where properties should be privately owned. These types of resources/properties are usually allocated either by the government in a centralized and inefficient way or privatized by companies in an exploitive manner. Partial common ownership is useful since it provides a decentralized and market-driven alternative. So standardizing partial common ownership is not about building a communist utopia, it\u2019s about avoiding the need of having a communist government by extending the scope of the market. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.643518518518518
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "33",
                    "likes": "0",
                    "time": "15/08/2022-07:44:43",
                    "content": "Please name one country where private property exists. According to the economists I spoke, if the state can foreclose property (e.g. given tax obligation), it\u2019s not truly private. That\u2019s the academic definition. Since you mentioned US-american names, the USA also doesn\u2019t implement true private property. So technically nobody wants to abolish anything - as what you\u2019re talking about doesn\u2019t exist in reality. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.392857142857142
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/will-holley",
                    "index": "34",
                    "likes": "1",
                    "time": "15/08/2022-13:33:37",
                    "content": "Partial Common Ownership is an applicable property scheme for assets that derive their value, at least partially, from network effects. The classic Georgian example is land. A conceptual separation of network effects from the owner\u2019s capital and labor investments is necessary. In doing so, PCO schemes purport to improve the allocative efficiency for investments in these network effects (typically but not limited non-excludable goods), ultimately improving the value of the asset. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.575396825396825
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "35",
                    "likes": "0",
                    "time": "16/08/2022-18:04:55",
                    "content": "But then calling it radical markets is a misnomer. It may be a system of exchange, but a market it is not. And if it were only about things which are already public, then it wouldn\u2019t be radical either. There is a fundamental bait-and-switch with so-called radical so-called markets. Which is kind of par for the course in left economics. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "36",
                    "likes": "0",
                    "time": "16/08/2022-18:10:38",
                    "content": "    will-holley:  applicable property scheme   Indeed, scheme is the correct word. Some should be rejected for having undesirable properties. This is one of those.  allocative efficiency  I don\u2019t think there is allocative efficiency in turning a nascent startup over to the established interests it threatens. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "37",
                    "likes": "0",
                    "time": "16/08/2022-18:20:06",
                    "content": " Agricultural, educational and institutional properties on St Kitts are exempt from property taxes.   technically nobody wants to abolish anything  Is that what Glen Weyl says? And evidence of institutionalized theft isn\u2019t evidence of public ownership. You have the two confused. Lastly, where is the property tax on sports cars? I haven\u2019t gotten any visits from the fuzz lately and I haven\u2019t been paying anything to merely own my ride. Remember when Happy Gilmore\u2019s grandma had to bid on her own house? The only thing worse would be if she were not allowed to bid. That\u2019s Harberger. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.5625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/doyl.io",
                    "index": "38",
                    "likes": "1",
                    "time": "17/08/2022-12:38:37",
                    "content": "Guys, this is a forum for discussing the details of a technical spec.  If you want to discuss the moral or political implications of this ideas, I suggest moving to twitter ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/doyl.io",
                    "index": "39",
                    "likes": "0",
                    "time": "17/08/2022-13:18:13",
                    "content": "I think this would benefit from a view to see the balance of tax prepaid for an item. function fundingFor(uint256 tokenId) external view returns (uint256);  This could also allow real time tax payments.  fundingFor could be calculated as the result of a decreasing linear function which would be updated when the user adds more funds ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "40",
                    "likes": "0",
                    "time": "17/08/2022-16:26:41",
                    "content": "100% agree. I\u2019d appreciate if moral comments would get moderated actually. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/esaulpaugh",
                    "index": "41",
                    "likes": "0",
                    "time": "18/08/2022-06:29:35",
                    "content": "Ride on the peace train; ooh ah ee aah ooh aah. Nothing in this post should be construed as a commercial or promotional message. This message shall not engender feelings of an overly promotional or commerical nature. This post is neither an advertisement nor a promotion. Do not associate this post with its author or any product or service associated with its author. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/green",
                    "index": "42",
                    "likes": "2",
                    "time": "22/08/2022-01:24:56",
                    "content": "I agree, if prepaid taxes become the way to go, this will be included into the standard. @guoliu made some arguments in favor of allowance, so I\u2019m not sure which way should the standard go. I lean towards prepaid taxes. I don\u2019t think the standard should be compatible with both allowance and pre-paid taxes at the same time. The main functions to standardize (buying the tokens, paying taxes, etc) could depend on this, don\u2019t they? Although, if the interface could be the same, then the allowance vs. pre-paid taxes could just be left as security considerations per implementation. PD: After a second read, you were indeed proposing this function for both pre-paid and real time. So, anyhow, this view should be included. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.058333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guoliu",
                    "index": "43",
                    "likes": "0",
                    "time": "07/09/2022-05:33:14",
                    "content": "It would be ideal to be compatible with both allowance and prepaid taxes. The choice should be left to implementation since it depends on the use case, and the standard should be implementation agnostic. What are the interfaces that cannot be compatible with both routes? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/TimDaub",
                    "index": "44",
                    "likes": "0",
                    "time": "09/09/2022-13:04:49",
                    "content": "In a recent tweet storm, I document the mechanic behind Harberger dmap: https://twitter.com/glenweyl/status/1568223395543670784 ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.0
                }
            ]
        }
    ],
    "group_index": "8"
}