{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/ercref-a-place-to-share-erc-implementations/11318",
            "title": "ERCRef, a place to share ERC implementations ",
            "index": 11318,
            "category": [
                "EIPs"
            ],
            "tags": [
                "erc",
                "erfref"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "1",
                    "likes": "3",
                    "time": "14/10/2022-14:51:33",
                    "content": "Hi FEM, and friends who author, implement or uses #ERC #EIP standards or write smart contracts, I love to invite you to this new effort I am initiating called #ERCRef to improve interoperability and composibility of #Ethereum application layer repo: GitHub - ercref/contracts: ERC Reference Implementations discord: The goal is to have a repo where people can submit, share, discuss, peer-review various ways to implement an ERC, or different use cases. The contracts repo (GitHub - ercref/contracts: ERC Reference Implementations) hope to be the go-to place where ERC authors and contributors could provide their reference implementations or submit new implementation ideas, and make it useable and shareable. Hope to massively improve ERC authoring expericience and early adoptions. Authors and contributors of each new ERC may choose to share a few RefImpls in that repo. In the near future, we also hope to have a subset inside of that repo to be packaged as NPM packages and maybe ETHPM. Imagine the same as one could import @openzeppelin/contracts, early ERC adoptors / developers and researchers may simply import something like @ercref/erc2135-draft/TicketImplV1.sol. Making it super easy to share and tryout new ERCs. (warning do not use in prod yet unless audited) Ask asked by @mattstam, one may think, the biggest challenge will probably be convincing majority of EIP owners to add their implementation(s) here. How do we plan do do that? My answer to that is; ERC authors doesnt have to put their refimpl here. They could but it\u2019s not a requirement. Also the refimpl doesnt have to come from authors of ERC. As an open source project, anyone could help provide a reference implementations of any ERCs into ERCRef repo. If ERC authors want to get involved, they could help review the proposed refimpl of the ERC they proposed. If some ERC authors don\u2019t want to involve, we could still accept refimpl from anyone by having a peer-review approach. We (ERCref) could have a peer-review kind fo approach to those refimpls proposed by non-authors when authors didn\u2019t want to be involve. At the end of day, ERCs are definition of interfaces and behaviors. By definition they are meant to be implemented any different people differently. They are meanted to be adopted. Hence regardless of whether an ERC author of a particular ERC puts their own refimpl somewhere, they still expect there is more implementations of the ERC they propose, so I think they will also happily see people implementing their ERCs ",
                    "links": [
                        "https://github.com/ercref/contracts"
                    ],
                    "GPT-summary": "The author of the post is introducing a new project called ERCRef, which aims to improve the interoperability and composability of Ethereum application layer repo. The project invites people to submit, share, discuss, and peer-review various ways to implement an ERC or different use cases. The post also addresses potential challenges and solutions for convincing EIP owners to add their implementation(s) to the ERCRef repo. The post welcomes feedback, questions, and collaboration from third parties.",
                    "GPT-proposal-categories": [
                        "Interoperability and Scaleability",
                        "Smart contract updates",
                        "Community and engagement",
                        "Token economics",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal"
                    ],
                    "Sentiment": 5.980198813532147
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "2",
                    "likes": "2",
                    "time": "14/10/2022-21:43:34",
                    "content": "Love the idea. I\u2019d be willing to help with some initial interfaces for common EIPs. I\u2019ll say that these can\u2019t be used as actual reference implementations without some changes to the ways EIPs work. These can absolutely mirror the ref impls though. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal",
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.541666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/xinbenlv",
                    "index": "3",
                    "likes": "0",
                    "time": "15/10/2022-01:15:06",
                    "content": "Awesome, thank you @Pandapip1 looking forward to your master piece of work ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 10.0
                }
            ]
        }
    ],
    "group_index": "165"
}