{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/pre-compile-for-bls/3973",
            "title": "Pre-compile for BLS ",
            "index": 3973,
            "category": [
                "EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/greg",
                    "index": "1",
                    "likes": "0",
                    "time": "30/01/2020-17:35:40",
                    "content": "Currently the EVM has no support for BLS signatures, there was a proposed eip although I don\u2019t believe it made it in (or if it will make it in). Having the ability to perform on-chain BLS operations can be quite useful, especially since these curves are becoming increasingly popular in the rest of the blockchain world. More importantly, this would be an immense benefit for eth2.0. Currently, the eth2.0 deposit contract is able to verify a deposit is correct, except for the actual signature. This means that if a user submits an invalid deposit they risk losing their 32 eth deposit. With a BLS pre-compile we could verify the deposits on-chain before the deposit occurs so users to do not burn there funds. If this is somehing that would be considered I\u2019m happy to draft the EIP ASAP. If there are suggested additions to this EIP (to make it more generalized, like the linked EIP) than I would also be happy to do that as well. Counter argument: People will use eth2 software to ensure it is formed correctly. Response: I\u2019d rather be safe than sorry. We don\u2019t need to do another bailout. ",
                    "links": [],
                    "GPT-summary": "The author proposes the implementation of a BLS pre-compile for the EVM to enable on-chain BLS operations, which would be beneficial for eth2.0. The proposal aims to verify deposits on-chain before they occur to prevent users from losing their funds. The post includes a counter-argument and a response. A third party provides constructive criticism and asks questions about the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "Token economics",
                        "Privacy, Security and risk management",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 6.515625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/guthlStarkware",
                    "index": "2",
                    "likes": "0",
                    "time": "30/01/2020-18:38:44",
                    "content": "Why cannot you do it with the existing precompile?    GitHub    kfichter/solidity-bls BLS threshold signature verification in Solidity. Contribute to kfichter/solidity-bls development by creating an account on GitHub.       ",
                    "links": [
                        "https://github.com/kfichter/solidity-bls"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "3rd party auditing and reviewing proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/greg",
                    "index": "3",
                    "likes": "0",
                    "time": "30/01/2020-20:55:13",
                    "content": "I believe the cost of performing this verification is inherently expensive. Do you know the gas costs? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 2.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/ralexstokes",
                    "index": "4",
                    "likes": "0",
                    "time": "18/02/2020-20:53:48",
                    "content": "This precompile will add support for the BLS12-381 curve (https://electriccoin.co/blog/new-snark-curve/) we are using in eth2.0. We do happen to be using the BLS signature scheme over this curve and most of the relevant pieces (except \u201chash to curve\u201d) could be done in a smart contract w/ the appropriate precompiles for the BLS12-381 curve ops. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None",
                        "None"
                    ],
                    "Sentiment": 7.017857142857142
                }
            ]
        }
    ],
    "group_index": "996"
}