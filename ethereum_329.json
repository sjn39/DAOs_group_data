{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/security-implications-of-storing-a-users-signature-publicly/12722",
            "title": "Security implications of storing a user's signature publicly ",
            "index": 12722,
            "category": [],
            "tags": [
                "signatures"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/elmariachi",
                    "index": "1",
                    "likes": "2",
                    "time": "27/01/2023-09:52:29",
                    "content": "Many of us are requesting or using user signatures for various reasons, e.g. to log them in (siwe), to prove they understood terms and conditions, to have another party grant them access to something (erc20 permits) etc. Question is: how safe is it, depending on the individual usecase, to store these signatures on a public storage layer, e.g. ipfs, along with the message the user has signed? My instant answer is the obvious one: it\u2019s safe since you cannot derive the private key from a message and a signature. It actually must be safe to do so, since eth transactions are nothing more than signed messages, payload and sig are public. For more specific usecases, e.g accepting the terms of a certain action (an individual \u201cyes I want to mint exactly this NFT#17 on this contract\u201d signoff) I think one at least should take replay attack vectors into account, adding the chain id and ideally a unique domain to the message payload. A verifier must make sure that all signed parameters match the expected context it\u2019s verifying for (notably the chain id so you can\u2019t reuse a signature for a replay on another chain) I\u2019m still wondering if some of you have an example where it at first seems pretty safe to store a signature publicly but you found an attack that let a malicious party use the signature in a way that wasn\u2019t intended. Reusing Siwe signatures just enters my mind, they can actually be used to login the user into several systems if they accept or forget to check its nonce or domain. Happy to hear your opinions! Oh, and more technically: atm we\u2019re talking about Ecdsa signatures that rely on trapdoors that are safe on current hardware but potentially can be reversed using Shor\u2019s algorithm on quantum hardware. Are there signature schemes or key exchanges that potentially already are considered quantum safe and allow saving / using the signature on the long term? ",
                    "links": [],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.974303135888501
                }
            ]
        }
    ],
    "group_index": "329"
}