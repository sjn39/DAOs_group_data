{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/from-a-data-structure-view-can-we-classify-verkle-tree-as-an-augmented-finger-tree-with-kate-commitments-as-the-augmented-fn/6590",
            "title": "From a data structure view, can we classify Verkle Tree as an augmented finger tree with Kate Commitments as the augmented fn? ",
            "index": 6590,
            "category": [],
            "tags": [
                "verkle-trees",
                "kate-commitments"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Shymaa-Arafat",
                    "index": "1",
                    "likes": "0",
                    "time": "03/07/2021-05:36:34",
                    "content": "I\u2019m trying to write something about Verkle Trees from a different point of view, so pls tell me if this direction of thinking is wrong as a start \u2026 Can Verkle Trees be viewed from the data structure community as an augmented finger tree \u201cA finger tree gives amortized constant time access to the \u201cfingers\u201d (leaves) of the tree, which is where data is stored\u201d  en.m.wikipedia.org    Finger tree In computer science, a finger tree is a purely functional data structure that can be used to efficiently implement other functional data structures.  A finger tree gives amortized constant time access to the \"fingers\" (leaves) of the tree, which is where data is stored, and concatenation and splitting logarithmic time in the size of the smaller piece. It also stores in each internal node the result of applying some associative operation to its descendants.  This \"summary\" data stored in the inter...           with Kate Commitments as the associative operation? \u201cIt also stores in each internal node the result of applying some associative operation to its descendants.\u201d Or this is not quite accurate??? . I mean approaching the problem from the idea that luckily we can define what we call \u201c+\u201d operation on Elliptic Curves that happens to be linear& associative, and ECC is something we trust anyway. Oh then, this brings to mind another question: Does this mean Blake2b/Keccak256/\u2026 are not going to be used anymore??? ",
                    "links": [
                        "https://en.m.wikipedia.org/wiki/Finger_tree",
                        "https://www.youtube.com/watch?v=xVka6z1hu-I"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.892006802721088
                }
            ]
        }
    ],
    "group_index": "1375"
}