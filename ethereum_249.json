{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/web3authn-idea-use-webauthn-as-a-web3-wallet/12013",
            "title": "Web3Authn idea - use webauthn as a web3 wallet ",
            "index": 12013,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "authentication"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/vorcigernix",
                    "index": "1",
                    "likes": "0",
                    "time": "04/12/2022-12:00:33",
                    "content": "I accidentally discovered the WebAuthn protocol and I can\u2019t stop wondering why we don\u2019t use the standard, browser supported solution instead of wallets. There is an alternative description of how webauthn works. There are two things that need to be solved on top of an existing protocol to serve the web3 use case. First is accepting a transaction, my idea in a picture attached is that every transaction would cause re-authentication and as an app developer you will be responsible to explain what the user is signing. I understand that this could be problematic from the security perspective, but I\u2019d argue that most people sign the gibberish anyway and the current solution is wrong anyway. Second problem to solve is that the registration is scoped. I propose to have a simple federation server (could be ENS) that will serve as a registry, redirecting the authentication to the server where the user is registered. This is an MVP version, later we can figure out some sync mechanism - after all the private key stays on the client device, so the registration is not really security sensitive (IMO). Please see the (super simplified) illustration that can make my idea more clear.  web3authn4690\u00d73652 231 KB  ",
                    "links": [
                        "https://webauthn.guide/",
                        "https://ethereum-magicians.org/uploads/default/original/2X/9/9fa4f9852178027a5894bf9679a9d8c19d129085.png"
                    ],
                    "GPT-summary": "The author proposes using the WebAuthn protocol as a web3 wallet. They suggest solving two problems to serve the web3 use case: accepting a transaction and scoping registration. The author provides a simplified illustration to explain their idea. A 3rd party could give constructive criticism of the proposal or ask questions about it.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.553921568627452
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vorcigernix",
                    "index": "2",
                    "likes": "1",
                    "time": "04/12/2022-16:01:21",
                    "content": "One thing to add, problem #3: There is no recovery key or anything like that. I have no idea how to solve it, webauthn is designed in a way that kind of removes our ability to reverse create a recovery from the private key or something like that. Maybe something like a weak multisig like smart contract can help, but my level of expertise is limiting my thoughts in the area. Will dig deeper though. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None",
                        "None",
                        "None"
                    ],
                    "Sentiment": 5.366071428571429
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vaumoney",
                    "index": "3",
                    "likes": "0",
                    "time": "05/12/2022-19:40:44",
                    "content": "isn\u2019t --nat=extip critically-necessary for a proper content-security allow-list (i.e. to allow _mint by RLP)? I think Authority by consensus can be useful for a forgot pass minter, but I don\u2019t think much else tbf. ",
                    "links": [
                        "https://github.com/NickCarducci/Nonce-Minter-Bot",
                        "https://ethereum-magicians.org/t/nonce-minter-bot-for-erc20mintable-open-source-wallet-supply-recovery"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.833333333333334
                }
            ]
        }
    ],
    "group_index": "249"
}