{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/batched-meta-transactions-from-multiple-users-is-this-ready-for-an-eip-draft/4613",
            "title": "Batched meta transactions (from multiple users) - Is this ready for an EIP draft? ",
            "index": 4613,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "meta-transactions",
                "erc-20"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "1",
                    "likes": "0",
                    "time": "13/09/2020-20:47:51",
                    "content": "Hi all! I\u2019ve made a proof-of-concept for batched meta transactions (from multiple users): GitHub - defifuture/erc20-batched-meta-transactions: A proof-of-concept for batching meta transactions. The motivation behind this idea is to help reduce the transaction cost for the end user (a meta tx sender). In addition to being used as a standalone solution, batched meta transactions can also work with popular L2 solutions (sidechains, rollups) which require an on-chain deposit transaction before they can be used. I would love to hear your feedback about this proof-of-concept.  Do you think it\u2019s ready to be submitted as the EIP draft? Thanks, Matt ",
                    "links": [
                        "https://ethereum-magicians.org/t/my-topic-is-temporarily-hidden-what-to-do/4641"
                    ],
                    "GPT-summary": "The author of the post has created a proof-of-concept for batched meta transactions and is seeking feedback from the community on whether it is ready to be submitted as an EIP draft. The proposal aims to reduce transaction costs for end-users and can also work with popular L2 solutions. The author is asking for feedback and opinions on the proof-of-concept.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.84375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "2",
                    "likes": "0",
                    "time": "14/09/2020-13:59:14",
                    "content": "Nice work! I think amortizing the intrinsic cost over meta-txs is one of its best use cases. Has this not been included in any prior EIP? It might also be useful to see how Gnosis Safe performs meta-txs. I had the understanding they were already doing this (or capable of it). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 7.291666666666666
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "3",
                    "likes": "0",
                    "time": "14/09/2020-16:16:54",
                    "content": "Hey Matt, thanks for the feedback!  I haven\u2019t seen batched meta transactions (from various senders) in any EIP so far. The closest one is EIP-1776 by Ronan (wighawag), but it is about batching txs/calls of a single user, not batching meta txs of multiple users (it might be the same with Gnosis Safe, but I can\u2019t find the meta tx implementation in their Solidity code on GitHub\u2026). I believe this is because when there was a big hype around meta txs (about a year ago), the gas price was not an issue. So everyone focused on the feature of enabling gasless transactions for users/addresses that don\u2019t hold any Ether. Batching meta txs to lower transaction costs was not that important back then  ",
                    "links": [
                        "https://github.com/gnosis/safe-contracts"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.589285714285714
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "4",
                    "likes": "0",
                    "time": "14/09/2020-17:34:56",
                    "content": "Thanks for looking into that. If this approach hasn\u2019t been documented before, I suppose it makes sense to EIP it. I am on the fence whether this is considered an informational or interface EIP. Although it is specifying an interface, it isn\u2019t really necessary to document on-chain interfaces as EIPs, unless interoperability is desired. In your case, it doesn\u2019t appear to describe how the interface will be used by multiple parties, only the a single relayer and relayer front-end. If this is what you plan to build, I would recommend making an information EIP and focus on explaining how meta-txs can be used to amortize the intrinsic tx gas cost in a general purpose way. You can also skip the EIP and just implement your project. Alternatively, if you hope this interface will be used by some relayer network then it makes sense to write this as an interface EIP. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.148809523809524
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "5",
                    "likes": "0",
                    "time": "14/09/2020-18:12:34",
                    "content": "I see my proposal in the same category as EIP-2612 (the permit() function) - so basically a function that extends the ERC-20 standard. I\u2019m not really sure whether to classify it as an informational EIP or an interface EIP. Regarding how the processMetaBatch() function can be used - it\u2019s in fact agnostic to the usage. It can be used by a single relayer, or by a network of relayers. For smaller dApps I believe a single relayer would suffice, but for bigger dApps (meaning the ones with more traffic) a network of relayers would be needed, so that they can do load balancing and avoid collisions (meta txs with the same nonce). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "3rd party or author is advertising proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.059523809523809
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "6",
                    "likes": "1",
                    "time": "14/09/2020-18:31:12",
                    "content": "Ah, apologies. I had in my head that this was a general proposal, rather than one focused on ERC-20, but as you\u2019ve pointed out you are indeed hoping to extend the ERC-20 interface. In that case, that makes sense to go down the interface EIP route. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 4.736111111111111
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "7",
                    "likes": "1",
                    "time": "20/09/2020-04:38:59",
                    "content": "FYI, I noticed that Discourse was incorrectly hiding some messages in this topic. I have restored them!     My topic is temporarily hidden - what to do?       Hi! Probably the Discourse software marked this \u201chidden\u201d because this is your first post here. I\u2019ll fix it shortly\u2026     ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "None of the topics listed match."
                    ],
                    "Sentiment": 5.236111111111112
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "8",
                    "likes": "1",
                    "time": "20/09/2020-10:08:37",
                    "content": "Just an update, I\u2019ve completed the gas usage tests and as it (unfortunately) turns out, batched meta transactions are not cost-effective for M-to-M use cases (many senders, many recipients with 0 previous token balance). In case of 100 meta txs in a batch (100 senders, 100 recipients with 0-balance, all unique), the average gas per meta tx is 57\u2019000 (see Test #6), which is higher than a normal on-chain token transfer transaction (51\u2019000 gas). It\u2019s worth noting that this is the case where recipients haven\u2019t held any tokens before, so a \u201cworst-case\u201d scenario. In case all recipients had a non-zero token balance before, the average gas used per meta tx would be 42\u2019032.75 (see Test #7). Other use cases, such as 1-to-M (1 sender, many recipients - Test #4) and M-to-1 (many senders, 1 recipient - Test #5) have better results (for \u201czero-balance\u201d recipients). In case of 100 meta txs in a batch, the 1-to-M example used 33\u2019813.11 gas/meta tx, while the M-to-1 example had used 38\u2019025.83 gas/meta tx (34% and 25% gas reduction compared to an on-chain token tx, respectively). The link to complete test results is in the first post in this topic.  The system doesn\u2019t allow me to post new replies containing a URL address - @jpitts can you look into that? I\u2019m getting the \u201cSorry you cannot post a link to that host\u201d error.  At this point I don\u2019t think I should publish this as an EIP, because my main hypothesis has failed. But I see potential in the M-to-1 use case, especially as a bridge to other L2 solutions where people have to first deposit their funds to a constant address (this is where batched meta txs might come useful). Eager to hear your opinions!  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.58080808080808
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "9",
                    "likes": "0",
                    "time": "20/09/2020-23:16:22",
                    "content": "Thanks for doing this analysis, @cmango. In your tests, did the meta-nonce start at zero or some non-zero integer? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "10",
                    "likes": "0",
                    "time": "21/09/2020-08:24:54",
                    "content": "Well, AFAIK the mapping automatically \u201csets\u201d nonce to 0 for all possible addresses. When the first meta transaction (for a sender) is completed, the nonce is set to 1. In my M-to-M gas tests each sender only sends one meta transaction, and I think the first transaction is always the most expensive. So yeah, I could probably do another test where a sender already had made one meta tx (and the nonce is set to 1), and then test how much the second meta tx would cost. Did you had that in mind or something else? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.4375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "11",
                    "likes": "1",
                    "time": "21/09/2020-13:35:45",
                    "content": "IMO, updating a non-zero nonce is the most practical scenario (15k less gas per meta-tx) and will not fail your hypothesis. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.972222222222222
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "12",
                    "likes": "0",
                    "time": "22/09/2020-10:19:51",
                    "content": "Hmmm\u2026 Perhaps I could separate gas usage for a 1st meta transaction (of a sender) from gas usage of subsequent meta txs of the same sender\u2026 Practically, a relayer could charge the first-time senders (senders with a zero nonce) more than others, and not average it out (it\u2019s hard to know in advance what the average of a batch would be anyway). I\u2019ll redo the README and the results to account that. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 5.111111111111111
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "13",
                    "likes": "0",
                    "time": "22/09/2020-15:26:18",
                    "content": " Practically, a relayer could charge the first-time senders (senders with a zero nonce) more than others, and not average it out  This is line with how Ethereum handles CALL and SELFDESTRUCT to new accounts, they are more expensive. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 5.711363636363637
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "14",
                    "likes": "1",
                    "time": "22/09/2020-21:43:32",
                    "content": "Hey, just an update: I conducted another test (Test #8) where senders have a non-zero meta nonce value and receivers have a prior non-zero token balance. In this case the gas usage per meta tx drops quite significantly, to around 27\u2019000 gas/meta tx, which is almost 50% less than a normal on-chain token transfer (51\u2019000 gas). I guess now I could proceed with issuing an EIP, right? I\u2019m open to hear different opinions on this  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.715029761904762
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "15",
                    "likes": "0",
                    "time": "23/09/2020-02:15:00",
                    "content": "That sounds like the proper next step! ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "16",
                    "likes": "1",
                    "time": "23/09/2020-12:06:22",
                    "content": "I just thought of another thing to consider  Currently, my benchmark is an ERC-20 token transfer that costs 51\u2019000 gas. This is in case the recipient hasn\u2019t held token balance before. If the recipient has a prior token balance, the gas cost is 36\u2019000 gas (15\u2019000 less gas). So a meta transaction in Test #8 (from a sender with non-zero nonce, to a receiver with non-zero prior balance) shouldn\u2019t be compared to 51\u2019000 benchmark, but instead to 36\u2019000 gas benchmark. The Test #8 result is still lower than the benchmark (27\u2019000 gas vs 36\u2019000), but not that significantly anymore. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.208333333333334
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "17",
                    "likes": "0",
                    "time": "25/09/2020-19:06:19",
                    "content": "The EIP-3005 has been published now, comments are welcome either on the PR page or on Ethereum Magicians: https://github.com/ethereum/EIPs/pull/3005  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 9.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/jpitts",
                    "index": "18",
                    "likes": "0",
                    "time": "27/09/2020-06:36:20",
                    "content": "Congrats! Once the proposal has a number it is a good idea to create a new topic w/ EIP-XXXX in the title, and we can link back to this \u201cprimordial soup\u201d discussion. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party extending to proposal"
                    ],
                    "Sentiment": 6.3939393939393945
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/cmango",
                    "index": "19",
                    "likes": "1",
                    "time": "27/09/2020-08:24:11",
                    "content": "Thanks, Jamie! I\u2019ve opened a new topic here: EIP-3005: The economic viability of batched meta transactions ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.9772727272727275
                }
            ]
        }
    ],
    "group_index": "1147"
}