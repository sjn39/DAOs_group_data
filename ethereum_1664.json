{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eth-json-rpc-method-for-faster-block-updates-eth-getnextblock/8699",
            "title": "Eth JSON-RPC method for faster block updates: eth_getNextBlock ",
            "index": 8699,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "1",
                    "likes": "2",
                    "time": "23/03/2022-22:47:21",
                    "content": "Today, the JSON-RPC API exposes a few different methods to get blocks:  eth_getBlockByNumber eth_getBlockByHash  When using this API, the common way to get the latest block is to repeatedly poll for getBlockByNumber for the current_block_number + 1. We could gain additional performance for JSON-RPC consumers by allowing them a way to get an immediate notification upon the next block, via long polling, ie the request would not resolve until the result was ready. Proposed name: eth_getNextBlock. Maybe it could take an argument for a known block, so the host could return a block that builds on it as soon as it\u2019s available, allowing a graceful lazy walk up the block chain. This doesn\u2019t replace the utility of using Websocket based APIs, but can improve the performance for the JSON-RPC based interface. Thoughts? ",
                    "links": [],
                    "GPT-summary": "The author proposes a new JSON-RPC method called eth_getNextBlock to improve the performance of JSON-RPC consumers by allowing them to receive an immediate notification upon the next block via long polling. The proposal suggests that the method could take an argument for a known block, so the host could return a block that builds on it as soon as it\u2019s available, allowing a graceful lazy walk up the block chain. The author asks for thoughts on the proposal.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.166666666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/danfinlay",
                    "index": "2",
                    "likes": "1",
                    "time": "23/03/2022-22:54:58",
                    "content": "On reorgs: The method could take an optional parameter for the number of confirmations desired, servers could choose whether or not to implement that (to preserve open connection efficiency). Otherwise, this method would default to being understood as an optimistic (next known block) method, and consumers of it would need to handle the possibility of reorgs on their own. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is asking for feedback"
                    ],
                    "Sentiment": 6.0
                }
            ]
        }
    ],
    "group_index": "1664"
}