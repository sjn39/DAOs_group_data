{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/review-eip-6105-no-intermediary-nft-trading-protocol-with-mandatory-and-more-diverse-royalty-schemes/12171",
            "title": "Review: EIP-6105: No Intermediary NFT Trading Protocol With Mandatory and More Diverse Royalty Schemes ",
            "index": 12171,
            "category": [
                "Tokens"
            ],
            "tags": [
                "nft",
                "trading"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "1",
                    "likes": "1",
                    "time": "16/12/2022-07:56:25",
                    "content": "No Intermediary NFT Trading Protocol With More Diverse Royalty Schemes  Abstract Add a marketplace functionality to ERC-721 to enable non-fungible token trading without relying on an intermediary trading platform. At the same time, implement a mandatory, more diverse royalty scheme.  Motivation Most current NFT trading relies on an NFT trading platform acting as an intermediary, which has the following problems:  Security concerns arise from authorization via the setApprovalForAll function. The permissions granted to NFT trading platforms expose unnecessary risks. Should a problem occur with the trading platform contract, it would result in significant losses to the industry as a whole. Additionally, if a user has authorized the trading platform to handle their NFTs, it allows a phishing scam to trick the user into signing a message that allows the scammer to place an order at a low price on the NFT trading platform and designate themselves as the recipient. This can be difficult for ordinary users to guard against. High trading costs are a significant issue. On one hand, as the number of trading platforms increases, the liquidity of NFTs becomes dispersed. If a user needs to make a deal quickly, they must authorize and place orders on multiple platforms, which increases the risk exposure and requires additional gas expenditures for each authorization. For example, taking BAYC as an example, with a total supply of 10,000 and over 6,000 current holders, the average number of BAYC held by each holder is less than 2. While setApprovalForAll saves on gas expenditure for pending orders on a single platform, authorizing multiple platforms results in an overall increase in gas expenditures for users. On the other hand, trading service fees charged by trading platforms must also be considered as a cost of trading, which are often much higher than the required gas expenditures for authorization. Aggregators provide a solution by aggregating liquidity, but the decision-making process is centralized. Furthermore, as order information on trading platforms is off-chain, the aggregator\u2019s efficiency in obtaining data is affected by the frequency of the trading platform\u2019s API and, at times, trading platforms may suspend the distribution of APIs and limit their frequency. The project parties\u2019 royalty income is dependent on centralized decision-making by NFT trading platforms. Some trading platforms implement optional royalty without the consent of project parties, which is a violation of their interests. NFT trading platforms are not resistant to censorship. Some platforms have delisted a number of NFTs and the formulation and implementation of delisting rules are centralized and not transparent enough. In the past, some NFT trading platforms have failed and wrongly delisted certain NFTs, leading to market panic.   Solution In short, the NFT trading function is directly written into the NFT\u2019s own contract, and the royalty distribution mechanism is set. In this way, we have no intermediary, safer, 0 service fee, with network-wide liquidity and meet the project party of the copyright tax revenue, anti-censorship NFT trading protocol.  Mechanism Design It includes: ~ a method to list an item for sale or update an existing listing, whether private sale (only to a specific address) or public (to anyone), ~ a method to delist an item that has previously been listed, ~ a method to purchase a listed item while royalties are automatically distributed ~ a method to view a specific listing. Optional: Collection Offer Extention and Item Offer Extention This interface could also be adapted for ERC1155 standard, but might require adjustments Note: Compatibility with EIP6147 can be considered in the future. NFT can only be traded without guard  Other - Optional Blocklist Some viewpoints suggest that tokens should be prevented from trading on intermediary markets that do not comply with royalty schemes, but this standard only provides a functionality for non-intermediary NFT trading and does not offer a standardized interface to prevent tokens from trading on these markets. If deemed necessary to better protect the interests of the project team and community, they may consider adding a blocklist to their implementation contracts to prevent NFTs from being traded on platforms that do not comply with the project\u2019s royalty scheme. If community members support it, they may also block these platforms that charge higher service fees.   github.com   ethereum/EIPs/blob/master/EIPS/eip-6105.md --- eip: 6105 title: No Intermediary NFT Trading Protocol description: Adds a marketplace functionality with more diverse royalty schemes to ERC-721 author: 5660-eth (@5660-eth), Silvere Heraudeau (@lambdalf-dev), Martin McConnell (@offgridgecko), Abu <team10kuni@gmail.com>, Wizard Wang discussions-to: https://ethereum-magicians.org/t/eip6105-no-intermediary-nft-trading-protocol/12171 status: Review type: Standards Track category: ERC created: 2022-12-02 requires: 20, 165, 721, 2981 ---  ## Abstract  This ERC adds a marketplace functionality to [ERC-721](./eip-721.md) to enable non-fungible token trading without relying on an intermediary trading platform. At the same time, creators may implement more diverse royalty schemes.  ## Motivation  Most current NFT trading relies on an NFT trading platform acting as an intermediary, which has the following problems:       This file has been truncated. show original          Better and More Diverse Royalty Schemes   Better and More Diverse Royalty Schemes  Abstract By using modern tax theory, various royalty schemes are proposed to better fit the diversity of NFTs and industry development. Through research, most of the royalty schemes can be implemented without any improvements to EIP2981.   Royalty Scheme We replace the _salePrice in EIP2981 with the taxablePrice.  That is, the expression of  function royaltyInfo( uint256 _tokenId, uint256 _salePrice ) external view returns ( address receiver, uint256 roy\u2026     ",
                    "links": [
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6105.md",
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6105.md",
                        "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6105.md",
                        "https://ethereum-magicians.org/t/better-and-more-diverse-royalty-schemes/13070",
                        "https://ethereum-magicians.org/t/idea-a-marketplace-extension-to-erc721-standard/11975/21",
                        "https://ethereum-magicians.org/t/better-and-more-diverse-royalty-schemes/13070"
                    ],
                    "GPT-summary": "The post proposes EIP-6105, which adds a marketplace functionality to ERC-721 to enable non-fungible token trading without relying on an intermediary trading platform. It also implements a mandatory, more diverse royalty scheme. The post explains the motivation behind the proposal, the problems with current NFT trading, and the proposed solution. The post also discusses the mechanism design and optional blocklist. The post does not advertise the proposal, but rather explains it and invites feedback, criticism, and collaboration.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal"
                    ],
                    "Sentiment": 5.560871848739496
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "2",
                    "likes": "1",
                    "time": "16/12/2022-08:04:17",
                    "content": "I think the trading market of CryptoPunks is worth referring to. https://etherscan.io/address/0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb#code ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "4",
                    "likes": "0",
                    "time": "23/12/2022-05:53:28",
                    "content": "   Artnet News \u2013 22 Dec 22    NFT Marketplace OpenSea Has Blocked Cuban Artists and Collectors From Its... The world's biggest NFT marketplace OpenSea has delisted Cuban artists and collectors accounts to comply with U.S. sanctions law.  Est. reading time: 3 minutes        OpenSea is delisting Cuban artist and collector accounts from its platform.Everyone has the right to enjoy the convenience brought by NFT. This is one of the reasons we need No Intermediary NFT Trading Protocol ",
                    "links": [
                        "https://news.artnet.com/market/nft-marketplace-opensea-delisting-cuban-artists-us-sanctions-2235440"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.976190476190476
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "5",
                    "likes": "0",
                    "time": "09/02/2023-12:23:26",
                    "content": "Here are some previous discussions for reference.    Idea: A marketplace extension to ERC721 standard Tokens       \u201cNot your marketplace, not your royalties\u201d  OpenSea\u2019s latest code snippet gives them the ability to entirely control which platform your NFTs can (or cannot) be traded on.  We propose to add basic marketplace functionality to the ERC721  standard to allow projects creators to gain back that control.  It includes:  ~ a method to list an item for sale or update an existing listing, whether private sale (only to a specific address) or public (to anyone),  ~ a method to delist an item that has previ\u2026      Since lambdalf-dev doesn\u2019t have much time lately, it\u2019s best to discuss EIP6105 here to keep track of the latest progress. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "Author of proposal is asking for feedback",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.577777777777778
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "6",
                    "likes": "1",
                    "time": "17/02/2023-23:26:31",
                    "content": "\u201cNot your marketplace, not your royalties\u201d This is reflected in the recent royalty strategies adopted by Blur and OpenSea in the competition ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/william1293",
                    "index": "7",
                    "likes": "0",
                    "time": "27/02/2023-06:10:08",
                    "content": "The new royalty scheme, especially the value-added royalty, sounds good. I would appreciate further explanation. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.045454545454545
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/zt1991666",
                    "index": "8",
                    "likes": "1",
                    "time": "27/02/2023-07:33:56",
                    "content": "agree with you! it is annoying to trade in a series of marketplaces for NFT holders, and it is unreasonable that the marketplace decides how much royalty the creator can get. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal"
                    ],
                    "Sentiment": 3.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "9",
                    "likes": "0",
                    "time": "27/02/2023-10:06:10",
                    "content": "There is a discussion of more diverse royalty schemes here\uff1a    Better and More Diverse Royalty Schemes   Better and More Diverse Royalty Schemes  Abstract By using modern tax theory, various royalty schemes are proposed to better fit the diversity of NFTs and industry development. Through research, most of the royalty schemes can be implemented without any improvements to EIP2981.   Royalty Scheme We replace the _salePrice in EIP2981 with the taxablePrice.  That is, the expression of  function royaltyInfo( uint256 _tokenId, uint256 _salePrice ) external view returns ( address receiver, uint256 roy\u2026     ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 6.863636363636363
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Alex-Klasma",
                    "index": "10",
                    "likes": "0",
                    "time": "27/02/2023-20:31:14",
                    "content": "It seems that as long as you implement a ERC721.transfer function it will be impossible to enforce royalties. Yes it\u2019s true that you can block other marketplaces smart contracts, but eventually marketplaces will spring up that automatically generate new smart contracts (perhaps per-trade) to get around these blocks. Then what, you block autogenerated smart contracts by comparing ext_code_hash(address) with a \u201cblacklist\u201d of bad code hashes that don\u2019t respect royalties? Then the autogenerated smart contracts start adding randomization in order to get around these sort of hash blocking schemes. Etc. The only way to truly enforce royalties is to remove the ERC721.transfer function. Make a new transfer function that requires ETH to be sent in the other direction of the transfer, and then tax that. In order to prevent 0ETH or dust amts being sent in the other direction, you could pull the \u201cfloor price\u201d from this NFT collection (from Chainlink or other) and enforce that the ETH amount is at least some fraction of this floor price. But do we really want that? Perhaps we should look beyond royalties if they aren\u2019t really possible to enforce without really cumbersome changes or arms-race style blocklists. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.911369332421964
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "11",
                    "likes": "0",
                    "time": "28/02/2023-01:05:00",
                    "content": "    Alex-Klasma:  It seems that as long as you implement a ERC721.transfer function it will be impossible to enforce royalties. Yes it\u2019s true that you can block other marketplaces smart contracts, but eventually marketplaces will spring up that automatically generate new smart contracts (perhaps per-trade) to get around these blocks.   We must consider compatibility issues. Removing the transfer function will bring more inconvenience. Even if we do so, traders can still complete deals privately and transfer NFTs online at extremely low prices. However, I don\u2019t think we should assume that everyone is unethical. I believe that most people are willing to pay royalties while themselves benefiting from NFT. Therefore, designing standards from the perspective of increasing the \u201ccost of illegal activities\u201d is more appropriate.     Alex-Klasma:  Then what, you block autogenerated smart contracts by comparing ext_code_hash(address) with a \u201cblacklist\u201d of bad code hashes that don\u2019t respect royalties? Then the autogenerated smart contracts start adding randomization in order to get around these sort of hash blocking schemes. Etc.   Doing so would significantly increase the gas cost for traders and also increase their exposure to risk. You can think of it as increasing the \u201ccost of illegal activities.\u201d For an intermediary trading market, if it does not follow the royalty scheme, it may lose its users instead of gaining more users as a result. If we achieve this goal, the number of \u201cviolators\u201d in the market will be greatly reduced.     Alex-Klasma:  The only way to truly enforce royalties is to remove the ERC721.transfer function. Make a new transfer function that requires ETH to be sent in the other direction of the transfer, and then tax that. In order to prevent 0ETH or dust amts being sent in the other direction, you could pull the \u201cfloor price\u201d from this NFT collection (from Chainlink or other) and enforce that the ETH amount is at least some fraction of this floor price.   In addition to NFT trading, there are also financial scenarios such as NFT lending, NFT renting, etc. NFTs have a lot of utility. The method mentioned above would limit the value of NFTs only to NFT trading, which may not be appropriate.     Alex-Klasma:  we should look beyond royalties   I completely agree with that view. As you said, there is no perfect royalty solution. NFTs should have greater value and more room for imagination. Even with a royalty scheme, we can make some changes to adapt to the development of NFTs. Here are some studies on the new royalty scheme.We have already reserved scalability for this in the interface.    Better and More Diverse Royalty Schemes   Better and More Diverse Royalty Schemes  Abstract By using modern tax theory, various royalty schemes are proposed to better fit the diversity of NFTs and industry development. Through research, most of the royalty schemes can be implemented without any improvements to EIP2981.   Royalty Scheme We replace the _salePrice in EIP2981 with the taxablePrice.  That is, the expression of  function royaltyInfo( uint256 _tokenId, uint256 _salePrice ) external view returns ( address receiver, uint256 roy\u2026      But regardless, we must consider protecting the interests of creators and holders. Without them, innovation will no longer occur in the NFT space. Although we are discussing the royalty issue, I would like to add some thoughts on EIP-6105. The benefits of implementing it are not limited to enforcing royalty payments (it doesn\u2019t even provide a standard method for setting blocklists, haha). It provides a more secure, decentralized, censorship-resistant, and zero-service-fee way of trading NFTs. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.764840869007536
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "12",
                    "likes": "0",
                    "time": "28/02/2023-08:20:20",
                    "content": "About the EIP: Putting the marketplace stuff in the contract is how most contracts did it at the beginning(following punks) and it became very quickly obvious that is was a bad idea.  any wrong implementation or bug was impossible to fix and can lead to a dead collection managing a marketplace is complicated and is actually problematic in some countries ( need trade license etc\u2026) on-chain listing are quite expensive. an integrated marketplace never answers to the users needs: Bulk listing, bulk buying, bulk cancelling, auctions, cheap to buy, sell, edit, cancel etc\u2026 separation of concerns erc721 is already a big contract by itself  You need a market contract that can evolve with the rest. Which is why you can\u2019t really EIP marketplaces behaviors: the space is going to evolve. An interface that allows payment in erc20 is ok, but why not erc1155? Or another 721? We want cheap to use. We want auctions. We want bulk actions. We want off-chain order books. We want\u2026 This EIP would not answer the needs of the space, and might probably just do the opposite: lock us in one non-evolving scheme. Note: seeing the idea of Blocklist in an EIP proposal really hurts. About the royalties: You can\u2019t enforce them. You can\u2019t block operators to interact with your contracts if they want to. Blocklist, blocking transfers, etc\u2026 Can only hurt the space on the long run. As creators, we need to accept that we lost the battle, at least on ethereum, and need to find new ways of doing things, not try to lock us, and our collectors /users, in the old ones. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 4.766594516594517
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "13",
                    "likes": "0",
                    "time": "28/02/2023-09:19:08",
                    "content": "    dievardump:  any wrong implementation or bug was impossible to fix and can lead to a dead collection   This is exactly why we need to submit an eip.     dievardump:  managing a marketplace is complicated and is actually problematic in some countries ( need trade license etc\u2026)   If we are to discuss this issue within the legal framework of certain countries, then the current intermediary trading markets may not even be able to obtain local licenses. This is clearly not a problem that can be solved by technology alone. It may also go against the original intention of censorship resistance. Furthermore, in most countries, not complying with project royalty schemes is actually illegal.     dievardump:  on-chain listing are quite expensive   I believe that we should consider the overall cost. If we include the service fees paid in other trading markets in the transaction costs, we will find that the overall trading costs in other markets have been more expensive in the past. Additionally, if this EIP is applied to a Layer 2, then cost will not be an issue.     dievardump:  an integrated marketplace never answers to the users needs: Bulk listing, bulk buying, bulk cancelling, auctions, cheap to buy, sell, edit, cancel etc\u2026   This EIP aims to provide basic but flexible trading market functionality.     dievardump:  Note: seeing the idea of Blocklist in an EIP proposal really hurts.   This EIP does not actually provide a standard blacklist function, but I personally believe that this is a power that developers could have. This power is to protect their interests from being harmed.     dievardump:  As creators, we need to accept that we lost the battle, at least on ethereum, and need to find new ways of doing things, not try to lock us, and our collectors /users, in the old ones.   We should consider what better changes Ethereum and the community can bring to the world. We should also think about what attracts creators to join. For creators, if smart contracts cannot better protect their interests, then the bright future of blockchain is no different from the bad past they have faced. We also have no reason to convince more creators to join us. This industry needs more innovation, but the interests of everyone should be considered. Without the support of the honest and upright, innovation will not happen or may go in a bad direction. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.116280499803228
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "14",
                    "likes": "0",
                    "time": "28/02/2023-10:03:01",
                    "content": "    5cent-AI:  This is exactly why we need to submit an eip.   Well\u2026 no. EIP is about giving an Interface, not implementing it. That\u2019s why ERC2981 can do all the kind of royalties you mention: because the interface is flexible and the implementation is let to the implementers. We have seen with the first ERC721A and other implementations of Enumerable using loops, people will do really bad code if they only have an interface. Everyone will want to make their own implementation because they think other people\u2019s code s**k or is not optimized and we will end up with code that leads to bug, front-running attacks, etc\u2026 Fun fact: your proposal function buyItem(uint256 tokenId) external payable; is actually vulnerable to front-running attacks. Someone can list an item from 0.1, watch the pool, and when they see a user calls buyItem(tokenId) they can front-run and up the price to 10eth if the user has enough in their wallet. You fulfill a given order in a marketplace, you don\u2019t just \u201cbuy an id\u201d     5cent-AI:  Additionally, if this EIP is applied to a Layer 2, then cost will not be an issue.   Yes on a layer 2, but the EIP is for all E based contracts and for the moment, ETH is still the preferred one (and by far in term of valuable collectible/art). You yourself use \u201cETH\u201d instead of \u201ccurrent chain native token\u201d in your EIP comments And even that, Layer 2 today are \u201ccheaper\u201d but nothing says they will always stay like this. As long as the fees are paid with a token that has a price that can vary (which is the case for almost all of them, except Gnosis chain), there is nothing that says it will always stay cheap.     5cent-AI:  This EIP aims to provide basic but flexible trading market functionality.   Not seeing any flexibility here. It\u2019s expensive and hard to use. And it\u2019s really basic yes. No bulk actions, no way to cancel absolutely all orders is a no go in the current state of our space. That\u2019s how people trade.     5cent-AI:  For creators, if smart contracts cannot better protect their interests, then the bright future of blockchain is no different from the bad past they have faced. We also have no reason to convince more creators to join us.   We need to incentivize creators and find solutions/alternatives, but what you propose here can not do that as it has been said and proven enough times that it is not really possible to do that with the current state of the chain and definitely not the way you propose: nor with an integrated marketplace (because not flexible, cheap or featured enough), nor with any kind of blocklist. If a company  that makes $23m per months in fees wasn\u2019t able to make a blocklist work, not sure who will. Spreading the idea it can work is either lie to creators, or giving them false hopes. Creators adapt. We\u2019ve always been. If you tell us \u201cit\u2019s technically not possible\u201d we try new things, we find new ways, we innovate.     5cent-AI:  We should consider what better changes Ethereum and the community can bring to the world.   Bringing permissioned stuff like this is not what I would consider a \u201cbetter change\u201d. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.3482960837612
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "15",
                    "likes": "0",
                    "time": "28/02/2023-11:49:29",
                    "content": "    dievardump:  Fun fact: your proposal function buyItem(uint256 tokenId) external payable; is actually vulnerable to front-running attacks. Someone can list an item from 0.1, watch the pool, and when they see a user calls buyItem(tokenId) they can front-run and up the price to 10eth if the user has enough in their wallet.   Thank you very much for your feedback. If there is such a problem, we can include it in Security Considerations or resolve it.     dievardump:  No bulk actions, no way to cancel absolutely all orders is a no go in the current state of our space. That\u2019s how people trade.       5cent-AI:  For example, taking BAYC as an example, with a total supply of 10,000 and over 6,000 current holders   You may often perform bulk actions and cancel absolutely all orders. However, for most NFT holders, they are not necessary functions as they do not hold a large quantity of NFTs. As you mentioned, \u201cERC721 is already a big contract by itself,\u201d so we cannot implement all functions in one contract. If you do require the aforementioned functions, you can implement them in other contracts such as aggregators, which does not conflict with the implementation of the EIP.     dievardump:  We need to incentivize creators and find solutions/alternatives       dievardump:  Creators adapt. We\u2019ve always been.   In fact, a better royalty system was one of the ways we could incentivize creators to the crypto world. Now, you\u2019re saying we should make them adapt to a situation without royalties, which is strange. Creators can have more choices, but the power of choice is in their hands. We just have been trying to provide them with more and better choices.     dievardump:  Bringing permissioned stuff like this is not what I would consider a \u201cbetter change\u201d.   If you have an issue with the word \u201cpermission\u201d,  then it cannot explain the fact that in both ERC20 and ERC721, only with our \u201cpermission\u201d can someone transfer tokens from our account. What we should distinguish is what is a good permission and what is a bad permission. Rather than thinking that permissions are bad. Good permissions are those that better protect the interests of participants. It is still worth emphasizing that the blocklist is optional. This means that creators can decide for themselves, and it is not shameful for us to recognize that they have this power, nor can we prevent them from exercising it.     dievardump:  we try new things, we find new ways, we innovate   I hope more people will join. It will definitely bring about \u201cbetter change\u201d.  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.672354851031321
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dievardump",
                    "index": "16",
                    "likes": "0",
                    "time": "28/02/2023-19:56:13",
                    "content": "    5cent-AI:  we can include it in Security Considerations or resolve it.   You shouldn\u2019t include this kind of vulnerabilities in security considerations. You should change the interface so the vulnerability does not exist. Especially one as big as that.     5cent-AI:  ERC721, only with our \u201cpermission\u201d can someone transfer tokens from our account.   The approval is given by the NFT owner so they can interact with any protocol or even manage their assets from several wallets. It facilitates interoperability. The blocklist is managed by the creator/contract owner, which is de facto biased by their own believes/interest, to block operators (which can include owner of the NFTs). The first one is a delegation of rights by the rightful owner of the NFT, the second is a blockage by someone who shouldn\u2019t have much rights on the NFT (at least not about transfers) once it\u2019s not own by themselves. It\u2019s dangerous and yes it\u2019s mentioned as optional, but the problem is that it is mentioned at all. Especially since it can not work. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.1730769230769225
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "17",
                    "likes": "0",
                    "time": "01/03/2023-00:27:55",
                    "content": "We\u2019ll resolve it and mention it in the Security Considerations. You think blocklist may not be desirable, but many creators have told that they need it. That\u2019s why optional blocklist appears in the Rationale. Our value preference should not influence the decision of creators, because we are not creators. They need it, they adopt it. They don\u2019t need it, they don\u2019t adopt it. This is the true meaning of \u201coptional\u201d. And whether it is effective should be judged by the creators.     dievardump:  The blocklist is managed by the creator/contract owner, which is de facto biased by their own believes/interest, to block operators (which can include owner of the NFTs).   The style, pricing strategy, roadmap, and other aspects of NFT also reflect the interests and believes of creators and communities. We may choose not to purchase the NFTs that do not align with our interests and believes, but we should defend others\u2019 rights to have their own interests and believes. In addition, this issue can also be addressed through multi-signature. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 7.104166666666667
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/0x0",
                    "index": "18",
                    "likes": "0",
                    "time": "02/03/2023-02:48:12",
                    "content": " Mandatory, but more diverse royalty scheme Mandatory royalty can only be realized by writing the NFT trading function into its own contract. Meanwhile, a choice of A or B is better than a choice of have or nothing. By introducing the parameter benchmarkPrice in the listItem function, the _salePrice in the royaltyInfo(uint256 _tokenId, uint256 _salePrice) function in the ERC-2981 interface can be changed to taxablePrice, making the ERC-2981 royalty scheme more diverse. Here are several examples of royalty schemes: (address royaltyRecipient, uint256 royalties) = royaltyInfo(tokenId, taxablePrice)  Value-added Royalty (VAR, royalties are only charged on the part of the seller\u2019s profit\uff09: taxablePrice=max(salePrice- historicalPrice, 0)  Sale Royalty (SR): taxablePrice=salePrice  Capped Royalty(CR): taxablePrice=min(salePrice, constant)  Quantitative Royalty(QR, each token trading pays a fixed royalties): taxablePrice= constant   ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.659090909090909
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/5cent-AI",
                    "index": "19",
                    "likes": "0",
                    "time": "09/03/2023-01:50:54",
                    "content": "    dievardump:  Fun fact: your proposal function buyItem(uint256 tokenId) external payable; is actually vulnerable to front-running attacks.   function buyItem(uint256 tokenId, uint256 salePrice, address supportedToken) Front-running attacks can be prevented by checking the salePrice and supportedToken. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.666666666666667
                }
            ]
        }
    ],
    "group_index": "271"
}