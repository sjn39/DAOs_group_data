{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-6188-eip-6189-and-eip-6190-the-selfdestruct-trilogy/12232",
            "title": "EIP-6188, EIP-6189, and EIP-6190: The SELFDESTRUCT trilogy ",
            "index": 12232,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "evm",
                "opcodes",
                "cancun-candidate"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "1",
                    "likes": "3",
                    "time": "20/12/2022-21:37:29",
                    "content": "This is the discussion link for EIP-6188, EIP-6189, and EIP-6190. The goal of these EIPs is to modify SELFDESTRUCT in a mostly non-breaking manner to support Verkle trees and to limit the number of changes that are to be performed. ",
                    "links": [],
                    "GPT-summary": "The post discusses EIP-6188, EIP-6189, and EIP-6190, which aim to modify SELFDESTRUCT to support Verkle trees and limit the number of changes. The post is an explanation of the proposal, with some constructive criticism and questions from third parties.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 7.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "2",
                    "likes": "1",
                    "time": "20/12/2022-21:41:06",
                    "content": "First thing\u2019s first: why three EIPs? It\u2019s because I want them to be usable independently of each other. It\u2019s quite possible that EIPs (i.e. I am planning on making EIPs that) can use the magic value of EIP-6188 and don\u2019t necessarily need the selfdestruct stuff. Likewise, there could be a selfdestruct-like thing that would find EIP-6189 very useful, even if EIP-6190 isn\u2019t implemented. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.790625
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "3",
                    "likes": "0",
                    "time": "21/12/2022-16:08:53",
                    "content": "EIP-6188\u2019s behaviour with CREATE and CREATE2 is inconsistent with EIP-2681. The former allows the creation to proceed, but the latter does not. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "4",
                    "likes": "0",
                    "time": "21/12/2022-16:19:59",
                    "content": "Where does the 25 extra gas per hop come from? I\u2019d expect it to cost at least as much as a call plus a storage read. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.833333333333333
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "5",
                    "likes": "0",
                    "time": "21/12/2022-16:21:59",
                    "content": "I think there\u2019s an interesting attack here that needs some math to estimate. How much would it cost to get a self-destructed contract \u201cclose enough\u201d to a not-yet-CREATE2\u2019d contract to be able to use its storage? ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 7.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "6",
                    "likes": "0",
                    "time": "21/12/2022-22:49:50",
                    "content": "25 gas in addition to the EIP-2929 costs. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "7",
                    "likes": "0",
                    "time": "21/12/2022-22:51:54",
                    "content": "    SamWilsn:  I think there\u2019s an interesting attack here that needs some math to estimate. How much would it cost to get a self-destructed contract \u201cclose enough\u201d to a not-yet-CREATE2\u2019d contract to be able to use its storage?   Not sure. But I\u2019m not sure how it would let it \u201cuse\u201d its storage, if it simply forwards calls (after all, if it hasn\u2019t been CREATE2\u2019d yet, then it can\u2019t really be called, so its storage can\u2019t be modified this way). ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None"
                    ],
                    "Sentiment": 5.642857142857142
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "8",
                    "likes": "0",
                    "time": "25/12/2022-17:46:58",
                    "content": "What I\u2019m imagining is: an attacker computes where the target contract will be deployed with CREATE2. Then they brute force where to deploy their malicious contract using The Price is Right rules (close but less than the target contract\u2019s eventual address.) Then the malicious contract self-destructs multiple times to close the gap, eventually ending up where the target contract would\u2019ve been deployed. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.198412698412699
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "9",
                    "likes": "0",
                    "time": "25/12/2022-23:48:58",
                    "content": " Then the malicious contract self-destructs multiple times to close the gap, eventually ending up where the target contract would\u2019ve been deployed.  \u2026 causing the CREATE2 to either succeed, deploying the contract at a different address that the original address points to, or causing the CREATE2 to fail. I don\u2019t see an issue here. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.84375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "10",
                    "likes": "0",
                    "time": "26/12/2022-00:01:27",
                    "content": "I could transfer ownership of a token to an address that hasn\u2019t been created yet (perhaps I don\u2019t want to reveal the implementation, or don\u2019t want to pay for the deployment until I need to transfer the token again.) Someone could deploy other code to the same address. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None"
                    ],
                    "Sentiment": 4.6875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "11",
                    "likes": "0",
                    "time": "26/12/2022-16:30:12",
                    "content": "Fair enough. I\u2019ll calculate that. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 6.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "12",
                    "likes": "0",
                    "time": "26/12/2022-16:49:41",
                    "content": "As more and more contracts get selfdestructed sequentially, the gas cost for each selfdestruct increases linearly. So this attack will take polynomial gas as the number of hops increases. Okay, so assuming that the attacker is willing to spend $E$ ether, with a gas price of $G$, then an upper bound for the maximum number of hops $n$ that the attacker can perform (ignoring the cost of creating the contracts and calling the function that selfdestructs) is given by: $$\frac{10^9E}{G}=\frac{5000n(n+1)}{2}+\frac{100(n-1)n}{2}+2600n$$ Solving for the positive value of $n$: $$n = \frac{1}{102}\frac{\\sqrt{10201 G + 4080000000 E}}{\\sqrt{G} - 101}$$ So using 100 ether with a gas cost of 20, the attacker could perform a maximum of 1,399 hops. Not counting the cost of deploying the contracts. But even the implausible 1,400x risk of an address collision is still safe due to the minuscule probabilities involved. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.470170454545454
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "13",
                    "likes": "0",
                    "time": "05/01/2023-12:53:02",
                    "content": "@SamWilsn do you have any other comments/concerns? ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 4.375
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "14",
                    "likes": "0",
                    "time": "06/01/2023-20:19:37",
                    "content": "This is good content for the Security Considerations section. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 8.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/SamWilsn",
                    "index": "15",
                    "likes": "0",
                    "time": "06/01/2023-20:26:22",
                    "content": " The gas cost of SELFDESTRUCT is increased by 5000 for each alias contract that forwarded to the contract being self-destructed.  How is this calculated? Assume there are contracts at 0x5 and 0x6, then if I self-destruct the contract at 0x5, 0x5 becomes an alias contract for 0x7, correct? I then perform a CREATE2 and redeploy the contract at 0x5 (now stored at 0x7.) Finally I call the contract at 0x7 directly and cause it to self-destruct. I don\u2019t think this is functionally a problem since the next call into 0x5 will update the storage slot, but it does make me question:     Pandapip1:  As more and more contracts get selfdestructed sequentially, the gas cost for each selfdestruct increases linearly.   ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 6.1
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "16",
                    "likes": "0",
                    "time": "07/01/2023-00:16:38",
                    "content": "Now that I think of it - why don\u2019t I just point it to the contract that would be CREATE\u2019d? This would avoid all of these issues by using something we already know to be secure. ",
                    "links": [],
                    "GPT-discussion-categories": [],
                    "Sentiment": 7.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/Pandapip1",
                    "index": "17",
                    "likes": "0",
                    "time": "11/01/2023-18:32:38",
                    "content": "Adding cancun-candidate tag. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.0
                }
            ]
        }
    ],
    "group_index": "277"
}