{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/separate-solidity-classes-from-contracts/4619",
            "title": "Separate Solidity classes from contracts? ",
            "index": 4619,
            "category": [
                "Primordial Soup"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Jules",
                    "index": "1",
                    "likes": "0",
                    "time": "15/09/2020-08:54:19",
                    "content": "I\u2019m suggesting that in a future version of Solidity, we explicitly separate classes from Solidity contracts. That would mean that we could build a contract solution using 1 contract and a collection of classes. I have written articles about Solidity class features and other Solidity foibles (in medium.com). In conclusion, I think it would be very useful to have useable classes similar to non-blockchain languages: class X [is Y] { // non-payable     constants     enums     types (I wish!)     functions     blah }  contract MyContract is Z { // payable    X x;    blah }  Any helpful comments please. ",
                    "links": [],
                    "GPT-summary": "The author is proposing that Solidity classes be separated from contracts to allow for building a contract solution using one contract and a collection of classes. The author has written articles about Solidity class features and other Solidity foibles. The author is asking for helpful comments.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 4.952500000000001
                }
            ]
        }
    ],
    "group_index": "1148"
}