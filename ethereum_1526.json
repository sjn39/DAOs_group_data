{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-4511-execute-past-semantic-abort/7650",
            "title": "EIP-4511: Execute Past Semantic Abort ",
            "index": 7650,
            "category": [
                "EIPs",
                "Core EIPs"
            ],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/tsutsu",
                    "index": "1",
                    "likes": "0",
                    "time": "01/12/2021-06:11:06",
                    "content": "Allow clients to defer detection and enforcement of EVM revert conditions like out-of-gas, stack-overflow, etc. from the interpretation-step where the condition first applies, to some time later in the same call frame. By removing these checks from the hot loop of EVM bytecode interpretation, a number of currently-impractical interpreter optimization strategies \u2014 such as threaded-code interpretation, or bytecode JIT \u2014 become practical.   github.com/ethereum/EIPs         EIP-4511: Execute Past Semantic Abort   ethereum:master \u2190 tsutsu:eip-execute-past-semantic-abort            opened 11:42PM - 30 Nov 21 UTC               tsutsu             +116 -0       Proposes a \"declared explicit intent to not standardize\" a certain type of execu\u2026tion tracing, in order to leave EVM implementations free to optimize how often they detect certain error conditions.       ",
                    "links": [
                        "https://github.com/ethereum/EIPs/pull/4511",
                        "https://github.com/tsutsu",
                        "https://github.com/ethereum/EIPs/pull/4511/files",
                        "https://github.com/ethereum/EIPs/pull/4511"
                    ],
                    "GPT-summary": "The post proposes a new Ethereum Improvement Proposal (EIP-4511) that allows clients to defer detection and enforcement of EVM revert conditions to some time later in the same call frame. This would enable certain interpreter optimization strategies that are currently impractical. The author explains the proposal and its benefits, while also inviting constructive criticism and auditing from third parties.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Interoperability and Scalability",
                        "None",
                        "None",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal"
                    ],
                    "Sentiment": 5.414285714285715
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/matt",
                    "index": "2",
                    "likes": "0",
                    "time": "06/12/2021-04:15:11",
                    "content": "Hi @tsutsu \u2013 not super familiar with these optimization strategies, but I don\u2019t understand why threaded-code interpretation is impractical? evmone uses indirect call threading rather efficiently. There was also a JIT project a while back. ",
                    "links": [
                        "https://github.com/ethereum/evmjit"
                    ],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party asking questions about proposal"
                    ],
                    "Sentiment": 5.347222222222222
                }
            ]
        }
    ],
    "group_index": "1526"
}