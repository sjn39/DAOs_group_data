{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/sharding-design-with-tight-beacon-and-shard-block-integration-danksharding/8291",
            "title": "Sharding design with tight beacon and shard block integration \"Danksharding\" ",
            "index": 8291,
            "category": [],
            "tags": [
                "NONE"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/dankrad",
                    "index": "1",
                    "likes": "2",
                    "time": "14/02/2022-17:01:01",
                    "content": "This is a discussion thread for feedback to the new sharding proposal:  Overview document: New sharding design with tight beacon and shard block integration - HackMD  Implementation PR: https://github.com/ethereum/consensus-specs/pull/2792  Ethereum research workshop: \u201cDude, what\u2019s the Danksharding situation?\u201d Workshop [2022/2/14] - YouTube  Workshop slides: Dude, What's the Danksharding situation? - Google Slides   ",
                    "links": [
                        "https://github.com/ethereum/consensus-specs/pull/2792",
                        "https://www.youtube.com/watch?v=e9oudTr5BE4",
                        "https://docs.google.com/presentation/d/1-pe9TMF1ld185GL-5HSWMAsaZLbEqgfU1sYsHGdD0Vw",
                        "https://ethereum-magicians.org/t/eip-4844-shard-blob-transactions/8430"
                    ],
                    "GPT-summary": null,
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.156926406926407
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/potuz",
                    "index": "2",
                    "likes": "0",
                    "time": "14/02/2022-19:12:38",
                    "content": "I want to voice here a concern about KZG commitments, both in this implementation or the previous one for data availability. I worry that there aren\u2019t that many members of this community that can actually vet the mathematics of it. There are plenty of blockchain devs that can take KZG as a blackbox, just as BLST signature verification for example, and vet for the validity and security of the rest of the implementation. There are plenty even that have basic classes on number theory or algebraic geometry that can easily understand KZG by itself but from there to vet for the security of it requires a specialization in cryptography. Now some researchers from the EF that are qualified to make these statements, like Danrad Feist or Justin Drake can state \u201cKZG are fine and can be taken as a blackbox\u201d, but in order to vet this very statement a strong cryptography background is required. I don\u2019t mind taking as a blackbox elliptic curve cryptography or hashing algos like SHA256 that we currently use and that have been battle tested in production for over 30 years, ubiquitous in every system from ssh to our phones checksuming webpages. But KZG\u2019s paper is 10 years old, with less than 100 citations (I understand that the whole theory of EC pairings has been more vetted though) and I doubt it has been battle tested not nearly as the cryptographic primitives that we currently depend on. I find quite concerning that we would have this \u201cblackbox\u201d in a blockchain that currently secures assets worth billions of any fiat currency. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.794117647058824
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dankrad",
                    "index": "3",
                    "likes": "2",
                    "time": "16/02/2022-06:39:13",
                    "content": "I believe most developers can understand KZG commitments to an extent that should make it comfortable to work with them and introduce them to the base layer. As far as I can see there are three components to this:  Elliptic Curve Pairings. These, I would suggest to most people to take as a black box. We are already accepting them for the beacon chain (BLS signatures), so this is not a new assumption. It is, however, by far the most complex one. Even Costello\u2019s \u201csimple\u201d introduction (https://static1.squarespace.com/static/5fdbb09f31d71c1227082339/t/5ff394720493bd28278889c6/1609798774687/PairingsForBeginners.pdf) comes to 148 pages. Finite field/polynomial math. I think the math required is within reach of a dedicated Ethereum dev. My explainer tries to bridge the gap here: KZG polynomial commitments | Dankrad Feist  There is one additional assumption, the q-strong DH assumption (from the powers [s], [s^2], [s^3], \u2026, [s^q] in the group you cannot find [1/(s-x)]). This is a cryptographic assumption that has been around in some form since 2004 (https://eprint.iacr.org/2010/215.pdf).  I think since we have \u201cswallowed\u201d pairings, the only major question would be about the q-strong DH assumption. My personal feeling is that it is relatively simple and well established (all pairing-based zero-knowledge proof systems rely on it), but I will leave a more detailed analysis to cryptographers. ",
                    "links": [
                        "https://dankradfeist.de/ethereum/2020/06/16/kate-polynomial-commitments.html",
                        "https://eprint.iacr.org/2010/215.pdf"
                    ],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.452125420875421
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/CryptoWhite",
                    "index": "4",
                    "likes": "0",
                    "time": "19/02/2022-00:00:08",
                    "content": "I wonder if the final implementation of Danksharding is compatible with Optimistic Rollups. As I know, Optimistic Rollups need to access a lot of L2 tx data when validating fraud proofs. But in Danksharding these data are located in shardings and the EVM in the exec layer do not have direct access to them. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.25
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/vbuterin",
                    "index": "5",
                    "likes": "1",
                    "time": "20/02/2022-16:16:45",
                    "content": "    potuz:  I don\u2019t mind taking as a blackbox elliptic curve cryptography or hashing algos like SHA256 that we currently use and that have been battle tested in production for over 30 years, ubiquitous in every system from ssh to our phones checksuming webpages. But KZG\u2019s paper is 10 years old, with less than 100 citations (I understand that the whole theory of EC pairings has been more vetted though) and I doubt it has been battle tested not nearly as the cryptographic primitives that we currently depend on. I find quite concerning that we would have this \u201cblackbox\u201d in a blockchain that currently secures assets worth billions of any fiat currency.   If you take EC and pairings as a given, KZG is pretty simple to understand: it\u2019s just generating a set of points T_0 = G, T_1 = G*s, T_2 = G*s^2 \u2026 T_n = G*s^n with a forgotten secret s as the setup, and then committing to a polynomial P(x) = \u03a3 c_i * x^i (where c_i are the coefficients) by taking \u03a3 c_i * T_i. It\u2019s a \u201cuse of existing ingredients\u201d that\u2019s significantly less complicated than many other uses of existing ingredients that Ethereum already has. EC pairings are definitely highly complicated, but the Ethereum consensus layer depends on them already for BLS signatures and the RANDAO. If we could later remove the pairing dependencies in both of these cases, I would love that, but it will take a while to figure out the right way to do it, and continuing to use pairing-based crypto is far simpler in the meantime. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.196995464852607
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/dankrad",
                    "index": "6",
                    "likes": "0",
                    "time": "08/03/2022-22:39:45",
                    "content": "    CryptoWhite:  I wonder if the final implementation of Danksharding is compatible with Optimistic Rollups. As I know, Optimistic Rollups need to access a lot of L2 tx data when validating fraud proofs. But in Danksharding these data are located in shardings and the EVM in the exec layer do not have direct access to them.   Actually nothing changes here \u2013 optimistic rollups do not access historical data inside the EVM, there is no such opcode. Instead, when there is a fraud proof, they bring it back on chain as calldata, together with a proof (a witness) of correctness. Exactly the same principle works for sharded data. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.21875
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/CryptoWhite",
                    "index": "7",
                    "likes": "0",
                    "time": "09/03/2022-01:08:30",
                    "content": "Get it. The shard looks like extended storage space mounted to the Ethereum OS with blob tx as its mount point. Each shard is kept in a part of nodes but everyone can still access it. Later people can use some sharded data to generate fraud proofs (in this case one needs to load the sharded data back to the chain) and validity proofs (especially when the rollup state is lost). The new Danksharding is much better than the original sharding design. ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 5.842803030303029
                }
            ]
        }
    ],
    "group_index": "1602"
}