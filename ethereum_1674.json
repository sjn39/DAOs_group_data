{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/a-problem-with-dynamic-nfts/8734",
            "title": "A problem with Dynamic NFTs ",
            "index": 8734,
            "category": [
                "EIPs"
            ],
            "tags": [
                "token",
                "nft",
                "dynamic"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/Saarule",
                    "index": "1",
                    "likes": "1",
                    "time": "28/03/2022-15:09:36",
                    "content": "TL;DR There is an issue with the way opensea and other NFT marketplaces retrieve their metadata and present it to their users when it comes to Dynamic NFTs. Recently I built a few projects that are focused on dynamic NFTs. When I created my most recent NFT game (Aquatic Wars), I found an issue with how opensea retrieves and presents the data to its users. Opensea\u2019s main assumption is that all NFTs are static, which means they are retrieving data solely on the user\u2019s request. That is a big problem for dynamic NFTs as their metadata and image might very often frequently change. Let\u2019s have a look at Aquatic Wars, as it emphasizes the importance of the issue. This project has three levels of dynamicness to the player\u2019s NFTs. Some properties in the appearance of the NFT are changing every day (The number of days appears on the top side of the NFT\u2019s image) some properties only change when there is an interaction with the smart contract (When you eat someone\u2019s fish, their fish is disappearing from the NFT\u2019s image) and some should change (at least in theory) every millisecond (The inner color of the fish should change with every call to the tokenURI function). As you can see, by going to opensea, the data is not refreshing often enough in order to present all those changes to the user, and hence, making the game unplayable. In fact, the NFT\u2019s metadata as it appears to the user is not changing at all, unless, of course, if the user is requesting that. That is far from optimal and doesn\u2019t make sense from a developer and a user perspective. What I propose, is a new protocol and EIP for dynamic NFTs that can extend the ERC721 standard so that NFT marketplaces will know when the collection is a collection of dynamic NFTs and will know to retrieve the metadata at a faster rate as predefined by the developer. I would love to hear your thoughts on the topic. I also think I know how to solve this issue elegantly for future developers through an EIP and a new standard for dynamic NFTs, and would love some help from someone who has already been through the process of creating a successful EIP as this is the first time I\u2019m creating one. ",
                    "links": [],
                    "GPT-summary": "The author of the post discusses the issue with the way opensea and other NFT marketplaces retrieve and present metadata for dynamic NFTs. The author proposes a new protocol and EIP for dynamic NFTs that can extend the ERC721 standard so that NFT marketplaces will know when the collection is a collection of dynamic NFTs and will know to retrieve the metadata at a faster rate as predefined by the developer. The author also seeks feedback and collaboration on the proposal.",
                    "GPT-proposal-categories": [
                        "Smart contract updates",
                        "Token economics",
                        "Interoperability and Scalability",
                        "Privacy, Security and risk management",
                        "None"
                    ],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "None"
                    ],
                    "Sentiment": 5.372334956709956
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/JamesB",
                    "index": "2",
                    "likes": "0",
                    "time": "10/11/2022-06:00:36",
                    "content": "Hi Saarule, we have also run into this issue which we have fixed locally in our wallet (AlphaWallet) however agree that we can push an update for this. I would propose that we add a \u2018MetadataUpdate\u2019 event like this: event MetadataUpdate(uint256 tokenId); event ContractMetadataUpdate();  Both events are needed, for example an \u2018NFT reveal\u2019 style art exhibition where minters/receivers just receive a blank NFT until the artwork is revealed at a later data. Also, the contract art may update - this is something that Opensea doesn\u2019t handle at all; if you update contract metadata it never refreshes on Opensea. Updating Token metadata can be refreshed manually, but to optimise this we should add the MetadataUpdate event. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.125
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/alenhorvat",
                    "index": "3",
                    "likes": "0",
                    "time": "10/11/2022-06:25:36",
                    "content": "Hi. What you\u2019re describing is an issue with a platform, in this case, OpenSea. The issue you present is directly linked to an issue I described here: NFT minting standardisation - protecting authors, buyers, sellers Namely, if the NFT changes, how do you ensure the owner, and later owner/buyer/seller, that the content for which he/she bought the NFT did not change? IMO, the problem is solvable by a) assigning a unique id to the item that never changes and ensuring everyone that the id is linked to a specific item (within the game, for example) b) using the image_uri or by adding a dynamic_image_uri attribute to the metadata, which would signal that the content might change In my view, point a) is crucial to prevent stealing NFTs, misclaiming authorship, and other tricks on owners/buyers/sellers. Edit: Another, probably more proper, solution would be to create 1 NFT per unique attribute in the game and introduce an \u201caggregated NFT\u201d \u2013 an NFT, that is composed of several other NFTs. This way you can ensure that the items linked to NFTs don\u2019t change, yet you can build an NFT (aggregated NFT) that represents a character in the game. ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party extending to proposal",
                        "3rd party asking questions about proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 4.966666666666667
                }
            ]
        }
    ],
    "group_index": "1674"
}