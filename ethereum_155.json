{
    "poll_list": [],
    "discourse_list": [
        {
            "thread_link": "https://ethereum-magicians.org/t/eip-5748-automatic-token-approval-expiration/11185",
            "title": "EIP-5748 Automatic Token Approval Expiration ",
            "index": 11185,
            "category": [
                "Tokens"
            ],
            "tags": [
                "token-approval"
            ],
            "content": [
                {
                    "author_link": "https://ethereum-magicians.org/u/turanzv",
                    "index": "1",
                    "likes": "2",
                    "time": "05/10/2022-00:58:26",
                    "content": "Outstanding token approvals increase a token holder\u2019s exposure to vulnerabilities and zero days in contract code. We (Go+ Security, Jeff Hall, Xavi @XaaaaavitheFool , and myself) and our friends in the Web3 security space have been discussing making expiration times standard on token contracts, so that tokens can expire automatically. This would reduce the exposure to outstanding token approvals and restrict exposure to vulnerabilities across transaction. The PR with relevant implementation: Add EIP-5748: Approval Expiration for EIP-20 Tokens by Mr-Lucky \u00b7 Pull Request #5748 \u00b7 ethereum/EIPs \u00b7 GitHub ",
                    "links": [],
                    "GPT-summary": "The author of the post is explaining a proposal to add expiration times to token contracts to reduce exposure to vulnerabilities. A 3rd party is giving constructive criticism and suggesting collaboration on the proposal. The post also serves as an advertisement for the proposal.",
                    "GPT-proposal-categories": null,
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "3rd party or author is advertising proposal"
                    ],
                    "Sentiment": 6.75
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/XaaaaavitheFool",
                    "index": "2",
                    "likes": "0",
                    "time": "08/10/2022-10:48:59",
                    "content": "Guys, we are happy to answer any questions about the proposal\uff01  ",
                    "links": [],
                    "GPT-discussion-categories": null,
                    "Sentiment": 9.0
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/chrisfarms",
                    "index": "3",
                    "likes": "0",
                    "time": "08/10/2022-19:35:25",
                    "content": "I think allowing wallets to surface information about what is being approved is important. So I think maybe it would be better if either:  it intentionally breaks/reverts on use of the legacy version or there should be a standard way to fetch the default value used for the legacy call so it can be presented to the user  ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "3rd party giving constructive criticism of proposal",
                        "3rd party or author wants to collaborate on proposal",
                        "3rd party is advertising proposal"
                    ],
                    "Sentiment": 6.5
                },
                {
                    "author_link": "https://ethereum-magicians.org/u/turanzv",
                    "index": "4",
                    "likes": "0",
                    "time": "11/10/2022-04:35:00",
                    "content": "Agreed, would be great to see wallets expose users to this security principle. Getters and setters for the default value is definitely missing in the current iteration. We\u2019ll push the update  In the name of having an accessible bar for minimum compliance, I like the idea of a getter to pre-empt use of the legacy call rather than a hard break. Ideally wallets would be able to be a custodian of a user-defined default as well. I\u2019m not sure how hard breaks would affect adoption of the EIP ",
                    "links": [],
                    "GPT-discussion-categories": [
                        "Author of proposal is explaining proposal",
                        "3rd party is advertising proposal",
                        "None of the topics listed match"
                    ],
                    "Sentiment": 5.856481481481481
                }
            ]
        }
    ],
    "group_index": "155"
}